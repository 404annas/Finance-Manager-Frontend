PROJECT STRUCTURE:
====================

FILE CONTENTS:
==============

    ├── .env
    ├── .gitignore
    ├── README.md
    ├── code-to-txt.py
    ├── combined_project_code.txt
    ├── eslint.config.js
    ├── index.html
    ├── package-lock.json
    ├── package.json
    ├── vercel.json
    ├── vite.config.js

--- START OF FILE: .env ---

VITE_CURRENCY_CONVERTER_BASE_URL=https://open.er-api.com/v6/latest
# VITE_API_URL=http://localhost:5000
VITE_API_URL=https://finance-manageb-b.vercel.app

code-to-txt.py

--- END OF FILE: .env ---

================================================================================


--- START OF FILE: .gitignore ---

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


--- END OF FILE: .gitignore ---

================================================================================


--- START OF FILE: README.md ---

# 💰 FINANCE-APP

**FINANCE-APP** is a modern **Finance Manager Web Platform** designed for secure, seamless, and efficient financial management.  
A **mobile application** built with **React Native** will be released soon for users on the go.  

The project leverages **React 19 + Tailwind CSS 4** and modern libraries to provide a sleek, responsive, and interactive **dashboard system**.  
The backend is powered by **Node.js, Express, and MongoDB**, ensuring speed, scalability, and reliability.  

Users can **create accounts, log in securely, manage payments, transactions, reminders, and collaborations** from a beautifully designed, real-time dashboard.  

---

## ✨ Key Features

### 👤 User Dashboards
- Personalized and responsive dashboards for **dynamic financial insights**.  
- Interactive charts using **Recharts, React-ChartJS-2, Nivo (Pie & Radial Bar)**.  
- Real-time updates powered by **TanStack Query** and **Socket.io**.  
- TanStack handles **smart caching**, **auto refetching**, and **data synchronization**.
- Socket.io delivers **instant updates** for payments, transactions, and user activities.

### 💳 Payment Management
- Add and track payments with statuses: **Completed, Pending, Processing, or Custom**.  
- Schedule payments with **date & time reminders**.  
- Automated email reminders via **Nodemailer**.  
- Real-time synchronization using **Socket.io** for instant dashboard updates.

### 💱 Transactions
- Categorized transactions management.  
- Modern, interactive tables using **React Data Table Component**.  
- Always synced with backend updates via **TanStack Query** and WebSocket events.  

### 📧 Reminders & Notifications
- Send reminders to specific users via email.  
- Keep business partners or team members aligned on deadlines.  
- Real-time UI updates when reminders are sent or payments are updated.

### 🤝 Collaborative Payments
- Invite users or business partners to contribute to payments.  
- Manage participants via **Users** and **Recipients** menus.  
- Create shared categories for group payments.  
- Automatic **email + real-time Socket notifications** for all participants.

### 🔐 Authentication & Security
- Finance apps require **robust security** — FINANCE-APP ensures data protection and safe authentication.  
- Secure login/registration using:  
  - **JWT (JSON Web Tokens)** for authentication.  
  - **bcrypt** for password hashing.  
  - **Role-Based Access Control (RBAC)** for Admin and User privileges.  
  - **Secure cookies & HTTPS** for encrypted communication.  
- Guarantees credentials, transactions, and records remain **private and tamper-proof**.

### 🧠 TanStack Query Integration
- All asynchronous requests are managed using **TanStack Query** (React Query).  
- Ensures **real-time synchronization** between client and server with **minimal API calls**.  
- Handles background refetching, caching, and automatic data invalidation for smoother UX.  
- Custom hooks inside the `/hooks` folder make logic **reusable**, **clean**, and **scalable** —  
  for example:
  - `useFetchPayments.js`  
  - `useAddTransaction.js`  
  - `useInviteUser.js`  
  - `useDeleteUser.js`  
  - `useRealTimeUpdates.js` (via Socket.io)  

### ⚡ Real-Time Updates (Socket.io)
- **Socket.io** ensures all users see **instant changes** (no refresh needed).  
- Used for:
  - Payment creation/deletion.
  - Transaction updates.
  - Shared user collaboration.
  - Live notifications.
- Makes the dashboard feel **interactive and modern** just like a live finance tracking app.

### 📞 Contact & Support
- Built-in **Contact Us form** for queries, bug reports, or feedback.  
- Direct support channel for timely issue resolution.

---

## 🛠️ Tech Stack

### Core
- **Frontend**: React 19, Tailwind CSS 4 (`@tailwindcss/vite`)  
- **Backend**: Node.js, Express, MongoDB  
- **Mobile (upcoming)**: React Native  

### Libraries & Tools
- **UI & Styling**: Tailwind CSS, Lucide-React, React Icons  
- **Charts & Visualization**: Recharts, React-ChartJS-2, @nivo/pie, @nivo/radial-bar  
- **Animations**: Framer Motion  
- **Forms & Inputs**: React Datepicker  
- **Tables**: React Data Table Component  
- **State & Data Management**: TanStack Query, React Context API  
- **Real-Time Communication**: Socket.io  
- **Routing**: React Router DOM  
- **Utilities**: Axios, Sonner (toast notifications)  
- **Communication**: Nodemailer  

---

## 📂 Project Structure

```
FINANCE-APP/
|
├── public/              # Static assets available to the browser
├── src/
│   ├── assets/          # Images, icons, and other media
│   ├── components/      # Reusable UI components (e.g., Sidebar, Hero)
│   ├── hooks/           # Making Business Logic & Ui Logic Seperate via TanStack
│   ├── context/         # Global state management (AppContext.jsx)
│   ├── routes/          # Application routing configuration
│   ├── screens/         # Top-level screen components (Dashboards)
│   ├── App.jsx          # Main application component and router setup
│   └── main.jsx         # Application's primary entry point
|
├── .env                 # Environment variables configuration
├── .gitignore           # Specifies intentionally untracked files
├── index.html           # The main HTML template for Vite
├── package.json         # Project metadata and dependencies
└── vite.config.js       # Vite build and server configuration
```

---

## 🖥️ Usage Flow

1. 🔑 **User Authentication** → Register/Login securely with encrypted credentials.  
2. 📊 **Dashboard Access** → View charts, tables, and real-time financial data.  
3. 💳 **Manage Payments** → Add, track, and schedule payments with reminders.  
4. 🔔 **Notifications** → Receive automated email and live Socket alerts.  
5. 💱 **Transactions** → Add categorized transactions with instant updates.  
6. 🤝 **Collaboration** → Invite users, manage group payments, and share dashboards.  
7. 📧 **Reminders** → Send emails for specific payment/transaction cases.  
8. ⚡ **Live Sync** → Dashboard auto-refreshes via **TanStack Query** & **Socket.io**.  
9. 📞 **Support** → Contact management for queries, bugs, or issues.  

---

## 📬 Contact

For any queries, suggestions, or issues, feel free to reach out:  

📧 **Email**: annasking601@gmail.com  
🌐 **Project Link**: [FINANCE-APP](https://finance-manage-kappa.vercel.app/)

--- END OF FILE: README.md ---

================================================================================


--- START OF FILE: code-to-txt.py ---

import os
import argparse

# --- Configuration ---
EXCLUDED_DIRS = {
    '.git',
    'node_modules',
    '__pycache__',
    'dist',
    'build',
    '.vscode',
    '.idea',
    'test-reports',
    'tests','reporters'
}

EXCLUDED_EXTENSIONS = {
    '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg',
    '.pdf', '.doc', '.docx', '.xls', '.xlsx',
    '.zip', '.rar', '.gz', '.tar',
    '.exe', '.dll', '.so', '.o', '.jar',
    '.mp4', '.mov', '.avi',
    '.mp3', '.wav','.test.js'
    '.lock'
}

def process_project(root_dir, output_file_path):
    """
    Project ko process karta hai: pehle structure banata hai, phir content.
    Yeh debugging messages bhi print karega.
    """
    print("--- SCRIPT STARTING ---")
    print(f"Project Directory: {os.path.abspath(root_dir)}")
    print(f"Excluded Directories: {EXCLUDED_DIRS}")

    # Pehle purani output file ko delete kar dein (agar maujood hai)
    if os.path.exists(output_file_path):
        os.remove(output_file_path)
        print(f"Deleted old output file: {output_file_path}")

    with open(output_file_path, 'w', encoding='utf-8') as output_file:
        # Step 1: Directory Structure
        output_file.write("PROJECT STRUCTURE:\n====================\n\n")
        
        # Step 2: Content
        output_file.write("FILE CONTENTS:\n==============\n\n")

        # os.walk se sab folders aur files ko process karein
        for root, dirs, files in os.walk(root_dir, topdown=True):
            
            # <<< DEBUGGING LINE >>>
            print(f"\nCurrently in directory: {root}")
            
            # Directories ko filter karein
            original_dirs = list(dirs) # Original list ko save karein
            dirs[:] = [d for d in dirs if d.lower() not in EXCLUDED_DIRS]
            
            # <<< DEBUGGING LINES >>>
            # Batayein kon se folders skip kiye gaye
            skipped_dirs = set(original_dirs) - set(dirs)
            if skipped_dirs:
                for skipped in skipped_dirs:
                    print(f"!!! SKIPPING Directory: {skipped} !!!")
            
            # Process files in the current valid directory
            # Pehle structure likhein
            level = root.replace(root_dir, '').count(os.sep)
            if level > 0:
                 output_file.write(f"{' ' * 4 * (level-1)}└── {os.path.basename(root)}/\n")
            
            sub_indent = ' ' * 4 * (level + 1)
            
            for f in sorted(files):
                 if not any(f.lower().endswith(ext) for ext in EXCLUDED_EXTENSIONS):
                    output_file.write(f"{sub_indent}├── {f}\n")
            
            # Phir content likhein
            for filename in sorted(files):
                if any(filename.lower().endswith(ext) for ext in EXCLUDED_EXTENSIONS):
                    continue

                file_path = os.path.join(root, filename)
                relative_path = os.path.relpath(file_path, root_dir)

                try:
                    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
                        content = f.read()
                    
                    output_file.write(f"\n--- START OF FILE: {relative_path} ---\n\n")
                    output_file.write(content)
                    output_file.write(f"\n\n--- END OF FILE: {relative_path} ---\n\n" + "="*80 + "\n\n")

                except Exception as e:
                    output_file.write(f"\n--- Could not read file: {relative_path} (Error: {e}) ---\n\n" + "="*80 + "\n\n")

def main():
    parser = argparse.ArgumentParser(description="Combine project files into a single text file with debugging.")
    parser.add_argument("project_dir", type=str, help="Project ka path.")
    parser.add_argument("output_file", type=str, nargs='?', default="combined_project_code.txt", help="Output file ka naam.")
    args = parser.parse_args()

    if not os.path.isdir(args.project_dir):
        print(f"Error: Directory not found at '{args.project_dir}'")
        return
    
    process_project(args.project_dir, args.output_file)
    print(f"\n--- SCRIPT FINISHED ---")
    print(f"Output saved to '{args.output_file}'")

if __name__ == "__main__":
    main()

--- END OF FILE: code-to-txt.py ---

================================================================================


--- START OF FILE: combined_project_code.txt ---

PROJECT STRUCTURE:
====================

FILE CONTENTS:
==============

    ├── .env
    ├── .gitignore
    ├── README.md
    ├── code-to-txt.py
    ├── combined_project_code.txt
    ├── eslint.config.js
    ├── index.html
    ├── package-lock.json
    ├── package.json
    ├── vercel.json
    ├── vite.config.js

--- START OF FILE: .env ---

VITE_CURRENCY_CONVERTER_BASE_URL=https://open.er-api.com/v6/latest
# VITE_API_URL=http://localhost:5000
VITE_API_URL=https://finance-manageb-b.vercel.app

code-to-txt.py

--- END OF FILE: .env ---

================================================================================


--- START OF FILE: .gitignore ---

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


--- END OF FILE: .gitignore ---

================================================================================


--- START OF FILE: README.md ---

# 💰 FINANCE-APP

**FINANCE-APP** is a modern **Finance Manager Web Platform** designed for secure, seamless, and efficient financial management.  
A **mobile application** built with **React Native** will be released soon for users on the go.  

The project leverages **React 19 + Tailwind CSS 4** and modern libraries to provide a sleek, responsive, and interactive **dashboard system**.  
The backend is powered by **Node.js, Express, and MongoDB**, ensuring speed, scalability, and reliability.  

Users can **create accounts, log in securely, manage payments, transactions, reminders, and collaborations** from a beautifully designed, real-time dashboard.  

---

## ✨ Key Features

### 👤 User Dashboards
- Personalized and responsive dashboards for **dynamic financial insights**.  
- Interactive charts using **Recharts, React-ChartJS-2, Nivo (Pie & Radial Bar)**.  
- Real-time updates powered by **TanStack Query** and **Socket.io**.  
- TanStack handles **smart caching**, **auto refetching**, and **data synchronization**.
- Socket.io delivers **instant updates** for payments, transactions, and user activities.

### 💳 Payment Management
- Add and track payments with statuses: **Completed, Pending, Processing, or Custom**.  
- Schedule payments with **date & time reminders**.  
- Automated email reminders via **Nodemailer**.  
- Real-time synchronization using **Socket.io** for instant dashboard updates.

### 💱 Transactions
- Categorized transactions management.  
- Modern, interactive tables using **React Data Table Component**.  
- Always synced with backend updates via **TanStack Query** and WebSocket events.  

### 📧 Reminders & Notifications
- Send reminders to specific users via email.  
- Keep business partners or team members aligned on deadlines.  
- Real-time UI updates when reminders are sent or payments are updated.

### 🤝 Collaborative Payments
- Invite users or business partners to contribute to payments.  
- Manage participants via **Users** and **Recipients** menus.  
- Create shared categories for group payments.  
- Automatic **email + real-time Socket notifications** for all participants.

### 🔐 Authentication & Security
- Finance apps require **robust security** — FINANCE-APP ensures data protection and safe authentication.  
- Secure login/registration using:  
  - **JWT (JSON Web Tokens)** for authentication.  
  - **bcrypt** for password hashing.  
  - **Role-Based Access Control (RBAC)** for Admin and User privileges.  
  - **Secure cookies & HTTPS** for encrypted communication.  
- Guarantees credentials, transactions, and records remain **private and tamper-proof**.

### 🧠 TanStack Query Integration
- All asynchronous requests are managed using **TanStack Query** (React Query).  
- Ensures **real-time synchronization** between client and server with **minimal API calls**.  
- Handles background refetching, caching, and automatic data invalidation for smoother UX.  
- Custom hooks inside the `/hooks` folder make logic **reusable**, **clean**, and **scalable** —  
  for example:
  - `useFetchPayments.js`  
  - `useAddTransaction.js`  
  - `useInviteUser.js`  
  - `useDeleteUser.js`  
  - `useRealTimeUpdates.js` (via Socket.io)  

### ⚡ Real-Time Updates (Socket.io)
- **Socket.io** ensures all users see **instant changes** (no refresh needed).  
- Used for:
  - Payment creation/deletion.
  - Transaction updates.
  - Shared user collaboration.
  - Live notifications.
- Makes the dashboard feel **interactive and modern** just like a live finance tracking app.

### 📞 Contact & Support
- Built-in **Contact Us form** for queries, bug reports, or feedback.  
- Direct support channel for timely issue resolution.

---

## 🛠️ Tech Stack

### Core
- **Frontend**: React 19, Tailwind CSS 4 (`@tailwindcss/vite`)  
- **Backend**: Node.js, Express, MongoDB  
- **Mobile (upcoming)**: React Native  

### Libraries & Tools
- **UI & Styling**: Tailwind CSS, Lucide-React, React Icons  
- **Charts & Visualization**: Recharts, React-ChartJS-2, @nivo/pie, @nivo/radial-bar  
- **Animations**: Framer Motion  
- **Forms & Inputs**: React Datepicker  
- **Tables**: React Data Table Component  
- **State & Data Management**: TanStack Query, React Context API  
- **Real-Time Communication**: Socket.io  
- **Routing**: React Router DOM  
- **Utilities**: Axios, Sonner (toast notifications)  
- **Communication**: Nodemailer  

---

## 📂 Project Structure

```
FINANCE-APP/
|
├── public/              # Static assets available to the browser
├── src/
│   ├── assets/          # Images, icons, and other media
│   ├── components/      # Reusable UI components (e.g., Sidebar, Hero)
│   ├── hooks/           # Making Business Logic & Ui Logic Seperate via TanStack
│   ├── context/         # Global state management (AppContext.jsx)
│   ├── routes/          # Application routing configuration
│   ├── screens/         # Top-level screen components (Dashboards)
│   ├── App.jsx          # Main application component and router setup
│   └── main.jsx         # Application's primary entry point
|
├── .env                 # Environment variables configuration
├── .gitignore           # Specifies intentionally untracked files
├── index.html           # The main HTML template for Vite
├── package.json         # Project metadata and dependencies
└── vite.config.js       # Vite build and server configuration
```

---

## 🖥️ Usage Flow

1. 🔑 **User Authentication** → Register/Login securely with encrypted credentials.  
2. 📊 **Dashboard Access** → View charts, tables, and real-time financial data.  
3. 💳 **Manage Payments** → Add, track, and schedule payments with reminders.  
4. 🔔 **Notifications** → Receive automated email and live Socket alerts.  
5. 💱 **Transactions** → Add categorized transactions with instant updates.  
6. 🤝 **Collaboration** → Invite users, manage group payments, and share dashboards.  
7. 📧 **Reminders** → Send emails for specific payment/transaction cases.  
8. ⚡ **Live Sync** → Dashboard auto-refreshes via **TanStack Query** & **Socket.io**.  
9. 📞 **Support** → Contact management for queries, bugs, or issues.  

---

## 📬 Contact

For any queries, suggestions, or issues, feel free to reach out:  

📧 **Email**: annasking601@gmail.com  
🌐 **Project Link**: [FINANCE-APP](https://finance-manage-kappa.vercel.app/)

--- END OF FILE: README.md ---

================================================================================


--- START OF FILE: code-to-txt.py ---

import os
import argparse

# --- Configuration ---
EXCLUDED_DIRS = {
    '.git',
    'node_modules',
    '__pycache__',
    'dist',
    'build',
    '.vscode',
    '.idea',
    'test-reports',
    'tests','reporters'
}

EXCLUDED_EXTENSIONS = {
    '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg',
    '.pdf', '.doc', '.docx', '.xls', '.xlsx',
    '.zip', '.rar', '.gz', '.tar',
    '.exe', '.dll', '.so', '.o', '.jar',
    '.mp4', '.mov', '.avi',
    '.mp3', '.wav','.test.js'
    '.lock'
}

def process_project(root_dir, output_file_path):
    """
    Project ko process karta hai: pehle structure banata hai, phir content.
    Yeh debugging messages bhi print karega.
    """
    print("--- SCRIPT STARTING ---")
    print(f"Project Directory: {os.path.abspath(root_dir)}")
    print(f"Excluded Directories: {EXCLUDED_DIRS}")

    # Pehle purani output file ko delete kar dein (agar maujood hai)
    if os.path.exists(output_file_path):
        os.remove(output_file_path)
        print(f"Deleted old output file: {output_file_path}")

    with open(output_file_path, 'w', encoding='utf-8') as output_file:
        # Step 1: Directory Structure
        output_file.write("PROJECT STRUCTURE:\n====================\n\n")
        
        # Step 2: Content
        output_file.write("FILE CONTENTS:\n==============\n\n")

        # os.walk se sab folders aur files ko process karein
        for root, dirs, files in os.walk(root_dir, topdown=True):
            
            # <<< DEBUGGING LINE >>>
            print(f"\nCurrently in directory: {root}")
            
            # Directories ko filter karein
            original_dirs = list(dirs) # Original list ko save karein
            dirs[:] = [d for d in dirs if d.lower() not in EXCLUDED_DIRS]
            
            # <<< DEBUGGING LINES >>>
            # Batayein kon se folders skip kiye gaye
            skipped_dirs = set(original_dirs) - set(dirs)
            if skipped_dirs:
                for skipped in skipped_dirs:
                    print(f"!!! SKIPPING Directory: {skipped} !!!")
            
            # Process files in the current valid directory
            # Pehle structure likhein
            level = root.replace(root_dir, '').count(os.sep)
            if level > 0:
                 output_file.write(f"{' ' * 4 * (level-1)}└── {os.path.basename(root)}/\n")
            
            sub_indent = ' ' * 4 * (level + 1)
            
            for f in sorted(files):
                 if not any(f.lower().endswith(ext) for ext in EXCLUDED_EXTENSIONS):
                    output_file.write(f"{sub_indent}├── {f}\n")
            
            # Phir content likhein
            for filename in sorted(files):
                if any(filename.lower().endswith(ext) for ext in EXCLUDED_EXTENSIONS):
                    continue

                file_path = os.path.join(root, filename)
                relative_path = os.path.relpath(file_path, root_dir)

                try:
                    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
                        content = f.read()
                    
                    output_file.write(f"\n--- START OF FILE: {relative_path} ---\n\n")
                    output_file.write(content)
                    output_file.write(f"\n\n--- END OF FILE: {relative_path} ---\n\n" + "="*80 + "\n\n")

                except Exception as e:
                    output_file.write(f"\n--- Could not read file: {relative_path} (Error: {e}) ---\n\n" + "="*80 + "\n\n")

def main():
    parser = argparse.ArgumentParser(description="Combine project files into a single text file with debugging.")
    parser.add_argument("project_dir", type=str, help="Project ka path.")
    parser.add_argument("output_file", type=str, nargs='?', default="combined_project_code.txt", help="Output file ka naam.")
    args = parser.parse_args()

    if not os.path.isdir(args.project_dir):
        print(f"Error: Directory not found at '{args.project_dir}'")
        return
    
    process_project(args.project_dir, args.output_file)
    print(f"\n--- SCRIPT FINISHED ---")
    print(f"Output saved to '{args.output_file}'")

if __name__ == "__main__":
    main()

--- END OF FILE: combined_project_code.txt ---

================================================================================


--- START OF FILE: eslint.config.js ---

import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])


--- END OF FILE: eslint.config.js ---

================================================================================


--- START OF FILE: index.html ---

<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="icon" type="image/svg+xml"
    href="https://images.unsplash.com/photo-1579621970795-87facc2f976d?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8ZmluYW5jZXxlbnwwfHwwfHx8MA%3D%3D" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>FinSync | Your All In 1 Finance Manager</title>

  <script async src="https://www.googletagmanager.com/gtag/js?id=G-JN82KZWSWW"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-JN82KZWSWW');
  </script>
</head>

<body class="scroll-smooth">
  <div id="root"></div>
  <script type="module" src="/src/main.jsx"></script>
</body>

</html>

--- END OF FILE: index.html ---

================================================================================


--- START OF FILE: package-lock.json ---

{
  "name": "finance-manager-frontend",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "finance-manager-frontend",
      "version": "0.0.0",
      "dependencies": {
        "@headlessui/react": "^2.2.9",
        "@nivo/pie": "^0.99.0",
        "@nivo/radial-bar": "^0.99.0",
        "@tailwindcss/vite": "^4.1.12",
        "@tanstack/react-query": "^5.90.2",
        "axios": "^1.12.2",
        "formik": "^2.4.6",
        "framer-motion": "^12.23.12",
        "lucide-react": "^0.542.0",
        "react": "^19.1.1",
        "react-chartjs-2": "^5.3.0",
        "react-content-loader": "^7.1.1",
        "react-data-table-component": "^7.7.0",
        "react-datepicker": "^8.7.0",
        "react-dom": "^19.1.1",
        "react-icons": "^5.5.0",
        "react-loading-skeleton": "^3.5.0",
        "react-router-dom": "^7.8.2",
        "recharts": "^3.2.1",
        "sonner": "^2.0.7",
        "tailwindcss": "^4.1.12",
        "yup": "^1.7.1"
      },
      "devDependencies": {
        "@eslint/js": "^9.33.0",
        "@types/react": "^19.1.10",
        "@types/react-dom": "^19.1.7",
        "@vitejs/plugin-react": "^5.0.0",
        "eslint": "^9.33.0",
        "eslint-plugin-react-hooks": "^5.2.0",
        "eslint-plugin-react-refresh": "^0.4.20",
        "globals": "^16.3.0",
        "vite": "^7.1.2"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/code-frame": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-validator-identifier": "^7.27.1",
        "js-tokens": "^4.0.0",
        "picocolors": "^1.1.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/compat-data": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz",
      "integrity": "sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/core": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.28.3.tgz",
      "integrity": "sha512-yDBHV9kQNcr2/sUr9jghVyz9C3Y5G2zUM2H2lo+9mKv4sFgbA8s8Z9t8D1jiTkGoO/NoIfKMyKWr4s6CN23ZwQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.2.0",
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-compilation-targets": "^7.27.2",
        "@babel/helper-module-transforms": "^7.28.3",
        "@babel/helpers": "^7.28.3",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/traverse": "^7.28.3",
        "@babel/types": "^7.28.2",
        "convert-source-map": "^2.0.0",
        "debug": "^4.1.0",
        "gensync": "^1.0.0-beta.2",
        "json5": "^2.2.3",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/babel"
      }
    },
    "node_modules/@babel/generator": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.28.3.tgz",
      "integrity": "sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.28.3",
        "@babel/types": "^7.28.2",
        "@jridgewell/gen-mapping": "^0.3.12",
        "@jridgewell/trace-mapping": "^0.3.28",
        "jsesc": "^3.0.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-compilation-targets": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/compat-data": "^7.27.2",
        "@babel/helper-validator-option": "^7.27.1",
        "browserslist": "^4.24.0",
        "lru-cache": "^5.1.1",
        "semver": "^6.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-globals": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz",
      "integrity": "sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-imports": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/traverse": "^7.27.1",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-module-transforms": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz",
      "integrity": "sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-module-imports": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1",
        "@babel/traverse": "^7.28.3"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0"
      }
    },
    "node_modules/@babel/helper-plugin-utils": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-option": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helpers": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.3.tgz",
      "integrity": "sha512-PTNtvUQihsAsDHMOP5pfobP8C6CM4JWXmP8DrEIt46c3r2bf87Ua1zoqevsMo9g+tWDwgWrFP5EIxuBx5RudAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.28.3.tgz",
      "integrity": "sha512-7+Ey1mAgYqFAx2h0RuoxcQT5+MlG3GTV0TQrgr7/ZliKsm/MNDxVVutlWaziMq7wJNAz8MTqz55XLpWvva6StA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.2"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-self": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/plugin-transform-react-jsx-source": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-plugin-utils": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      },
      "peerDependencies": {
        "@babel/core": "^7.0.0-0"
      }
    },
    "node_modules/@babel/template": {
      "version": "7.27.2",
      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/parser": "^7.27.2",
        "@babel/types": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/traverse": {
      "version": "7.28.3",
      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.3.tgz",
      "integrity": "sha512-7w4kZYHneL3A6NP2nxzHvT3HCZ7puDZZjFMqDpBPECub79sTtSO5CGXDkKrTQq8ksAwfD/XI2MRFX23njdDaIQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/code-frame": "^7.27.1",
        "@babel/generator": "^7.28.3",
        "@babel/helper-globals": "^7.28.0",
        "@babel/parser": "^7.28.3",
        "@babel/template": "^7.27.2",
        "@babel/types": "^7.28.2",
        "debug": "^4.3.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.28.2",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz",
      "integrity": "sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@emotion/is-prop-valid": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.2.2.tgz",
      "integrity": "sha512-uNsoYd37AFmaCdXlg6EYD1KaPOaRWRByMCYzbKUX4+hhMfrxdVSelShywL4JVaAeM/eHUOSprYBQls+/neX3pw==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@emotion/memoize": "^0.8.1"
      }
    },
    "node_modules/@emotion/memoize": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@emotion/unitless": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.8.1.tgz",
      "integrity": "sha512-KOEGMu6dmJZtpadb476IsZBclKvILjopjUii3V+7MnXIQCYh8W3NgNcgwo21n9LXZX6EDIKvqfjYxXebDwxKmQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.9.tgz",
      "integrity": "sha512-OaGtL73Jck6pBKjNIe24BnFE6agGl+6KxDtTfHhy1HmhthfKouEcOhqpSL64K4/0WCtbKFLOdzD/44cJ4k9opA==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.9.tgz",
      "integrity": "sha512-5WNI1DaMtxQ7t7B6xa572XMXpHAaI/9Hnhk8lcxF4zVN4xstUgTlvuGDorBguKEnZO70qwEcLpfifMLoxiPqHQ==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.9.tgz",
      "integrity": "sha512-IDrddSmpSv51ftWslJMvl3Q2ZT98fUSL2/rlUXuVqRXHCs5EUF1/f+jbjF5+NG9UffUDMCiTyh8iec7u8RlTLg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.9.tgz",
      "integrity": "sha512-I853iMZ1hWZdNllhVZKm34f4wErd4lMyeV7BLzEExGEIZYsOzqDWDf+y082izYUE8gtJnYHdeDpN/6tUdwvfiw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.9.tgz",
      "integrity": "sha512-XIpIDMAjOELi/9PB30vEbVMs3GV1v2zkkPnuyRRURbhqjyzIINwj+nbQATh4H9GxUgH1kFsEyQMxwiLFKUS6Rg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.9.tgz",
      "integrity": "sha512-jhHfBzjYTA1IQu8VyrjCX4ApJDnH+ez+IYVEoJHeqJm9VhG9Dh2BYaJritkYK3vMaXrf7Ogr/0MQ8/MeIefsPQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.9.tgz",
      "integrity": "sha512-z93DmbnY6fX9+KdD4Ue/H6sYs+bhFQJNCPZsi4XWJoYblUqT06MQUdBCpcSfuiN72AbqeBFu5LVQTjfXDE2A6Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.9.tgz",
      "integrity": "sha512-mrKX6H/vOyo5v71YfXWJxLVxgy1kyt1MQaD8wZJgJfG4gq4DpQGpgTB74e5yBeQdyMTbgxp0YtNj7NuHN0PoZg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.9.tgz",
      "integrity": "sha512-HBU2Xv78SMgaydBmdor38lg8YDnFKSARg1Q6AT0/y2ezUAKiZvc211RDFHlEZRFNRVhcMamiToo7bDx3VEOYQw==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.9.tgz",
      "integrity": "sha512-BlB7bIcLT3G26urh5Dmse7fiLmLXnRlopw4s8DalgZ8ef79Jj4aUcYbk90g8iCa2467HX8SAIidbL7gsqXHdRw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.9.tgz",
      "integrity": "sha512-e7S3MOJPZGp2QW6AK6+Ly81rC7oOSerQ+P8L0ta4FhVi+/j/v2yZzx5CqqDaWjtPFfYz21Vi1S0auHrap3Ma3A==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.9.tgz",
      "integrity": "sha512-Sbe10Bnn0oUAB2AalYztvGcK+o6YFFA/9829PhOCUS9vkJElXGdphz0A3DbMdP8gmKkqPmPcMJmJOrI3VYB1JQ==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.9.tgz",
      "integrity": "sha512-YcM5br0mVyZw2jcQeLIkhWtKPeVfAerES5PvOzaDxVtIyZ2NUBZKNLjC5z3/fUlDgT6w89VsxP2qzNipOaaDyA==",
      "cpu": [
        "mips64el"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.9.tgz",
      "integrity": "sha512-++0HQvasdo20JytyDpFvQtNrEsAgNG2CY1CLMwGXfFTKGBGQT3bOeLSYE2l1fYdvML5KUuwn9Z8L1EWe2tzs1w==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.9.tgz",
      "integrity": "sha512-uNIBa279Y3fkjV+2cUjx36xkx7eSjb8IvnL01eXUKXez/CBHNRw5ekCGMPM0BcmqBxBcdgUWuUXmVWwm4CH9kg==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.9.tgz",
      "integrity": "sha512-Mfiphvp3MjC/lctb+7D287Xw1DGzqJPb/J2aHHcHxflUo+8tmN/6d4k6I2yFR7BVo5/g7x2Monq4+Yew0EHRIA==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.9.tgz",
      "integrity": "sha512-iSwByxzRe48YVkmpbgoxVzn76BXjlYFXC7NvLYq+b+kDjyyk30J0JY47DIn8z1MO3K0oSl9fZoRmZPQI4Hklzg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.9.tgz",
      "integrity": "sha512-9jNJl6FqaUG+COdQMjSCGW4QiMHH88xWbvZ+kRVblZsWrkXlABuGdFJ1E9L7HK+T0Yqd4akKNa/lO0+jDxQD4Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.9.tgz",
      "integrity": "sha512-RLLdkflmqRG8KanPGOU7Rpg829ZHu8nFy5Pqdi9U01VYtG9Y0zOG6Vr2z4/S+/3zIyOxiK6cCeYNWOFR9QP87g==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.9.tgz",
      "integrity": "sha512-YaFBlPGeDasft5IIM+CQAhJAqS3St3nJzDEgsgFixcfZeyGPCd6eJBWzke5piZuZ7CtL656eOSYKk4Ls2C0FRQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.9.tgz",
      "integrity": "sha512-1MkgTCuvMGWuqVtAvkpkXFmtL8XhWy+j4jaSO2wxfJtilVCi0ZE37b8uOdMItIHz4I6z1bWWtEX4CJwcKYLcuA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openharmony-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/openharmony-arm64/-/openharmony-arm64-0.25.9.tgz",
      "integrity": "sha512-4Xd0xNiMVXKh6Fa7HEJQbrpP3m3DDn43jKxMjxLLRjWnRsfxjORYJlXPO4JNcXtOyfajXorRKY9NkOpTHptErg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openharmony"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.9.tgz",
      "integrity": "sha512-WjH4s6hzo00nNezhp3wFIAfmGZ8U7KtrJNlFMRKxiI9mxEK1scOMAaa9i4crUtu+tBr+0IN6JCuAcSBJZfnphw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.9.tgz",
      "integrity": "sha512-mGFrVJHmZiRqmP8xFOc6b84/7xa5y5YvR1x8djzXpJBSv/UsNK6aqec+6JDjConTgvvQefdGhFDAs2DLAds6gQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.9.tgz",
      "integrity": "sha512-b33gLVU2k11nVx1OhX3C8QQP6UHQK4ZtN56oFWvVXvz2VkDoe6fbG8TOgHFxEvqeqohmRnIHe5A1+HADk4OQww==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.9.tgz",
      "integrity": "sha512-PPOl1mi6lpLNQxnGoyAfschAodRFYXJ+9fs6WHXz7CSWKbOqiMZsubC+BQsVKuul+3vKLuwTHsS2c2y9EoKwxQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@eslint-community/eslint-utils": {
      "version": "4.7.0",
      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
      "integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eslint-visitor-keys": "^3.4.3"
      },
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      },
      "peerDependencies": {
        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
      }
    },
    "node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint-community/regexpp": {
      "version": "4.12.1",
      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
      "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
      }
    },
    "node_modules/@eslint/config-array": {
      "version": "0.21.0",
      "resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz",
      "integrity": "sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/object-schema": "^2.1.6",
        "debug": "^4.3.1",
        "minimatch": "^3.1.2"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/config-helpers": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.1.tgz",
      "integrity": "sha512-xR93k9WhrDYpXHORXpxVL5oHj3Era7wo6k/Wd8/IsQNnZUTzkGS29lyn3nAT05v6ltUuTFVCCYDEGfy2Or/sPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/core": {
      "version": "0.15.2",
      "resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.15.2.tgz",
      "integrity": "sha512-78Md3/Rrxh83gCxoUc0EiciuOHsIITzLy53m3d9UyiW8y9Dj2D29FeETqyKA+BRK76tnTp6RXWb3pCay8Oyomg==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@types/json-schema": "^7.0.15"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/eslintrc": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
      "integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ajv": "^6.12.4",
        "debug": "^4.3.2",
        "espree": "^10.0.1",
        "globals": "^14.0.0",
        "ignore": "^5.2.0",
        "import-fresh": "^3.2.1",
        "js-yaml": "^4.1.0",
        "minimatch": "^3.1.2",
        "strip-json-comments": "^3.1.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/@eslint/eslintrc/node_modules/globals": {
      "version": "14.0.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
      "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@eslint/js": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.34.0.tgz",
      "integrity": "sha512-EoyvqQnBNsV1CWaEJ559rxXL4c8V92gxirbawSmVUOWXlsRxxQXl6LmCpdUblgxgSkDIqKnhzba2SjRTI/A5Rw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      }
    },
    "node_modules/@eslint/object-schema": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
      "integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@eslint/plugin-kit": {
      "version": "0.3.5",
      "resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.5.tgz",
      "integrity": "sha512-Z5kJ+wU3oA7MMIqVR9tyZRtjYPr4OC004Q4Rw7pgOKUOKkJfZ3O24nz3WYfGRpMDNmcOi3TwQOmgm7B7Tpii0w==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@eslint/core": "^0.15.2",
        "levn": "^0.4.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      }
    },
    "node_modules/@floating-ui/core": {
      "version": "1.7.3",
      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.7.3.tgz",
      "integrity": "sha512-sGnvb5dmrJaKEZ+LDIpguvdX3bDlEllmv4/ClQ9awcmCZrlx5jQyyMWFM5kBI+EyNOCDDiKk8il0zeuX3Zlg/w==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/dom": {
      "version": "1.7.4",
      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.4.tgz",
      "integrity": "sha512-OOchDgh4F2CchOX94cRVqhvy7b3AFb+/rQXyswmzmGakRfkMgoWVjfnLWkRirfLEfuD4ysVW16eXzwt3jHIzKA==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/core": "^1.7.3",
        "@floating-ui/utils": "^0.2.10"
      }
    },
    "node_modules/@floating-ui/react": {
      "version": "0.26.28",
      "resolved": "https://registry.npmjs.org/@floating-ui/react/-/react-0.26.28.tgz",
      "integrity": "sha512-yORQuuAtVpiRjpMhdc0wJj06b9JFjrYF4qp96j++v2NBpbi6SEGF7donUJ3TMieerQ6qVkAv1tgr7L4r5roTqw==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react-dom": "^2.1.2",
        "@floating-ui/utils": "^0.2.8",
        "tabbable": "^6.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8.0",
        "react-dom": ">=16.8.0"
      }
    },
    "node_modules/@floating-ui/react-dom": {
      "version": "2.1.6",
      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.6.tgz",
      "integrity": "sha512-4JX6rEatQEvlmgU80wZyq9RT96HZJa88q8hp0pBd+LrczeDI4o6uA2M+uvxngVHo4Ihr8uibXxH6+70zhAFrVw==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/dom": "^1.7.4"
      },
      "peerDependencies": {
        "react": ">=16.8.0",
        "react-dom": ">=16.8.0"
      }
    },
    "node_modules/@floating-ui/utils": {
      "version": "0.2.10",
      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz",
      "integrity": "sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==",
      "license": "MIT"
    },
    "node_modules/@headlessui/react": {
      "version": "2.2.9",
      "resolved": "https://registry.npmjs.org/@headlessui/react/-/react-2.2.9.tgz",
      "integrity": "sha512-Mb+Un58gwBn0/yWZfyrCh0TJyurtT+dETj7YHleylHk5od3dv2XqETPGWMyQ5/7sYN7oWdyM1u9MvC0OC8UmzQ==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react": "^0.26.16",
        "@react-aria/focus": "^3.20.2",
        "@react-aria/interactions": "^3.25.0",
        "@tanstack/react-virtual": "^3.13.9",
        "use-sync-external-store": "^1.5.0"
      },
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "react": "^18 || ^19 || ^19.0.0-rc",
        "react-dom": "^18 || ^19 || ^19.0.0-rc"
      }
    },
    "node_modules/@humanfs/core": {
      "version": "0.19.1",
      "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
      "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node": {
      "version": "0.16.6",
      "resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
      "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
      "dev": true,
      "license": "Apache-2.0",
      "dependencies": {
        "@humanfs/core": "^0.19.1",
        "@humanwhocodes/retry": "^0.3.0"
      },
      "engines": {
        "node": ">=18.18.0"
      }
    },
    "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
      "version": "0.3.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
      "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/module-importer": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=12.22"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@humanwhocodes/retry": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
      "integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": ">=18.18"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/nzakas"
      }
    },
    "node_modules/@isaacs/fs-minipass": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
      "license": "ISC",
      "dependencies": {
        "minipass": "^7.0.4"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.13",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz",
      "integrity": "sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/remapping": {
      "version": "2.3.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/remapping/-/remapping-2.3.5.tgz",
      "integrity": "sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.5",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz",
      "integrity": "sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.30",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.30.tgz",
      "integrity": "sha512-GQ7Nw5G2lTu/BtHTKfXhKHok2WGetd4XYcVKGx00SjAk8GMwgJM3zr6zORiPGuOE+/vkc90KtTosSSvaCjKb2Q==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@kurkle/color": {
      "version": "0.3.4",
      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.4.tgz",
      "integrity": "sha512-M5UknZPHRu3DEDWoipU6sE8PdkZ6Z/S+v4dD+Ke8IaNlpdSQah50lz1KtcFBa2vsdOnwbbnxJwVM4wty6udA5w==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@nivo/arcs": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/arcs/-/arcs-0.99.0.tgz",
      "integrity": "sha512-UcvWLQPl+A3APk2Gm74N5xDfT+ATnVs2XkP73WxhYPWJk+dBzF00cndA5g/dptOwdFBvvo62VgcCsNiwUsjKTw==",
      "license": "MIT",
      "dependencies": {
        "@nivo/colors": "0.99.0",
        "@nivo/core": "0.99.0",
        "@nivo/text": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@react-spring/core": "9.4.5 || ^9.7.2 || ^10.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0",
        "@types/d3-shape": "^3.1.6",
        "d3-shape": "^3.2.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/colors": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/colors/-/colors-0.99.0.tgz",
      "integrity": "sha512-hyYt4lEFIfXOUmQ6k3HXm3KwhcgoJpocmoGzLUqzk7DzuhQYJo+4d5jIGGU0N/a70+9XbHIdpKNSblHAIASD3w==",
      "license": "MIT",
      "dependencies": {
        "@nivo/core": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@types/d3-color": "^3.0.0",
        "@types/d3-scale": "^4.0.8",
        "@types/d3-scale-chromatic": "^3.0.0",
        "d3-color": "^3.1.0",
        "d3-scale": "^4.0.2",
        "d3-scale-chromatic": "^3.0.0",
        "lodash": "^4.17.21"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/core": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/core/-/core-0.99.0.tgz",
      "integrity": "sha512-olCItqhPG3xHL5ei+vg52aB6o+6S+xR2idpkd9RormTTUniZb8U2rOdcQojOojPY5i9kVeQyLFBpV4YfM7OZ9g==",
      "license": "MIT",
      "dependencies": {
        "@nivo/theming": "0.99.0",
        "@nivo/tooltip": "0.99.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0",
        "@types/d3-shape": "^3.1.6",
        "d3-color": "^3.1.0",
        "d3-format": "^1.4.4",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-scale-chromatic": "^3.0.0",
        "d3-shape": "^3.2.0",
        "d3-time-format": "^3.0.0",
        "lodash": "^4.17.21",
        "react-virtualized-auto-sizer": "^1.0.26",
        "use-debounce": "^10.0.4"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/nivo/donate"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/legends": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/legends/-/legends-0.99.0.tgz",
      "integrity": "sha512-P16FjFqNceuTTZphINAh5p0RF0opu3cCKoWppe2aRD9IuVkvRm/wS5K1YwMCxDzKyKh5v0AuTlu9K6o3/hk8hA==",
      "license": "MIT",
      "dependencies": {
        "@nivo/colors": "0.99.0",
        "@nivo/core": "0.99.0",
        "@nivo/text": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@types/d3-scale": "^4.0.8",
        "d3-scale": "^4.0.2"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/pie": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/pie/-/pie-0.99.0.tgz",
      "integrity": "sha512-zUbo8UdLndp2RMljrOqitAKKEnl7YypkJrOzjKLk8jQGU7qqUKtgFoJIPhiBsvNPs3xtX2KwgtS1+JKNTNns7A==",
      "license": "MIT",
      "dependencies": {
        "@nivo/arcs": "0.99.0",
        "@nivo/colors": "0.99.0",
        "@nivo/core": "0.99.0",
        "@nivo/legends": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@nivo/tooltip": "0.99.0",
        "@types/d3-shape": "^3.1.6",
        "d3-shape": "^3.2.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/polar-axes": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/polar-axes/-/polar-axes-0.99.0.tgz",
      "integrity": "sha512-4+Aq8GXMDGBiRCIKNuNcmYA389sU0JV0yQopXqnIpj/kFJAZE0wYtqvHe3Qry8uP5ttwVmcwMv2FcfEEBR613g==",
      "license": "MIT",
      "dependencies": {
        "@nivo/arcs": "0.99.0",
        "@nivo/core": "0.99.0",
        "@nivo/scales": "0.99.0",
        "@nivo/text": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/radial-bar": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/radial-bar/-/radial-bar-0.99.0.tgz",
      "integrity": "sha512-xT9ncFgufzN/e87rTCO5jjTD7JQsuMIxUY3goUXwbWD6Yd5w/t0dVvpcwcsvKpL0vJftOwcWnGB/zpOi3oKoTA==",
      "license": "MIT",
      "dependencies": {
        "@nivo/arcs": "0.99.0",
        "@nivo/colors": "0.99.0",
        "@nivo/core": "0.99.0",
        "@nivo/legends": "0.99.0",
        "@nivo/polar-axes": "0.99.0",
        "@nivo/scales": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@nivo/tooltip": "0.99.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0",
        "@types/d3-scale": "^4.0.8",
        "@types/d3-shape": "^3.1.6",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.2.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/scales": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/scales/-/scales-0.99.0.tgz",
      "integrity": "sha512-g/2K4L6L8si6E2BWAHtFVGahtDKbUcO6xHJtlIZMwdzaJc7yB16EpWLK8AfI/A42KadLhJSJqBK3mty+c7YZ+w==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-interpolate": "^3.0.4",
        "@types/d3-scale": "^4.0.8",
        "@types/d3-time": "^1.1.1",
        "@types/d3-time-format": "^3.0.0",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-time": "^1.0.11",
        "d3-time-format": "^3.0.0",
        "lodash": "^4.17.21"
      }
    },
    "node_modules/@nivo/scales/node_modules/@types/d3-time": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-1.1.4.tgz",
      "integrity": "sha512-JIvy2HjRInE+TXOmIGN5LCmeO0hkFZx5f9FZ7kiN+D+YTcc8pptsiLiuHsvwxwC7VVKmJ2ExHUgNlAiV7vQM9g==",
      "license": "MIT"
    },
    "node_modules/@nivo/scales/node_modules/d3-time": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-1.1.0.tgz",
      "integrity": "sha512-Xh0isrZ5rPYYdqhAVk8VLnMEidhz5aP7htAADH6MfzgmmicPkTo8LhkLxci61/lCB7n7UmE3bN0leRt+qvkLxA==",
      "license": "BSD-3-Clause"
    },
    "node_modules/@nivo/text": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/text/-/text-0.99.0.tgz",
      "integrity": "sha512-ho3oZpAZApsJNjsIL5WJSAdg/wjzTBcwo1KiHBlRGUmD+yUWO8qp7V+mnYRhJchwygtRVALlPgZ/rlcW2Xr/MQ==",
      "license": "MIT",
      "dependencies": {
        "@nivo/core": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/theming": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/theming/-/theming-0.99.0.tgz",
      "integrity": "sha512-KvXlf0nqBzh/g2hAIV9bzscYvpq1uuO3TnFN3RDXGI72CrbbZFTGzprPju3sy/myVsauv+Bb+V4f5TZ0jkYKRg==",
      "license": "MIT",
      "dependencies": {
        "lodash": "^4.17.21"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@nivo/tooltip": {
      "version": "0.99.0",
      "resolved": "https://registry.npmjs.org/@nivo/tooltip/-/tooltip-0.99.0.tgz",
      "integrity": "sha512-weoEGR3xAetV4k2P6k96cdamGzKQ5F2Pq+uyDaHr1P3HYArM879Pl+x+TkU0aWjP6wgUZPx/GOBiV1Hb1JxIqg==",
      "license": "MIT",
      "dependencies": {
        "@nivo/core": "0.99.0",
        "@nivo/theming": "0.99.0",
        "@react-spring/web": "9.4.5 || ^9.7.2 || ^10.0"
      },
      "peerDependencies": {
        "react": "^16.14 || ^17.0 || ^18.0 || ^19.0"
      }
    },
    "node_modules/@react-aria/focus": {
      "version": "3.21.1",
      "resolved": "https://registry.npmjs.org/@react-aria/focus/-/focus-3.21.1.tgz",
      "integrity": "sha512-hmH1IhHlcQ2lSIxmki1biWzMbGgnhdxJUM0MFfzc71Rv6YAzhlx4kX3GYn4VNcjCeb6cdPv4RZ5vunV4kgMZYQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@react-aria/interactions": "^3.25.5",
        "@react-aria/utils": "^3.30.1",
        "@react-types/shared": "^3.32.0",
        "@swc/helpers": "^0.5.0",
        "clsx": "^2.0.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1",
        "react-dom": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@react-aria/interactions": {
      "version": "3.25.5",
      "resolved": "https://registry.npmjs.org/@react-aria/interactions/-/interactions-3.25.5.tgz",
      "integrity": "sha512-EweYHOEvMwef/wsiEqV73KurX/OqnmbzKQa2fLxdULbec5+yDj6wVGaRHIzM4NiijIDe+bldEl5DG05CAKOAHA==",
      "license": "Apache-2.0",
      "dependencies": {
        "@react-aria/ssr": "^3.9.10",
        "@react-aria/utils": "^3.30.1",
        "@react-stately/flags": "^3.1.2",
        "@react-types/shared": "^3.32.0",
        "@swc/helpers": "^0.5.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1",
        "react-dom": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@react-aria/ssr": {
      "version": "3.9.10",
      "resolved": "https://registry.npmjs.org/@react-aria/ssr/-/ssr-3.9.10.tgz",
      "integrity": "sha512-hvTm77Pf+pMBhuBm760Li0BVIO38jv1IBws1xFm1NoL26PU+fe+FMW5+VZWyANR6nYL65joaJKZqOdTQMkO9IQ==",
      "license": "Apache-2.0",
      "dependencies": {
        "@swc/helpers": "^0.5.0"
      },
      "engines": {
        "node": ">= 12"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@react-aria/utils": {
      "version": "3.30.1",
      "resolved": "https://registry.npmjs.org/@react-aria/utils/-/utils-3.30.1.tgz",
      "integrity": "sha512-zETcbDd6Vf9GbLndO6RiWJadIZsBU2MMm23rBACXLmpRztkrIqPEb2RVdlLaq1+GklDx0Ii6PfveVjx+8S5U6A==",
      "license": "Apache-2.0",
      "dependencies": {
        "@react-aria/ssr": "^3.9.10",
        "@react-stately/flags": "^3.1.2",
        "@react-stately/utils": "^3.10.8",
        "@react-types/shared": "^3.32.0",
        "@swc/helpers": "^0.5.0",
        "clsx": "^2.0.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1",
        "react-dom": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@react-spring/animated": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/animated/-/animated-10.0.3.tgz",
      "integrity": "sha512-7MrxADV3vaUADn2V9iYhaIL6iOWRx9nCJjYrsk2AHD2kwPr6fg7Pt0v+deX5RnCDmCKNnD6W5fasiyM8D+wzJQ==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/shared": "~10.0.3",
        "@react-spring/types": "~10.0.3"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@react-spring/core": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/core/-/core-10.0.3.tgz",
      "integrity": "sha512-D4DwNO68oohDf/0HG2G0Uragzb9IA1oXblxrd6MZAcBcUQG2EHUWXewjdECMPLNmQvlYVyyBRH6gPxXM5DX7DQ==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~10.0.3",
        "@react-spring/shared": "~10.0.3",
        "@react-spring/types": "~10.0.3"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/react-spring/donate"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@react-spring/rafz": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/rafz/-/rafz-10.0.3.tgz",
      "integrity": "sha512-Ri2/xqt8OnQ2iFKkxKMSF4Nqv0LSWnxXT4jXFzBDsHgeeH/cHxTLupAWUwmV9hAGgmEhBmh5aONtj3J6R/18wg==",
      "license": "MIT"
    },
    "node_modules/@react-spring/shared": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/shared/-/shared-10.0.3.tgz",
      "integrity": "sha512-geCal66nrkaQzUVhPkGomylo+Jpd5VPK8tPMEDevQEfNSWAQP15swHm+MCRG4wVQrQlTi9lOzKzpRoTL3CA84Q==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/rafz": "~10.0.3",
        "@react-spring/types": "~10.0.3"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@react-spring/types": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/types/-/types-10.0.3.tgz",
      "integrity": "sha512-H5Ixkd2OuSIgHtxuHLTt7aJYfhMXKXT/rK32HPD/kSrOB6q6ooeiWAXkBy7L8F3ZxdkBb9ini9zP9UwnEFzWgQ==",
      "license": "MIT"
    },
    "node_modules/@react-spring/web": {
      "version": "10.0.3",
      "resolved": "https://registry.npmjs.org/@react-spring/web/-/web-10.0.3.tgz",
      "integrity": "sha512-ndU+kWY81rHsT7gTFtCJ6mrVhaJ6grFmgTnENipzmKqot4HGf5smPNK+cZZJqoGeDsj9ZsiWPW4geT/NyD484A==",
      "license": "MIT",
      "dependencies": {
        "@react-spring/animated": "~10.0.3",
        "@react-spring/core": "~10.0.3",
        "@react-spring/shared": "~10.0.3",
        "@react-spring/types": "~10.0.3"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@react-stately/flags": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@react-stately/flags/-/flags-3.1.2.tgz",
      "integrity": "sha512-2HjFcZx1MyQXoPqcBGALwWWmgFVUk2TuKVIQxCbRq7fPyWXIl6VHcakCLurdtYC2Iks7zizvz0Idv48MQ38DWg==",
      "license": "Apache-2.0",
      "dependencies": {
        "@swc/helpers": "^0.5.0"
      }
    },
    "node_modules/@react-stately/utils": {
      "version": "3.10.8",
      "resolved": "https://registry.npmjs.org/@react-stately/utils/-/utils-3.10.8.tgz",
      "integrity": "sha512-SN3/h7SzRsusVQjQ4v10LaVsDc81jyyR0DD5HnsQitm/I5WDpaSr2nRHtyloPFU48jlql1XX/S04T2DLQM7Y3g==",
      "license": "Apache-2.0",
      "dependencies": {
        "@swc/helpers": "^0.5.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@react-types/shared": {
      "version": "3.32.0",
      "resolved": "https://registry.npmjs.org/@react-types/shared/-/shared-3.32.0.tgz",
      "integrity": "sha512-t+cligIJsZYFMSPFMvsJMjzlzde06tZMOIOFa1OV5Z0BcMowrb2g4mB57j/9nP28iJIRYn10xCniQts+qadrqQ==",
      "license": "Apache-2.0",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
      }
    },
    "node_modules/@reduxjs/toolkit": {
      "version": "2.9.0",
      "resolved": "https://registry.npmjs.org/@reduxjs/toolkit/-/toolkit-2.9.0.tgz",
      "integrity": "sha512-fSfQlSRu9Z5yBkvsNhYF2rPS8cGXn/TZVrlwN1948QyZ8xMZ0JvP50S2acZNaf+o63u6aEeMjipFyksjIcWrog==",
      "license": "MIT",
      "dependencies": {
        "@standard-schema/spec": "^1.0.0",
        "@standard-schema/utils": "^0.3.0",
        "immer": "^10.0.3",
        "redux": "^5.0.1",
        "redux-thunk": "^3.1.0",
        "reselect": "^5.1.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17.0.0 || ^18 || ^19",
        "react-redux": "^7.2.1 || ^8.1.3 || ^9.0.0"
      },
      "peerDependenciesMeta": {
        "react": {
          "optional": true
        },
        "react-redux": {
          "optional": true
        }
      }
    },
    "node_modules/@rolldown/pluginutils": {
      "version": "1.0.0-beta.34",
      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.34.tgz",
      "integrity": "sha512-LyAREkZHP5pMom7c24meKmJCdhf2hEyvam2q0unr3or9ydwDL+DJ8chTF6Av/RFPb3rH8UFBdMzO5MxTZW97oA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.50.0.tgz",
      "integrity": "sha512-lVgpeQyy4fWN5QYebtW4buT/4kn4p4IJ+kDNB4uYNT5b8c8DLJDg6titg20NIg7E8RWwdWZORW6vUFfrLyG3KQ==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.50.0.tgz",
      "integrity": "sha512-2O73dR4Dc9bp+wSYhviP6sDziurB5/HCym7xILKifWdE9UsOe2FtNcM+I4xZjKrfLJnq5UR8k9riB87gauiQtw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.50.0.tgz",
      "integrity": "sha512-vwSXQN8T4sKf1RHr1F0s98Pf8UPz7pS6P3LG9NSmuw0TVh7EmaE+5Ny7hJOZ0M2yuTctEsHHRTMi2wuHkdS6Hg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.50.0.tgz",
      "integrity": "sha512-cQp/WG8HE7BCGyFVuzUg0FNmupxC+EPZEwWu2FCGGw5WDT1o2/YlENbm5e9SMvfDFR6FRhVCBePLqj0o8MN7Vw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.50.0.tgz",
      "integrity": "sha512-UR1uTJFU/p801DvvBbtDD7z9mQL8J80xB0bR7DqW7UGQHRm/OaKzp4is7sQSdbt2pjjSS72eAtRh43hNduTnnQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.50.0.tgz",
      "integrity": "sha512-G/DKyS6PK0dD0+VEzH/6n/hWDNPDZSMBmqsElWnCRGrYOb2jC0VSupp7UAHHQ4+QILwkxSMaYIbQ72dktp8pKA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.50.0.tgz",
      "integrity": "sha512-u72Mzc6jyJwKjJbZZcIYmd9bumJu7KNmHYdue43vT1rXPm2rITwmPWF0mmPzLm9/vJWxIRbao/jrQmxTO0Sm9w==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.50.0.tgz",
      "integrity": "sha512-S4UefYdV0tnynDJV1mdkNawp0E5Qm2MtSs330IyHgaccOFrwqsvgigUD29uT+B/70PDY1eQ3t40+xf6wIvXJyg==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.50.0.tgz",
      "integrity": "sha512-1EhkSvUQXJsIhk4msxP5nNAUWoB4MFDHhtc4gAYvnqoHlaL9V3F37pNHabndawsfy/Tp7BPiy/aSa6XBYbaD1g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.50.0.tgz",
      "integrity": "sha512-EtBDIZuDtVg75xIPIK1l5vCXNNCIRM0OBPUG+tbApDuJAy9mKago6QxX+tfMzbCI6tXEhMuZuN1+CU8iDW+0UQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.50.0.tgz",
      "integrity": "sha512-BGYSwJdMP0hT5CCmljuSNx7+k+0upweM2M4YGfFBjnFSZMHOLYR0gEEj/dxyYJ6Zc6AiSeaBY8dWOa11GF/ppQ==",
      "cpu": [
        "loong64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-ppc64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-ppc64-gnu/-/rollup-linux-ppc64-gnu-4.50.0.tgz",
      "integrity": "sha512-I1gSMzkVe1KzAxKAroCJL30hA4DqSi+wGc5gviD0y3IL/VkvcnAqwBf4RHXHyvH66YVHxpKO8ojrgc4SrWAnLg==",
      "cpu": [
        "ppc64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.50.0.tgz",
      "integrity": "sha512-bSbWlY3jZo7molh4tc5dKfeSxkqnf48UsLqYbUhnkdnfgZjgufLS/NTA8PcP/dnvct5CCdNkABJ56CbclMRYCA==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.50.0.tgz",
      "integrity": "sha512-LSXSGumSURzEQLT2e4sFqFOv3LWZsEF8FK7AAv9zHZNDdMnUPYH3t8ZlaeYYZyTXnsob3htwTKeWtBIkPV27iQ==",
      "cpu": [
        "riscv64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.50.0.tgz",
      "integrity": "sha512-CxRKyakfDrsLXiCyucVfVWVoaPA4oFSpPpDwlMcDFQvrv3XY6KEzMtMZrA+e/goC8xxp2WSOxHQubP8fPmmjOQ==",
      "cpu": [
        "s390x"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.50.0.tgz",
      "integrity": "sha512-8PrJJA7/VU8ToHVEPu14FzuSAqVKyo5gg/J8xUerMbyNkWkO9j2ExBho/68RnJsMGNJq4zH114iAttgm7BZVkA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.50.0.tgz",
      "integrity": "sha512-SkE6YQp+CzpyOrbw7Oc4MgXFvTw2UIBElvAvLCo230pyxOLmYwRPwZ/L5lBe/VW/qT1ZgND9wJfOsdy0XptRvw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-openharmony-arm64": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-openharmony-arm64/-/rollup-openharmony-arm64-4.50.0.tgz",
      "integrity": "sha512-PZkNLPfvXeIOgJWA804zjSFH7fARBBCpCXxgkGDRjjAhRLOR8o0IGS01ykh5GYfod4c2yiiREuDM8iZ+pVsT+Q==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "openharmony"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.50.0.tgz",
      "integrity": "sha512-q7cIIdFvWQoaCbLDUyUc8YfR3Jh2xx3unO8Dn6/TTogKjfwrax9SyfmGGK6cQhKtjePI7jRfd7iRYcxYs93esg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.50.0.tgz",
      "integrity": "sha512-XzNOVg/YnDOmFdDKcxxK410PrcbcqZkBmz+0FicpW5jtjKQxcW1BZJEQOF0NJa6JO7CZhett8GEtRN/wYLYJuw==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.50.0.tgz",
      "integrity": "sha512-xMmiWRR8sp72Zqwjgtf3QbZfF1wdh8X2ABu3EaozvZcyHJeU0r+XAnXdKgs4cCAp6ORoYoCygipYP1mjmbjrsg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@standard-schema/spec": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
      "integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
      "license": "MIT"
    },
    "node_modules/@standard-schema/utils": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/@standard-schema/utils/-/utils-0.3.0.tgz",
      "integrity": "sha512-e7Mew686owMaPJVNNLs55PUvgz371nKgwsc4vxE49zsODpJEnxgxRo2y/OKrqueavXgZNMDVj3DdHFlaSAeU8g==",
      "license": "MIT"
    },
    "node_modules/@swc/helpers": {
      "version": "0.5.17",
      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.17.tgz",
      "integrity": "sha512-5IKx/Y13RsYd+sauPb2x+U/xZikHjolzfuDgTAl/Tdf3Q8rslRvC19NKDLgAJQ6wsqADk10ntlv08nPFw/gO/A==",
      "license": "Apache-2.0",
      "dependencies": {
        "tslib": "^2.8.0"
      }
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.12.tgz",
      "integrity": "sha512-3hm9brwvQkZFe++SBt+oLjo4OLDtkvlE8q2WalaD/7QWaeM7KEJbAiY/LJZUaCs7Xa8aUu4xy3uoyX4q54UVdQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/remapping": "^2.3.4",
        "enhanced-resolve": "^5.18.3",
        "jiti": "^2.5.1",
        "lightningcss": "1.30.1",
        "magic-string": "^0.30.17",
        "source-map-js": "^1.2.1",
        "tailwindcss": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.12.tgz",
      "integrity": "sha512-gM5EoKHW/ukmlEtphNwaGx45fGoEmP10v51t9unv55voWh6WrOL19hfuIdo2FjxIaZzw776/BUQg7Pck++cIVw==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.4",
        "tar": "^7.4.3"
      },
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-arm64": "4.1.12",
        "@tailwindcss/oxide-darwin-x64": "4.1.12",
        "@tailwindcss/oxide-freebsd-x64": "4.1.12",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.12",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.12",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.12",
        "@tailwindcss/oxide-wasm32-wasi": "4.1.12",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.12",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.12"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.12.tgz",
      "integrity": "sha512-oNY5pq+1gc4T6QVTsZKwZaGpBb2N1H1fsc1GD4o7yinFySqIuRZ2E4NvGasWc6PhYJwGK2+5YT1f9Tp80zUQZQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.12.tgz",
      "integrity": "sha512-cq1qmq2HEtDV9HvZlTtrj671mCdGB93bVY6J29mwCyaMYCP/JaUBXxrQQQm7Qn33AXXASPUb2HFZlWiiHWFytw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.12.tgz",
      "integrity": "sha512-6UCsIeFUcBfpangqlXay9Ffty9XhFH1QuUFn0WV83W8lGdX8cD5/+2ONLluALJD5+yJ7k8mVtwy3zMZmzEfbLg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.12.tgz",
      "integrity": "sha512-JOH/f7j6+nYXIrHobRYCtoArJdMJh5zy5lr0FV0Qu47MID/vqJAY3r/OElPzx1C/wdT1uS7cPq+xdYYelny1ww==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.12.tgz",
      "integrity": "sha512-v4Ghvi9AU1SYgGr3/j38PD8PEe6bRfTnNSUE3YCMIRrrNigCFtHZ2TCm8142X8fcSqHBZBceDx+JlFJEfNg5zQ==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.12.tgz",
      "integrity": "sha512-YP5s1LmetL9UsvVAKusHSyPlzSRqYyRB0f+Kl/xcYQSPLEw/BvGfxzbH+ihUciePDjiXwHh+p+qbSP3SlJw+6g==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.12.tgz",
      "integrity": "sha512-V8pAM3s8gsrXcCv6kCHSuwyb/gPsd863iT+v1PGXC4fSL/OJqsKhfK//v8P+w9ThKIoqNbEnsZqNy+WDnwQqCA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.12.tgz",
      "integrity": "sha512-xYfqYLjvm2UQ3TZggTGrwxjYaLB62b1Wiysw/YE3Yqbh86sOMoTn0feF98PonP7LtjsWOWcXEbGqDL7zv0uW8Q==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.12.tgz",
      "integrity": "sha512-ha0pHPamN+fWZY7GCzz5rKunlv9L5R8kdh+YNvP5awe3LtuXb5nRi/H27GeL2U+TdhDOptU7T6Is7mdwh5Ar3A==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.12.tgz",
      "integrity": "sha512-4tSyu3dW+ktzdEpuk6g49KdEangu3eCYoqPhWNsZgUhyegEda3M9rG0/j1GV/JjVVsj+lG7jWAyrTlLzd/WEBg==",
      "bundleDependencies": [
        "@napi-rs/wasm-runtime",
        "@emnapi/core",
        "@emnapi/runtime",
        "@tybys/wasm-util",
        "@emnapi/wasi-threads",
        "tslib"
      ],
      "cpu": [
        "wasm32"
      ],
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.5",
        "@emnapi/runtime": "^1.4.5",
        "@emnapi/wasi-threads": "^1.0.4",
        "@napi-rs/wasm-runtime": "^0.2.12",
        "@tybys/wasm-util": "^0.10.0",
        "tslib": "^2.8.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.12.tgz",
      "integrity": "sha512-iGLyD/cVP724+FGtMWslhcFyg4xyYyM+5F4hGvKA7eifPkXHRAUDFaimu53fpNg9X8dfP75pXx/zFt/jlNF+lg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.12.tgz",
      "integrity": "sha512-NKIh5rzw6CpEodv/++r0hGLlfgT/gFN+5WNdZtvh6wpU2BpGNgdjvj6H2oFc8nCM839QM1YOhjpgbAONUb4IxA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/vite": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/@tailwindcss/vite/-/vite-4.1.12.tgz",
      "integrity": "sha512-4pt0AMFDx7gzIrAOIYgYP0KCBuKWqyW8ayrdiLEjoJTT4pKTjrzG/e4uzWtTLDziC+66R9wbUqZBccJalSE5vQ==",
      "license": "MIT",
      "dependencies": {
        "@tailwindcss/node": "4.1.12",
        "@tailwindcss/oxide": "4.1.12",
        "tailwindcss": "4.1.12"
      },
      "peerDependencies": {
        "vite": "^5.2.0 || ^6 || ^7"
      }
    },
    "node_modules/@tanstack/query-core": {
      "version": "5.90.2",
      "resolved": "https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.90.2.tgz",
      "integrity": "sha512-k/TcR3YalnzibscALLwxeiLUub6jN5EDLwKDiO7q5f4ICEoptJ+n9+7vcEFy5/x/i6Q+Lb/tXrsKCggf5uQJXQ==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      }
    },
    "node_modules/@tanstack/react-query": {
      "version": "5.90.2",
      "resolved": "https://registry.npmjs.org/@tanstack/react-query/-/react-query-5.90.2.tgz",
      "integrity": "sha512-CLABiR+h5PYfOWr/z+vWFt5VsOA2ekQeRQBFSKlcoW6Ndx/f8rfyVmq4LbgOM4GG2qtxAxjLYLOpCNTYm4uKzw==",
      "license": "MIT",
      "dependencies": {
        "@tanstack/query-core": "5.90.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^18 || ^19"
      }
    },
    "node_modules/@tanstack/react-virtual": {
      "version": "3.13.12",
      "resolved": "https://registry.npmjs.org/@tanstack/react-virtual/-/react-virtual-3.13.12.tgz",
      "integrity": "sha512-Gd13QdxPSukP8ZrkbgS2RwoZseTTbQPLnQEn7HY/rqtM+8Zt95f7xKC7N0EsKs7aoz0WzZ+fditZux+F8EzYxA==",
      "license": "MIT",
      "dependencies": {
        "@tanstack/virtual-core": "3.13.12"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/@tanstack/virtual-core": {
      "version": "3.13.12",
      "resolved": "https://registry.npmjs.org/@tanstack/virtual-core/-/virtual-core-3.13.12.tgz",
      "integrity": "sha512-1YBOJfRHV4sXUmWsFSf5rQor4Ss82G8dQWLRbnk3GA4jeP8hQt1hxXh0tmflpC0dz3VgEv/1+qwPyLeWkQuPFA==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/tannerlinsley"
      }
    },
    "node_modules/@types/babel__core": {
      "version": "7.20.5",
      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.20.7",
        "@babel/types": "^7.20.7",
        "@types/babel__generator": "*",
        "@types/babel__template": "*",
        "@types/babel__traverse": "*"
      }
    },
    "node_modules/@types/babel__generator": {
      "version": "7.27.0",
      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__template": {
      "version": "7.4.4",
      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.1.0",
        "@babel/types": "^7.0.0"
      }
    },
    "node_modules/@types/babel__traverse": {
      "version": "7.28.0",
      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.28.0.tgz",
      "integrity": "sha512-8PvcXf70gTDZBgt9ptxJ8elBeBjcLOAcOtoO/mPJjtji1+CdGbHgm77om1GrsPxsiE+uXIpNSK64UYaIwQXd4Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.28.2"
      }
    },
    "node_modules/@types/d3-array": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/@types/d3-array/-/d3-array-3.2.2.tgz",
      "integrity": "sha512-hOLWVbm7uRza0BYXpIIW5pxfrKe0W+D5lrFiAEYR+pb6w3N2SwSMaJbXdUfSEv+dT4MfHBLtn5js0LAWaO6otw==",
      "license": "MIT"
    },
    "node_modules/@types/d3-color": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/@types/d3-color/-/d3-color-3.1.3.tgz",
      "integrity": "sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==",
      "license": "MIT"
    },
    "node_modules/@types/d3-ease": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-ease/-/d3-ease-3.0.2.tgz",
      "integrity": "sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==",
      "license": "MIT"
    },
    "node_modules/@types/d3-interpolate": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-interpolate/-/d3-interpolate-3.0.4.tgz",
      "integrity": "sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-color": "*"
      }
    },
    "node_modules/@types/d3-path": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/@types/d3-path/-/d3-path-3.1.1.tgz",
      "integrity": "sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-scale": {
      "version": "4.0.9",
      "resolved": "https://registry.npmjs.org/@types/d3-scale/-/d3-scale-4.0.9.tgz",
      "integrity": "sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-time": "*"
      }
    },
    "node_modules/@types/d3-scale-chromatic": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/@types/d3-scale-chromatic/-/d3-scale-chromatic-3.1.0.tgz",
      "integrity": "sha512-iWMJgwkK7yTRmWqRB5plb1kadXyQ5Sj8V/zYlFGMUBbIPKQScw+Dku9cAAMgJG+z5GYDoMjWGLVOvjghDEFnKQ==",
      "license": "MIT"
    },
    "node_modules/@types/d3-shape": {
      "version": "3.1.7",
      "resolved": "https://registry.npmjs.org/@types/d3-shape/-/d3-shape-3.1.7.tgz",
      "integrity": "sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==",
      "license": "MIT",
      "dependencies": {
        "@types/d3-path": "*"
      }
    },
    "node_modules/@types/d3-time": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time/-/d3-time-3.0.4.tgz",
      "integrity": "sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==",
      "license": "MIT"
    },
    "node_modules/@types/d3-time-format": {
      "version": "3.0.4",
      "resolved": "https://registry.npmjs.org/@types/d3-time-format/-/d3-time-format-3.0.4.tgz",
      "integrity": "sha512-or9DiDnYI1h38J9hxKEsw513+KVuFbEVhl7qdxcaudoiqWWepapUen+2vAriFGexr6W5+P4l9+HJrB39GG+oRg==",
      "license": "MIT"
    },
    "node_modules/@types/d3-timer": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/@types/d3-timer/-/d3-timer-3.0.2.tgz",
      "integrity": "sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==",
      "license": "MIT"
    },
    "node_modules/@types/estree": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
      "license": "MIT"
    },
    "node_modules/@types/hoist-non-react-statics": {
      "version": "3.3.7",
      "resolved": "https://registry.npmjs.org/@types/hoist-non-react-statics/-/hoist-non-react-statics-3.3.7.tgz",
      "integrity": "sha512-PQTyIulDkIDro8P+IHbKCsw7U2xxBYflVzW/FgWdCAePD9xGSidgA76/GeJ6lBKoblyhf9pBY763gbrN+1dI8g==",
      "license": "MIT",
      "dependencies": {
        "hoist-non-react-statics": "^3.3.0"
      },
      "peerDependencies": {
        "@types/react": "*"
      }
    },
    "node_modules/@types/json-schema": {
      "version": "7.0.15",
      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@types/react": {
      "version": "19.1.12",
      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.12.tgz",
      "integrity": "sha512-cMoR+FoAf/Jyq6+Df2/Z41jISvGZZ2eTlnsaJRptmZ76Caldwy1odD4xTr/gNV9VLj0AWgg/nmkevIyUfIIq5w==",
      "license": "MIT",
      "dependencies": {
        "csstype": "^3.0.2"
      }
    },
    "node_modules/@types/react-dom": {
      "version": "19.1.9",
      "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-19.1.9.tgz",
      "integrity": "sha512-qXRuZaOsAdXKFyOhRBg6Lqqc0yay13vN7KrIg4L7N4aaHN68ma9OK3NE1BoDFgFOTfM7zg+3/8+2n8rLUH3OKQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "@types/react": "^19.0.0"
      }
    },
    "node_modules/@types/stylis": {
      "version": "4.2.5",
      "resolved": "https://registry.npmjs.org/@types/stylis/-/stylis-4.2.5.tgz",
      "integrity": "sha512-1Xve+NMN7FWjY14vLoY5tL3BVEQ/n42YLwaqJIPYhotZ9uBHt87VceMwWQpzmdEt2TNXIorIFG+YeCUUW7RInw==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/@types/use-sync-external-store": {
      "version": "0.0.6",
      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.6.tgz",
      "integrity": "sha512-zFDAD+tlpf2r4asuHEj0XH6pY6i0g5NeAHPn+15wk3BV6JA69eERFXC1gyGThDkVa1zCyKr5jox1+2LbV/AMLg==",
      "license": "MIT"
    },
    "node_modules/@vitejs/plugin-react": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-5.0.2.tgz",
      "integrity": "sha512-tmyFgixPZCx2+e6VO9TNITWcCQl8+Nl/E8YbAyPVv85QCc7/A3JrdfG2A8gIzvVhWuzMOVrFW1aReaNxrI6tbw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@babel/core": "^7.28.3",
        "@babel/plugin-transform-react-jsx-self": "^7.27.1",
        "@babel/plugin-transform-react-jsx-source": "^7.27.1",
        "@rolldown/pluginutils": "1.0.0-beta.34",
        "@types/babel__core": "^7.20.5",
        "react-refresh": "^0.17.0"
      },
      "engines": {
        "node": "^20.19.0 || >=22.12.0"
      },
      "peerDependencies": {
        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"
      }
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-jsx": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
      }
    },
    "node_modules/ajv": {
      "version": "6.12.6",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fast-deep-equal": "^3.1.1",
        "fast-json-stable-stringify": "^2.0.0",
        "json-schema-traverse": "^0.4.1",
        "uri-js": "^4.2.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/argparse": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "dev": true,
      "license": "Python-2.0"
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/axios": {
      "version": "1.12.2",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.12.2.tgz",
      "integrity": "sha512-vMJzPewAlRyOgxV2dU0Cuz2O8zzzx9VYtbJOaBgXFeLc4IV/Eg50n4LowmehOOR61S8ZMpc2K5Sa7g6A4jfkUw==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.4",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/browserslist": {
      "version": "4.25.4",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.4.tgz",
      "integrity": "sha512-4jYpcjabC606xJ3kw2QwGEZKX0Aw7sgQdZCvIK9dhVSPh76BKo+C+btT1RRofH7B+8iNpEbgGNVWiLki5q93yg==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001737",
        "electron-to-chromium": "^1.5.211",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/callsites": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/camelize": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/camelize/-/camelize-1.0.1.tgz",
      "integrity": "sha512-dU+Tx2fsypxTgtLoE36npi3UqcjSSMNYfkqgmoEhtZrraP5VWq0K7FkWVTYa8eMPtnU/G2txVsfdCJTn9uzpuQ==",
      "license": "MIT",
      "peer": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001739",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001739.tgz",
      "integrity": "sha512-y+j60d6ulelrNSwpPyrHdl+9mJnQzHBr08xm48Qno0nSk4h3Qojh+ziv2qE6rXf4k3tadF4o1J/1tAbVm1NtnA==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chalk": {
      "version": "4.1.2",
      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.1.0",
        "supports-color": "^7.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/chalk?sponsor=1"
      }
    },
    "node_modules/chart.js": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.5.0.tgz",
      "integrity": "sha512-aYeC/jDgSEx8SHWZvANYMioYMZ2KX02W6f6uVfyteuCGcadDLcYVHdfdygsTQkQ4TKn5lghoojAsPj5pu0SnvQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@kurkle/color": "^0.3.0"
      },
      "engines": {
        "pnpm": ">=8"
      }
    },
    "node_modules/chownr": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/clsx": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
      "integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/convert-source-map": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/cookie": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",
      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",
      "license": "MIT",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/css-color-keywords": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/css-color-keywords/-/css-color-keywords-1.0.0.tgz",
      "integrity": "sha512-FyyrDHZKEjXDpNJYvVsV960FiqQyXc/LlYmsxl2BcdMb2WPx0OGRVgTg55rPSyLSNMqP52R9r8geSp7apN3Ofg==",
      "license": "ISC",
      "peer": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/css-to-react-native": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/css-to-react-native/-/css-to-react-native-3.2.0.tgz",
      "integrity": "sha512-e8RKaLXMOFii+02mOlqwjbD00KSEKqblnpO9e++1aXS1fPQOpS1YoqdVHBqPjHNoxeF2mimzVqawm2KCbEdtHQ==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "camelize": "^1.0.0",
        "css-color-keywords": "^1.0.0",
        "postcss-value-parser": "^4.0.2"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/d3-array": {
      "version": "3.2.4",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-3.2.4.tgz",
      "integrity": "sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==",
      "license": "ISC",
      "dependencies": {
        "internmap": "1 - 2"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-color": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-color/-/d3-color-3.1.0.tgz",
      "integrity": "sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-ease": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-ease/-/d3-ease-3.0.1.tgz",
      "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-format": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/d3-format/-/d3-format-1.4.5.tgz",
      "integrity": "sha512-J0piedu6Z8iB6TbIGfZgDzfXxUFN3qQRMofy2oPdXzQibYGqPB/9iMcxr/TGalU+2RsyDO+U4f33id8tbnSRMQ==",
      "license": "BSD-3-Clause"
    },
    "node_modules/d3-interpolate": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-interpolate/-/d3-interpolate-3.0.1.tgz",
      "integrity": "sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-path": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-path/-/d3-path-3.1.0.tgz",
      "integrity": "sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/d3-scale/-/d3-scale-4.0.2.tgz",
      "integrity": "sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2.10.0 - 3",
        "d3-format": "1 - 3",
        "d3-interpolate": "1.2.0 - 3",
        "d3-time": "2.1.1 - 3",
        "d3-time-format": "2 - 4"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-scale-chromatic": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-scale-chromatic/-/d3-scale-chromatic-3.1.0.tgz",
      "integrity": "sha512-A3s5PWiZ9YCXFye1o246KoscMWqf8BsD9eRiJ3He7C9OBaxKhAd5TFCdEx/7VbKtxxTsu//1mMJFrEt572cEyQ==",
      "license": "ISC",
      "dependencies": {
        "d3-color": "1 - 3",
        "d3-interpolate": "1 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-shape": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/d3-shape/-/d3-shape-3.2.0.tgz",
      "integrity": "sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==",
      "license": "ISC",
      "dependencies": {
        "d3-path": "^3.1.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-3.1.0.tgz",
      "integrity": "sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==",
      "license": "ISC",
      "dependencies": {
        "d3-array": "2 - 3"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/d3-time-format": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/d3-time-format/-/d3-time-format-3.0.0.tgz",
      "integrity": "sha512-UXJh6EKsHBTjopVqZBhFysQcoXSv/5yLONZvkQ5Kk3qbwiUYkdX17Xa1PT6U1ZWXGGfB1ey5L8dKMlFq2DO0Ag==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-time": "1 - 2"
      }
    },
    "node_modules/d3-time-format/node_modules/d3-array": {
      "version": "2.12.1",
      "resolved": "https://registry.npmjs.org/d3-array/-/d3-array-2.12.1.tgz",
      "integrity": "sha512-B0ErZK/66mHtEsR1TkPEEkwdy+WDesimkM5gpZr5Dsg54BiTA5RXtYW5qTLIAcekaS9xfZrzBLF/OAkB3Qn1YQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "internmap": "^1.0.0"
      }
    },
    "node_modules/d3-time-format/node_modules/d3-time": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/d3-time/-/d3-time-2.1.1.tgz",
      "integrity": "sha512-/eIQe/eR4kCQwq7yxi7z4c6qEXf2IYGcjoWB5OOQy4Tq9Uv39/947qlDcN2TLkiTzQWzvnsuYPB9TrWaNfipKQ==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "d3-array": "2"
      }
    },
    "node_modules/d3-time-format/node_modules/internmap": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-1.0.1.tgz",
      "integrity": "sha512-lDB5YccMydFBtasVtxnZ3MRBHuaoE8GKsppq+EchKL2U4nK/DmEpPHNH8MZe5HkMtpSiTSOZwfN0tzYjO/lJEw==",
      "license": "ISC"
    },
    "node_modules/d3-timer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/d3-timer/-/d3-timer-3.0.1.tgz",
      "integrity": "sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/date-fns": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/date-fns/-/date-fns-4.1.0.tgz",
      "integrity": "sha512-Ukq0owbQXxa/U3EGtsdVBkR1w7KOQ5gIBqdH2hkvknzZPYvBxb/aa6E8L7tmjFtkwZBu3UXBbjIgPo/Ez4xaNg==",
      "license": "MIT",
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/kossnocorp"
      }
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decimal.js-light": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/decimal.js-light/-/decimal.js-light-2.5.1.tgz",
      "integrity": "sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==",
      "license": "MIT"
    },
    "node_modules/deep-is": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/deepmerge": {
      "version": "4.3.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
      "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.211",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.211.tgz",
      "integrity": "sha512-IGBvimJkotaLzFnwIVgW9/UD/AOJ2tByUmeOrtqBfACSbAw5b1G0XpvdaieKyc7ULmbwXVx+4e4Be8pOPBrYkw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.3",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.3.tgz",
      "integrity": "sha512-d4lC8xfavMeBjzGr2vECC3fsGXziXZQyJxD868h2M/mBI3PwAuODxAkLkq5HYuvrPYcUtiLzsTo8U3PgX3Ocww==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-toolkit": {
      "version": "1.39.10",
      "resolved": "https://registry.npmjs.org/es-toolkit/-/es-toolkit-1.39.10.tgz",
      "integrity": "sha512-E0iGnTtbDhkeczB0T+mxmoVlT4YNweEKBLq7oaU4p11mecdsZpNWOglI4895Vh4usbQ+LsJiuLuI2L0Vdmfm2w==",
      "license": "MIT",
      "workspaces": [
        "docs",
        "benchmarks"
      ]
    },
    "node_modules/esbuild": {
      "version": "0.25.9",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.9.tgz",
      "integrity": "sha512-CRbODhYyQx3qp7ZEwzxOk4JBqmD/seJrzPa/cGjY1VtIn5E09Oi9/dB4JwctnfZ8Q8iT7rioVv5k/FNT/uf54g==",
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.9",
        "@esbuild/android-arm": "0.25.9",
        "@esbuild/android-arm64": "0.25.9",
        "@esbuild/android-x64": "0.25.9",
        "@esbuild/darwin-arm64": "0.25.9",
        "@esbuild/darwin-x64": "0.25.9",
        "@esbuild/freebsd-arm64": "0.25.9",
        "@esbuild/freebsd-x64": "0.25.9",
        "@esbuild/linux-arm": "0.25.9",
        "@esbuild/linux-arm64": "0.25.9",
        "@esbuild/linux-ia32": "0.25.9",
        "@esbuild/linux-loong64": "0.25.9",
        "@esbuild/linux-mips64el": "0.25.9",
        "@esbuild/linux-ppc64": "0.25.9",
        "@esbuild/linux-riscv64": "0.25.9",
        "@esbuild/linux-s390x": "0.25.9",
        "@esbuild/linux-x64": "0.25.9",
        "@esbuild/netbsd-arm64": "0.25.9",
        "@esbuild/netbsd-x64": "0.25.9",
        "@esbuild/openbsd-arm64": "0.25.9",
        "@esbuild/openbsd-x64": "0.25.9",
        "@esbuild/openharmony-arm64": "0.25.9",
        "@esbuild/sunos-x64": "0.25.9",
        "@esbuild/win32-arm64": "0.25.9",
        "@esbuild/win32-ia32": "0.25.9",
        "@esbuild/win32-x64": "0.25.9"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/escape-string-regexp": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/eslint": {
      "version": "9.34.0",
      "resolved": "https://registry.npmjs.org/eslint/-/eslint-9.34.0.tgz",
      "integrity": "sha512-RNCHRX5EwdrESy3Jc9o8ie8Bog+PeYvvSR8sDGoZxNFTvZ4dlxUB3WzQ3bQMztFrSRODGrLLj8g6OFuGY/aiQg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@eslint-community/eslint-utils": "^4.2.0",
        "@eslint-community/regexpp": "^4.12.1",
        "@eslint/config-array": "^0.21.0",
        "@eslint/config-helpers": "^0.3.1",
        "@eslint/core": "^0.15.2",
        "@eslint/eslintrc": "^3.3.1",
        "@eslint/js": "9.34.0",
        "@eslint/plugin-kit": "^0.3.5",
        "@humanfs/node": "^0.16.6",
        "@humanwhocodes/module-importer": "^1.0.1",
        "@humanwhocodes/retry": "^0.4.2",
        "@types/estree": "^1.0.6",
        "@types/json-schema": "^7.0.15",
        "ajv": "^6.12.4",
        "chalk": "^4.0.0",
        "cross-spawn": "^7.0.6",
        "debug": "^4.3.2",
        "escape-string-regexp": "^4.0.0",
        "eslint-scope": "^8.4.0",
        "eslint-visitor-keys": "^4.2.1",
        "espree": "^10.4.0",
        "esquery": "^1.5.0",
        "esutils": "^2.0.2",
        "fast-deep-equal": "^3.1.3",
        "file-entry-cache": "^8.0.0",
        "find-up": "^5.0.0",
        "glob-parent": "^6.0.2",
        "ignore": "^5.2.0",
        "imurmurhash": "^0.1.4",
        "is-glob": "^4.0.0",
        "json-stable-stringify-without-jsonify": "^1.0.1",
        "lodash.merge": "^4.6.2",
        "minimatch": "^3.1.2",
        "natural-compare": "^1.4.0",
        "optionator": "^0.9.3"
      },
      "bin": {
        "eslint": "bin/eslint.js"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://eslint.org/donate"
      },
      "peerDependencies": {
        "jiti": "*"
      },
      "peerDependenciesMeta": {
        "jiti": {
          "optional": true
        }
      }
    },
    "node_modules/eslint-plugin-react-hooks": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-5.2.0.tgz",
      "integrity": "sha512-+f15FfK64YQwZdJNELETdn5ibXEUQmW1DZL6KXhNnc2heoy/sg9VJJeT7n8TlMWouzWqSWavFkIhHyIbIAEapg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0"
      }
    },
    "node_modules/eslint-plugin-react-refresh": {
      "version": "0.4.20",
      "resolved": "https://registry.npmjs.org/eslint-plugin-react-refresh/-/eslint-plugin-react-refresh-0.4.20.tgz",
      "integrity": "sha512-XpbHQ2q5gUF8BGOX4dHe+71qoirYMhApEPZ7sfhF/dNnOF1UXnCMGZf79SFTBO7Bz5YEIT4TMieSlJBWhP9WBA==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "eslint": ">=8.40"
      }
    },
    "node_modules/eslint-scope": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgz",
      "integrity": "sha512-sNXOfKCn74rt8RICKMvJS7XKV/Xk9kA7DyJr8mJik3S7Cwgy3qlkkmyS2uQB3jiJg6VNdZd/pDBJu0nvG2NlTg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "esrecurse": "^4.3.0",
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/eslint-visitor-keys": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgz",
      "integrity": "sha512-Uhdk5sfqcee/9H/rCOJikYz67o0a2Tw2hGRPOG2Y1R2dg7brRe1uG0yaNQDHu+TO/uQPF/5eCapvYSmHUjt7JQ==",
      "dev": true,
      "license": "Apache-2.0",
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/espree": {
      "version": "10.4.0",
      "resolved": "https://registry.npmjs.org/espree/-/espree-10.4.0.tgz",
      "integrity": "sha512-j6PAQ2uUr79PZhBjP5C5fhl8e39FmRnOjsD5lGnWrFU8i2G776tBK7+nP8KuQUTTyAZUwfQqXAgrVH5MbH9CYQ==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "acorn": "^8.15.0",
        "acorn-jsx": "^5.3.2",
        "eslint-visitor-keys": "^4.2.1"
      },
      "engines": {
        "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
      },
      "funding": {
        "url": "https://opencollective.com/eslint"
      }
    },
    "node_modules/esquery": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
      "dev": true,
      "license": "BSD-3-Clause",
      "dependencies": {
        "estraverse": "^5.1.0"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/esrecurse": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "estraverse": "^5.2.0"
      },
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/estraverse": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=4.0"
      }
    },
    "node_modules/esutils": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
      "dev": true,
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/eventemitter3": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz",
      "integrity": "sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==",
      "license": "MIT"
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-json-stable-stringify": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fast-levenshtein": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/fdir": {
      "version": "6.5.0",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.5.0.tgz",
      "integrity": "sha512-tIbYtZbucOs0BRGqPJkshJUYdL+SDH7dVM8gjy+ERp3WAUjLEFJE+02kanyHtwjWOnwrKYBiwAmM0p4kLJAnXg==",
      "license": "MIT",
      "engines": {
        "node": ">=12.0.0"
      },
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/file-entry-cache": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
      "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flat-cache": "^4.0.0"
      },
      "engines": {
        "node": ">=16.0.0"
      }
    },
    "node_modules/find-up": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "locate-path": "^6.0.0",
        "path-exists": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/flat-cache": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
      "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "flatted": "^3.2.9",
        "keyv": "^4.5.4"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/flatted": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
      "integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/follow-redirects": {
      "version": "1.15.11",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.11.tgz",
      "integrity": "sha512-deG2P0JfjrTxl50XGCDyfI97ZGVCxIpfKYmfyrQ54n5FO/0gfIES8C/Psl6kWVDolizcaaxZJnTS0QSMxvnsBQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/form-data": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.4.tgz",
      "integrity": "sha512-KrGhL9Q4zjj0kiUt5OO4Mr/A/jlI2jDYs5eHBpYHPcBEVSiipAvn2Ko2HnPe20rmcuuvMHNdZFp+4IlGTMF0Ow==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "hasown": "^2.0.2",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/formik": {
      "version": "2.4.6",
      "resolved": "https://registry.npmjs.org/formik/-/formik-2.4.6.tgz",
      "integrity": "sha512-A+2EI7U7aG296q2TLGvNapDNTZp1khVt5Vk0Q/fyfSROss0V/V6+txt2aJnwEos44IxTCW/LYAi/zgWzlevj+g==",
      "funding": [
        {
          "type": "individual",
          "url": "https://opencollective.com/formik"
        }
      ],
      "license": "Apache-2.0",
      "dependencies": {
        "@types/hoist-non-react-statics": "^3.3.1",
        "deepmerge": "^2.1.1",
        "hoist-non-react-statics": "^3.3.0",
        "lodash": "^4.17.21",
        "lodash-es": "^4.17.21",
        "react-fast-compare": "^2.0.1",
        "tiny-warning": "^1.0.2",
        "tslib": "^2.0.0"
      },
      "peerDependencies": {
        "react": ">=16.8.0"
      }
    },
    "node_modules/formik/node_modules/deepmerge": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-2.2.1.tgz",
      "integrity": "sha512-R9hc1Xa/NOBi9WRVUWg19rl1UB7Tt4kuPd+thNJgFZoxXsTz7ncaPaeIm+40oSGuP33DfMb4sZt1QIGiJzC4EA==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/framer-motion": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/framer-motion/-/framer-motion-12.23.12.tgz",
      "integrity": "sha512-6e78rdVtnBvlEVgu6eFEAgG9v3wLnYEboM8I5O5EXvfKC8gxGQB8wXJdhkMy10iVcn05jl6CNw7/HTsTCfwcWg==",
      "license": "MIT",
      "dependencies": {
        "motion-dom": "^12.23.12",
        "motion-utils": "^12.23.6",
        "tslib": "^2.4.0"
      },
      "peerDependencies": {
        "@emotion/is-prop-valid": "*",
        "react": "^18.0.0 || ^19.0.0",
        "react-dom": "^18.0.0 || ^19.0.0"
      },
      "peerDependenciesMeta": {
        "@emotion/is-prop-valid": {
          "optional": true
        },
        "react": {
          "optional": true
        },
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gensync": {
      "version": "1.0.0-beta.2",
      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/globals": {
      "version": "16.3.0",
      "resolved": "https://registry.npmjs.org/globals/-/globals-16.3.0.tgz",
      "integrity": "sha512-bqWEnJ1Nt3neqx2q5SFfGS8r/ahumIakg3HcwtNlrVlwXIeNumWn/c7Pn/wKzGhf6SaW6H6uWXLqC30STCMchQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=18"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/has-flag": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hoist-non-react-statics": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
      "license": "BSD-3-Clause",
      "dependencies": {
        "react-is": "^16.7.0"
      }
    },
    "node_modules/hoist-non-react-statics/node_modules/react-is": {
      "version": "16.13.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
      "license": "MIT"
    },
    "node_modules/ignore": {
      "version": "5.3.2",
      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/immer": {
      "version": "10.1.3",
      "resolved": "https://registry.npmjs.org/immer/-/immer-10.1.3.tgz",
      "integrity": "sha512-tmjF/k8QDKydUlm3mZU+tjM6zeq9/fFpPqH9SzWmBnVVKsPBg/V66qsMwb3/Bo90cgUN+ghdVBess+hPsxUyRw==",
      "license": "MIT",
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/immer"
      }
    },
    "node_modules/import-fresh": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
      "integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "parent-module": "^1.0.0",
        "resolve-from": "^4.0.0"
      },
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/internmap": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/internmap/-/internmap-2.0.3.tgz",
      "integrity": "sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==",
      "license": "ISC",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/jiti": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.5.1.tgz",
      "integrity": "sha512-twQoecYPiVA5K/h6SxtORw/Bs3ar+mLUtoPSc7iMXzQzK8d7eJ/R09wmTwAjiamETn1cXYPGfNnu7DMoHgu12w==",
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/js-tokens": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/js-yaml": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "argparse": "^2.0.1"
      },
      "bin": {
        "js-yaml": "bin/js-yaml.js"
      }
    },
    "node_modules/jsesc": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jsesc": "bin/jsesc"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/json-buffer": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-schema-traverse": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json-stable-stringify-without-jsonify": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/json5": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "json5": "lib/cli.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/keyv": {
      "version": "4.5.4",
      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "json-buffer": "3.0.1"
      }
    },
    "node_modules/levn": {
      "version": "0.4.1",
      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1",
        "type-check": "~0.4.0"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.30.1",
        "lightningcss-darwin-x64": "1.30.1",
        "lightningcss-freebsd-x64": "1.30.1",
        "lightningcss-linux-arm-gnueabihf": "1.30.1",
        "lightningcss-linux-arm64-gnu": "1.30.1",
        "lightningcss-linux-arm64-musl": "1.30.1",
        "lightningcss-linux-x64-gnu": "1.30.1",
        "lightningcss-linux-x64-musl": "1.30.1",
        "lightningcss-win32-arm64-msvc": "1.30.1",
        "lightningcss-win32-x64-msvc": "1.30.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
      "cpu": [
        "arm"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/locate-path": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-locate": "^5.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/lodash": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
      "license": "MIT"
    },
    "node_modules/lodash-es": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==",
      "license": "MIT"
    },
    "node_modules/lodash.merge": {
      "version": "4.6.2",
      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "yallist": "^3.0.2"
      }
    },
    "node_modules/lucide-react": {
      "version": "0.542.0",
      "resolved": "https://registry.npmjs.org/lucide-react/-/lucide-react-0.542.0.tgz",
      "integrity": "sha512-w3hD8/SQB7+lzU2r4VdFyzzOzKnUjTZIF/MQJGSSvni7Llewni4vuViRppfRAa2guOsY5k4jZyxw/i9DQHv+dw==",
      "license": "ISC",
      "peerDependencies": {
        "react": "^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/magic-string": {
      "version": "0.30.18",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.18.tgz",
      "integrity": "sha512-yi8swmWbO17qHhwIBNeeZxTceJMeBvWJaId6dyvTSOwTipqeHhMhOrz6513r1sOKnpvQ7zkhlG8tPrpilwTxHQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.5"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/minizlib": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
      "license": "MIT",
      "dependencies": {
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mkdirp": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
      "license": "MIT",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/motion-dom": {
      "version": "12.23.12",
      "resolved": "https://registry.npmjs.org/motion-dom/-/motion-dom-12.23.12.tgz",
      "integrity": "sha512-RcR4fvMCTESQBD/uKQe49D5RUeDOokkGRmz4ceaJKDBgHYtZtntC/s2vLvY38gqGaytinij/yi3hMcWVcEF5Kw==",
      "license": "MIT",
      "dependencies": {
        "motion-utils": "^12.23.6"
      }
    },
    "node_modules/motion-utils": {
      "version": "12.23.6",
      "resolved": "https://registry.npmjs.org/motion-utils/-/motion-utils-12.23.6.tgz",
      "integrity": "sha512-eAWoPgr4eFEOFfg2WjIsMoqJTW6Z8MTUCgn/GZ3VRpClWBdnbjryiA3ZSNLyxCTmCQx4RmYX6jX1iWHbenUPNQ==",
      "license": "MIT"
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/natural-compare": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/optionator": {
      "version": "0.9.4",
      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "deep-is": "^0.1.3",
        "fast-levenshtein": "^2.0.6",
        "levn": "^0.4.1",
        "prelude-ls": "^1.2.1",
        "type-check": "^0.4.0",
        "word-wrap": "^1.2.5"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-locate": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "p-limit": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/parent-module": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "callsites": "^3.0.0"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/path-exists": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.3.tgz",
      "integrity": "sha512-5gTmgEY/sqK6gFXLIsQNH19lWb4ebPDLA4SdLP7dsWkIXHWlG66oPuVvXSGFPppYZz8ZDZq0dYYrbHfBCVUb1Q==",
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.6",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz",
      "integrity": "sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.11",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/prelude-ls": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/property-expr": {
      "version": "2.0.6",
      "resolved": "https://registry.npmjs.org/property-expr/-/property-expr-2.0.6.tgz",
      "integrity": "sha512-SVtmxhRE/CGkn3eZY1T6pC8Nln6Fr/lu1mKSgRud0eC73whjGfoAogbn78LkD8aFL0zz3bAFerKSnOl7NlErBA==",
      "license": "MIT"
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "license": "MIT"
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/react": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react/-/react-19.1.1.tgz",
      "integrity": "sha512-w8nqGImo45dmMIfljjMwOGtbmC/mk4CMYhWIicdSflH91J9TyCyczcPFXJzrZ/ZXcgGRFeP6BU0BEJTw6tZdfQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-chartjs-2": {
      "version": "5.3.0",
      "resolved": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-5.3.0.tgz",
      "integrity": "sha512-UfZZFnDsERI3c3CZGxzvNJd02SHjaSJ8kgW1djn65H1KK8rehwTjyrRKOG3VTMG8wtHZ5rgAO5oTHtHi9GCCmw==",
      "license": "MIT",
      "peerDependencies": {
        "chart.js": "^4.1.1",
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/react-content-loader": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/react-content-loader/-/react-content-loader-7.1.1.tgz",
      "integrity": "sha512-yNkqtd+15wXRLfDKZb5nTqDV2fPTG2kpUgeGRb+WBz43bU0j4DSGXETF0bnFr44fAoTPpm0Dya0WGdhpHSvtYA==",
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "peerDependencies": {
        "react": ">=16.0.0"
      }
    },
    "node_modules/react-data-table-component": {
      "version": "7.7.0",
      "resolved": "https://registry.npmjs.org/react-data-table-component/-/react-data-table-component-7.7.0.tgz",
      "integrity": "sha512-5knL6zMSKlbvzu9P04KM5Lx8/EyQujb4I9z3rWeoVX++IDJadQ7aR4X5J6EeS90wjK0Xoa6btaVeglnCAqD2ag==",
      "license": "Apache-2.0",
      "dependencies": {
        "deepmerge": "^4.3.1"
      },
      "peerDependencies": {
        "react": ">= 17.0.0",
        "styled-components": ">= 5.0.0"
      },
      "peerDependenciesMeta": {
        "styled-components": {
          "optional": false
        }
      }
    },
    "node_modules/react-datepicker": {
      "version": "8.7.0",
      "resolved": "https://registry.npmjs.org/react-datepicker/-/react-datepicker-8.7.0.tgz",
      "integrity": "sha512-r5OJbiLWc3YiVNy69Kau07/aVgVGsFVMA6+nlqCV7vyQ8q0FUOnJ+wAI4CgVxHejG3i5djAEiebrF8/Eip4rIw==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react": "^0.27.15",
        "clsx": "^2.1.1",
        "date-fns": "^4.1.0"
      },
      "peerDependencies": {
        "react": "^16.9.0 || ^17 || ^18 || ^19 || ^19.0.0-rc",
        "react-dom": "^16.9.0 || ^17 || ^18 || ^19 || ^19.0.0-rc"
      }
    },
    "node_modules/react-datepicker/node_modules/@floating-ui/react": {
      "version": "0.27.16",
      "resolved": "https://registry.npmjs.org/@floating-ui/react/-/react-0.27.16.tgz",
      "integrity": "sha512-9O8N4SeG2z++TSM8QA/KTeKFBVCNEz/AGS7gWPJf6KFRzmRWixFRnCnkPHRDwSVZW6QPDO6uT0P2SpWNKCc9/g==",
      "license": "MIT",
      "dependencies": {
        "@floating-ui/react-dom": "^2.1.6",
        "@floating-ui/utils": "^0.2.10",
        "tabbable": "^6.0.0"
      },
      "peerDependencies": {
        "react": ">=17.0.0",
        "react-dom": ">=17.0.0"
      }
    },
    "node_modules/react-dom": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-19.1.1.tgz",
      "integrity": "sha512-Dlq/5LAZgF0Gaz6yiqZCf6VCcZs1ghAJyrsu84Q/GT0gV+mCxbfmKNoGRKBYMJ8IEdGPqu49YWXD02GCknEDkw==",
      "license": "MIT",
      "dependencies": {
        "scheduler": "^0.26.0"
      },
      "peerDependencies": {
        "react": "^19.1.1"
      }
    },
    "node_modules/react-fast-compare": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/react-fast-compare/-/react-fast-compare-2.0.4.tgz",
      "integrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw==",
      "license": "MIT"
    },
    "node_modules/react-icons": {
      "version": "5.5.0",
      "resolved": "https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz",
      "integrity": "sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==",
      "license": "MIT",
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/react-is": {
      "version": "19.1.1",
      "resolved": "https://registry.npmjs.org/react-is/-/react-is-19.1.1.tgz",
      "integrity": "sha512-tr41fA15Vn8p4X9ntI+yCyeGSf1TlYaY5vlTZfQmeLBrFo3psOPX6HhTDnFNL9uj3EhP0KAQ80cugCl4b4BERA==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/react-loading-skeleton": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/react-loading-skeleton/-/react-loading-skeleton-3.5.0.tgz",
      "integrity": "sha512-gxxSyLbrEAdXTKgfbpBEFZCO/P153DnqSCQau2+o6lNy1jgMRr2MmRmOzMmyrwSaSYLRB8g7b0waYPmUjz7IhQ==",
      "license": "MIT",
      "peerDependencies": {
        "react": ">=16.8.0"
      }
    },
    "node_modules/react-redux": {
      "version": "9.2.0",
      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-9.2.0.tgz",
      "integrity": "sha512-ROY9fvHhwOD9ySfrF0wmvu//bKCQ6AeZZq1nJNtbDC+kk5DuSuNX/n6YWYF/SYy7bSba4D4FSz8DJeKY/S/r+g==",
      "license": "MIT",
      "dependencies": {
        "@types/use-sync-external-store": "^0.0.6",
        "use-sync-external-store": "^1.4.0"
      },
      "peerDependencies": {
        "@types/react": "^18.2.25 || ^19",
        "react": "^18.0 || ^19",
        "redux": "^5.0.0"
      },
      "peerDependenciesMeta": {
        "@types/react": {
          "optional": true
        },
        "redux": {
          "optional": true
        }
      }
    },
    "node_modules/react-refresh": {
      "version": "0.17.0",
      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/react-router": {
      "version": "7.8.2",
      "resolved": "https://registry.npmjs.org/react-router/-/react-router-7.8.2.tgz",
      "integrity": "sha512-7M2fR1JbIZ/jFWqelpvSZx+7vd7UlBTfdZqf6OSdF9g6+sfdqJDAWcak6ervbHph200ePlu+7G8LdoiC3ReyAQ==",
      "license": "MIT",
      "dependencies": {
        "cookie": "^1.0.1",
        "set-cookie-parser": "^2.6.0"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      },
      "peerDependenciesMeta": {
        "react-dom": {
          "optional": true
        }
      }
    },
    "node_modules/react-router-dom": {
      "version": "7.8.2",
      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.8.2.tgz",
      "integrity": "sha512-Z4VM5mKDipal2jQ385H6UBhiiEDlnJPx6jyWsTYoZQdl5TrjxEV2a9yl3Fi60NBJxYzOTGTTHXPi0pdizvTwow==",
      "license": "MIT",
      "dependencies": {
        "react-router": "7.8.2"
      },
      "engines": {
        "node": ">=20.0.0"
      },
      "peerDependencies": {
        "react": ">=18",
        "react-dom": ">=18"
      }
    },
    "node_modules/react-virtualized-auto-sizer": {
      "version": "1.0.26",
      "resolved": "https://registry.npmjs.org/react-virtualized-auto-sizer/-/react-virtualized-auto-sizer-1.0.26.tgz",
      "integrity": "sha512-CblNyiNVw2o+hsa5/49NH2ogGxZ+t+3aweRvNSq7TVjDIlwk7ir4lencEg5HxHeSzwNarSkNkiu0qJSOXtxm5A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^15.3.0 || ^16.0.0-alpha || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/recharts": {
      "version": "3.2.1",
      "resolved": "https://registry.npmjs.org/recharts/-/recharts-3.2.1.tgz",
      "integrity": "sha512-0JKwHRiFZdmLq/6nmilxEZl3pqb4T+aKkOkOi/ZISRZwfBhVMgInxzlYU9D4KnCH3KINScLy68m/OvMXoYGZUw==",
      "license": "MIT",
      "dependencies": {
        "@reduxjs/toolkit": "1.x.x || 2.x.x",
        "clsx": "^2.1.1",
        "decimal.js-light": "^2.5.1",
        "es-toolkit": "^1.39.3",
        "eventemitter3": "^5.0.1",
        "immer": "^10.1.1",
        "react-redux": "8.x.x || 9.x.x",
        "reselect": "5.1.1",
        "tiny-invariant": "^1.3.3",
        "use-sync-external-store": "^1.2.2",
        "victory-vendor": "^37.0.2"
      },
      "engines": {
        "node": ">=18"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-dom": "^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0",
        "react-is": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/redux": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/redux/-/redux-5.0.1.tgz",
      "integrity": "sha512-M9/ELqF6fy8FwmkpnF0S3YKOqMyoWJ4+CS5Efg2ct3oY9daQvd/Pc71FpGZsVsbl3Cpb+IIcjBDUnnyBdQbq4w==",
      "license": "MIT"
    },
    "node_modules/redux-thunk": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-3.1.0.tgz",
      "integrity": "sha512-NW2r5T6ksUKXCabzhL9z+h206HQw/NJkcLm1GPImRQ8IzfXwRGqjVhKJGauHirT0DAuyy6hjdnMZaRoAcy0Klw==",
      "license": "MIT",
      "peerDependencies": {
        "redux": "^5.0.0"
      }
    },
    "node_modules/reselect": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/reselect/-/reselect-5.1.1.tgz",
      "integrity": "sha512-K/BG6eIky/SBpzfHZv/dd+9JBFiS4SWV7FIujVyJRux6e45+73RaUHXLmIR1f7WOMaQ0U1km6qwklRQxpJJY0w==",
      "license": "MIT"
    },
    "node_modules/resolve-from": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/rollup": {
      "version": "4.50.0",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.50.0.tgz",
      "integrity": "sha512-/Zl4D8zPifNmyGzJS+3kVoyXeDeT/GrsJM94sACNg9RtUE0hrHa1bNPtRSrfHTMH5HjRzce6K7rlTh3Khiw+pw==",
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.8"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.50.0",
        "@rollup/rollup-android-arm64": "4.50.0",
        "@rollup/rollup-darwin-arm64": "4.50.0",
        "@rollup/rollup-darwin-x64": "4.50.0",
        "@rollup/rollup-freebsd-arm64": "4.50.0",
        "@rollup/rollup-freebsd-x64": "4.50.0",
        "@rollup/rollup-linux-arm-gnueabihf": "4.50.0",
        "@rollup/rollup-linux-arm-musleabihf": "4.50.0",
        "@rollup/rollup-linux-arm64-gnu": "4.50.0",
        "@rollup/rollup-linux-arm64-musl": "4.50.0",
        "@rollup/rollup-linux-loongarch64-gnu": "4.50.0",
        "@rollup/rollup-linux-ppc64-gnu": "4.50.0",
        "@rollup/rollup-linux-riscv64-gnu": "4.50.0",
        "@rollup/rollup-linux-riscv64-musl": "4.50.0",
        "@rollup/rollup-linux-s390x-gnu": "4.50.0",
        "@rollup/rollup-linux-x64-gnu": "4.50.0",
        "@rollup/rollup-linux-x64-musl": "4.50.0",
        "@rollup/rollup-openharmony-arm64": "4.50.0",
        "@rollup/rollup-win32-arm64-msvc": "4.50.0",
        "@rollup/rollup-win32-ia32-msvc": "4.50.0",
        "@rollup/rollup-win32-x64-msvc": "4.50.0",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/scheduler": {
      "version": "0.26.0",
      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.26.0.tgz",
      "integrity": "sha512-NlHwttCI/l5gCPR3D1nNXtWABUmBwvZpEQiD4IXSbIDq8BzLIK/7Ir5gTFSGZDUu37K5cMNp0hFtzO38sC7gWA==",
      "license": "MIT"
    },
    "node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",
      "license": "MIT"
    },
    "node_modules/shallowequal": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",
      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sonner": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/sonner/-/sonner-2.0.7.tgz",
      "integrity": "sha512-W6ZN4p58k8aDKA4XPcx2hpIQXBRAgyiWVkYhT7CvK6D3iAu7xjvVyhQHg2/iaKJZ1XVJ4r7XuwGL+WGEK37i9w==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^18.0.0 || ^19.0.0 || ^19.0.0-rc",
        "react-dom": "^18.0.0 || ^19.0.0 || ^19.0.0-rc"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/styled-components": {
      "version": "6.1.19",
      "resolved": "https://registry.npmjs.org/styled-components/-/styled-components-6.1.19.tgz",
      "integrity": "sha512-1v/e3Dl1BknC37cXMhwGomhO8AkYmN41CqyX9xhUDxry1ns3BFQy2lLDRQXJRdVVWB9OHemv/53xaStimvWyuA==",
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "@emotion/is-prop-valid": "1.2.2",
        "@emotion/unitless": "0.8.1",
        "@types/stylis": "4.2.5",
        "css-to-react-native": "3.2.0",
        "csstype": "3.1.3",
        "postcss": "8.4.49",
        "shallowequal": "1.1.0",
        "stylis": "4.3.2",
        "tslib": "2.6.2"
      },
      "engines": {
        "node": ">= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/styled-components"
      },
      "peerDependencies": {
        "react": ">= 16.8.0",
        "react-dom": ">= 16.8.0"
      }
    },
    "node_modules/styled-components/node_modules/postcss": {
      "version": "8.4.49",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.49.tgz",
      "integrity": "sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "peer": true,
      "dependencies": {
        "nanoid": "^3.3.7",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/styled-components/node_modules/tslib": {
      "version": "2.6.2",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.6.2.tgz",
      "integrity": "sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q==",
      "license": "0BSD",
      "peer": true
    },
    "node_modules/stylis": {
      "version": "4.3.2",
      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.3.2.tgz",
      "integrity": "sha512-bhtUjWd/z6ltJiQwg0dUfxEJ+W+jdqQd8TbWLWyeIJHlnsqmGLRFFd8e5mA0AZi/zx90smXRlN66YMTcaSFifg==",
      "license": "MIT",
      "peer": true
    },
    "node_modules/supports-color": {
      "version": "7.2.0",
      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "has-flag": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/tabbable": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/tabbable/-/tabbable-6.2.0.tgz",
      "integrity": "sha512-Cat63mxsVJlzYvN51JmVXIgNoUokrIaT2zLclCXjRd8boZ0004U4KCs/sToJ75C6sdlByWxpYnb5Boif1VSFew==",
      "license": "MIT"
    },
    "node_modules/tailwindcss": {
      "version": "4.1.12",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.12.tgz",
      "integrity": "sha512-DzFtxOi+7NsFf7DBtI3BJsynR+0Yp6etH+nRPTbpWnS2pZBaSksv/JGctNwSWzbFjp0vxSqknaUylseZqMDGrA==",
      "license": "MIT"
    },
    "node_modules/tapable": {
      "version": "2.2.3",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.3.tgz",
      "integrity": "sha512-ZL6DDuAlRlLGghwcfmSn9sK3Hr6ArtyudlSAiCqQ6IfE+b+HHbydbYDIG15IfS5do+7XQQBdBiubF/cV2dnDzg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/webpack"
      }
    },
    "node_modules/tar": {
      "version": "7.4.3",
      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
      "license": "ISC",
      "dependencies": {
        "@isaacs/fs-minipass": "^4.0.0",
        "chownr": "^3.0.0",
        "minipass": "^7.1.2",
        "minizlib": "^3.0.1",
        "mkdirp": "^3.0.1",
        "yallist": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tar/node_modules/yallist": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/tiny-case": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tiny-case/-/tiny-case-1.0.3.tgz",
      "integrity": "sha512-Eet/eeMhkO6TX8mnUteS9zgPbUMQa4I6Kkp5ORiBD5476/m+PIRiumP5tmh5ioJpH7k51Kehawy2UDfsnxxY8Q==",
      "license": "MIT"
    },
    "node_modules/tiny-invariant": {
      "version": "1.3.3",
      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.3.3.tgz",
      "integrity": "sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==",
      "license": "MIT"
    },
    "node_modules/tiny-warning": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/tiny-warning/-/tiny-warning-1.0.3.tgz",
      "integrity": "sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA==",
      "license": "MIT"
    },
    "node_modules/tinyglobby": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/toposort": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/toposort/-/toposort-2.0.2.tgz",
      "integrity": "sha512-0a5EOkAUp8D4moMi2W8ZF8jcga7BgZd91O/yabJCFY8az+XSzeGyTKs0Aoo897iV1Nj6guFq8orWDS96z91oGg==",
      "license": "MIT"
    },
    "node_modules/tslib": {
      "version": "2.8.1",
      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
      "license": "0BSD"
    },
    "node_modules/type-check": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "prelude-ls": "^1.2.1"
      },
      "engines": {
        "node": ">= 0.8.0"
      }
    },
    "node_modules/type-fest": {
      "version": "2.19.0",
      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-2.19.0.tgz",
      "integrity": "sha512-RAH822pAdBgcNMAfWnCBU3CFZcfZ/i1eZjwFU/dsLKumyuuP3niueg2UAukXYF0E2AAoc82ZSSf9J0WQBinzHA==",
      "license": "(MIT OR CC0-1.0)",
      "engines": {
        "node": ">=12.20"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dev": true,
      "license": "BSD-2-Clause",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/use-debounce": {
      "version": "10.0.6",
      "resolved": "https://registry.npmjs.org/use-debounce/-/use-debounce-10.0.6.tgz",
      "integrity": "sha512-C5OtPyhAZgVoteO9heXMTdW7v/IbFI+8bSVKYCJrSmiWWCLsbUxiBSp4t9v0hNBTGY97bT72ydDIDyGSFWfwXg==",
      "license": "MIT",
      "engines": {
        "node": ">= 16.0.0"
      },
      "peerDependencies": {
        "react": "*"
      }
    },
    "node_modules/use-sync-external-store": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz",
      "integrity": "sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==",
      "license": "MIT",
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
      }
    },
    "node_modules/victory-vendor": {
      "version": "37.3.6",
      "resolved": "https://registry.npmjs.org/victory-vendor/-/victory-vendor-37.3.6.tgz",
      "integrity": "sha512-SbPDPdDBYp+5MJHhBCAyI7wKM3d5ivekigc2Dk2s7pgbZ9wIgIBYGVw4zGHBml/qTFbexrofXW6Gu4noGxrOwQ==",
      "license": "MIT AND ISC",
      "dependencies": {
        "@types/d3-array": "^3.0.3",
        "@types/d3-ease": "^3.0.0",
        "@types/d3-interpolate": "^3.0.1",
        "@types/d3-scale": "^4.0.2",
        "@types/d3-shape": "^3.1.0",
        "@types/d3-time": "^3.0.0",
        "@types/d3-timer": "^3.0.0",
        "d3-array": "^3.1.6",
        "d3-ease": "^3.0.1",
        "d3-interpolate": "^3.0.1",
        "d3-scale": "^4.0.2",
        "d3-shape": "^3.1.0",
        "d3-time": "^3.0.0",
        "d3-timer": "^3.0.1"
      }
    },
    "node_modules/vite": {
      "version": "7.1.4",
      "resolved": "https://registry.npmjs.org/vite/-/vite-7.1.4.tgz",
      "integrity": "sha512-X5QFK4SGynAeeIt+A7ZWnApdUyHYm+pzv/8/A57LqSGcI88U6R6ipOs3uCesdc6yl7nl+zNO0t8LmqAdXcQihw==",
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.25.0",
        "fdir": "^6.5.0",
        "picomatch": "^4.0.3",
        "postcss": "^8.5.6",
        "rollup": "^4.43.0",
        "tinyglobby": "^0.2.14"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^20.19.0 || >=22.12.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^20.19.0 || >=22.12.0",
        "jiti": ">=1.21.0",
        "less": "^4.0.0",
        "lightningcss": "^1.21.0",
        "sass": "^1.70.0",
        "sass-embedded": "^1.70.0",
        "stylus": ">=0.54.8",
        "sugarss": "^5.0.0",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/word-wrap": {
      "version": "1.2.5",
      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/yallist": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/yup": {
      "version": "1.7.1",
      "resolved": "https://registry.npmjs.org/yup/-/yup-1.7.1.tgz",
      "integrity": "sha512-GKHFX2nXul2/4Dtfxhozv701jLQHdf6J34YDh2cEkpqoo8le5Mg6/LrdseVLrFarmFygZTlfIhHx/QKfb/QWXw==",
      "license": "MIT",
      "dependencies": {
        "property-expr": "^2.0.5",
        "tiny-case": "^1.0.3",
        "toposort": "^2.0.2",
        "type-fest": "^2.19.0"
      }
    }
  }
}


--- END OF FILE: package-lock.json ---

================================================================================


--- START OF FILE: package.json ---

{
  "name": "finance-manager-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.9",
    "@nivo/pie": "^0.99.0",
    "@nivo/radial-bar": "^0.99.0",
    "@tailwindcss/vite": "^4.1.12",
    "@tanstack/react-query": "^5.90.2",
    "axios": "^1.12.2",
    "formik": "^2.4.6",
    "framer-motion": "^12.23.12",
    "lucide-react": "^0.542.0",
    "react": "^19.1.1",
    "react-chartjs-2": "^5.3.0",
    "react-content-loader": "^7.1.1",
    "react-data-table-component": "^7.7.0",
    "react-datepicker": "^8.7.0",
    "react-dom": "^19.1.1",
    "react-icons": "^5.5.0",
    "react-loading-skeleton": "^3.5.0",
    "react-router-dom": "^7.8.2",
    "recharts": "^3.2.1",
    "sonner": "^2.0.7",
    "tailwindcss": "^4.1.12",
    "yup": "^1.7.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.1.2"
  }
}


--- END OF FILE: package.json ---

================================================================================


--- START OF FILE: vercel.json ---

{
    "rewrites": [
        {
            "source": "/(.*)",
            "destination": "/index.html"
        }
    ]
}

--- END OF FILE: vercel.json ---

================================================================================


--- START OF FILE: vite.config.js ---

import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react(), tailwindcss()],
  server: {
    port: 5174,
  }
  // server: {
  //   proxy: {
  //     '/api': 'http://localhost:5000'
  //   }
  // }
})


--- END OF FILE: vite.config.js ---

================================================================================

└── context/
        ├── AppContext.jsx

--- START OF FILE: context\AppContext.jsx ---

import { createContext, useContext, useEffect, useState } from "react";

export const AppContext = createContext();

export const AppContextProvider = ({ children }) => {

    const [user, setUser] = useState(() => {
        const saved = localStorage.getItem("user");
        return saved ? JSON.parse(saved) : null;
    });

    useEffect(() => {
        if (user) localStorage.setItem("user", JSON.stringify(user));
        else localStorage.removeItem("user");
    }, [user]);

    const value = { user, setUser }

    return (
        <AppContext.Provider value={value}>
            {children}
        </AppContext.Provider>
    )
}

export const useAppContext = () => {
    return useContext(AppContext);
}

--- END OF FILE: context\AppContext.jsx ---

================================================================================

└── public/
└── routes/
└── src/
        ├── App.jsx
        ├── index.css
        ├── main.jsx

--- START OF FILE: src\App.jsx ---

import { BrowserRouter as Router, Routes, Route, Navigate } from "react-router-dom";
import UserDashboard from "./screens/UserDashboard";
import Hero from "./components/Hero";
import Register from "./components/Register";
import Login from "./components/Login";
import { Toaster } from "sonner";
import { useAppContext } from "../context/AppContext";
import Profile from "./components/Profile";
import AddUsers from "./components/AddUsers";
import Users from "./components/Users";
import CurrencyExchange from "./components/CurrencyExchange";
import Transactions from "./components/Transactions";
import Reminder from "./components/Reminder";
import Payments from "./components/Payments";
import Contact from "./components/Contact";
import Recipients from "./components/Recipients";
import RecipientsData from "./components/RecipientsData";

function App() {
  const { user } = useAppContext();

  return (
    <Router>
      <Toaster position="bottom-right" richColors />

      <Routes>
        <Route
          path="/"
          element={user ? <UserDashboard /> : <Navigate to="/login" />}
        >
          <Route index element={<Hero />} />
          <Route path="payments" element={<Payments />} />
          <Route path="transactions" element={<Transactions />} />
          <Route path="exchange" element={<CurrencyExchange />} />
          <Route path="reminder" element={<Reminder />} />
          <Route path="profile" element={<Profile />} />
          <Route path="contact" element={<Contact />} />
          {/* <Route path="users" element={<AddUsers />} /> */}
          <Route path="all-users" element={<Users />} />
          <Route path="recipients" element={<Recipients />} />
          <Route path="recipient/:id" element={<RecipientsData />} />
        </Route>

        {/* Auth Routes */}
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />

        {/* Fallback */}
        <Route path="*" element={<Navigate to="/login" />} />
      </Routes>
    </Router>
  );
}

export default App;


--- END OF FILE: src\App.jsx ---

================================================================================


--- START OF FILE: src\index.css ---

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@import "tailwindcss";

body {
  font-family: "Poppins", sans-serif;
}

html {
  scroll-behavior: smooth;
}

.p-thin {
  font-family: "Poppins", sans-serif;
  font-weight: 100;
  font-style: normal;
}

.p-extralight {
  font-family: "Poppins", sans-serif;
  font-weight: 200;
  font-style: normal;
}

.p-light {
  font-family: "Poppins", sans-serif;
  font-weight: 300;
  font-style: normal;
}

.p-regular {
  font-family: "Poppins", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.p-medium {
  font-family: "Poppins", sans-serif;
  font-weight: 500;
  font-style: normal;
}

.p-semibold {
  font-family: "Poppins", sans-serif;
  font-weight: 600;
  font-style: normal;
}

.p-bold {
  font-family: "Poppins", sans-serif;
  font-weight: 700;
  font-style: normal;
}

.p-extrabold {
  font-family: "Poppins", sans-serif;
  font-weight: 800;
  font-style: normal;
}

.p-black {
  font-family: "Poppins", sans-serif;
  font-weight: 900;
  font-style: normal;
}

.recharts-wrapper svg {
  outline: none;
}

@keyframes scaleUp {
  0% {
    transform: scale(0.9);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.animate-scaleUp {
  animation: scaleUp 0.25s ease-out;
}

--- END OF FILE: src\index.css ---

================================================================================


--- START OF FILE: src\main.jsx ---

import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
import { AppContextProvider } from '../context/AppContext.jsx'
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'

const queryClient = new QueryClient();

createRoot(document.getElementById('root')).render(
  <AppContextProvider>
    <QueryClientProvider client={queryClient}>
      <App />
    </QueryClientProvider>
  </AppContextProvider>,
)


--- END OF FILE: src\main.jsx ---

================================================================================

    └── assets/
    └── components/
            ├── AddUsers.jsx
            ├── Contact.jsx
            ├── CurrencyExchange.jsx
            ├── Hero.jsx
            ├── HeroNav.jsx
            ├── Login.jsx
            ├── Payments.jsx
            ├── PaymentsRemaining.jsx
            ├── Profile.jsx
            ├── Recipients.jsx
            ├── RecipientsData.jsx
            ├── Register.jsx
            ├── Reminder.jsx
            ├── Sidebar.jsx
            ├── Transactions.jsx
            ├── Users.jsx
            ├── currencies.js

--- START OF FILE: src\components\AddUsers.jsx ---

import React, { useState } from "react";
import { Plus, Send } from "lucide-react";
import { toast } from "sonner";
import { useMutation } from "@tanstack/react-query";
import { sendInvite } from "../hooks/invite";

const AddUsers = () => {
    const [emails, setEmails] = useState([""]); // dynamic email fields

    const { mutate, isPending } = useMutation({
        mutationFn: sendInvite,
        onSuccess: (data) => {
            toast.success("Invites sent successfully!");
            setEmails([""]);
        },
        onError: (err) => {
            const errorMessage = err.response?.data?.message || "Something went wrong while sending invites.";
            toast.error(errorMessage);
        }
    })

    // handle input changes
    const handleChange = (index, value) => {
        const newEmails = [...emails];
        newEmails[index] = value;
        setEmails(newEmails);
    };

    // add new email field
    const addEmailField = () => setEmails([...emails, ""]);

    // send invites
    const handleSendInvite = async () => {
        if (emails.some((email) => !email)) {
            toast.error("All email fields must be filled!");
            return;
        }
        mutate({ emails })
    };

    return (
        <div className="flex justify-center items-center pt-6">
            <div className="bg-[#F6F9FC] shadow-sm rounded-2xl p-8 w-full max-w-lg">
                <h2 className="text-xl sm:text-2xl p-semibold text-[#6667DD] mb-6 text-center ">
                    Invite Friends to Your Finance
                </h2>

                <div className="space-y-4">
                    {emails.map((email, index) => (
                        <input
                            key={index}
                            type="email"
                            placeholder={`Friend's Email ${index + 1}`}
                            value={email}
                            required
                            onChange={(e) => handleChange(index, e.target.value)}
                            className="p-regular w-full px-4 py-2 rounded-lg outline-none border-2 border-[#6667DD] text-gray-700 text-sm sm:text-base"
                        />
                    ))}
                </div>

                <div className="mt-6 flex flex-col sm:flex-row items-center justify-between gap-3">
                    <button
                        onClick={addEmailField}
                        className="flex items-center justify-center gap-2 flex-1 py-2 rounded-lg bg-[#6667DD] text-white p-medium hover:bg-[#5656c4] transition-all duration-300 cursor-pointer hover:scale-95 w-full text-sm sm:text-base"
                    >
                        <Plus size={18} /> Add Another
                    </button>

                    <button
                        onClick={handleSendInvite}
                        disabled={isPending}
                        className={`flex items-center justify-center gap-2 flex-1 py-2 rounded-lg text-white p-medium transition-all duration-300 cursor-pointer hover:scale-95 w-full text-sm sm:text-base ${isPending
                            ? "bg-green-300 hover:cursor-not-allowed"
                            : "bg-green-500 hover:bg-green-600"
                            }`}
                    >
                        <Send size={18} /> {isPending ? "Sending..." : "Send Invites"}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default AddUsers;


--- END OF FILE: src\components\AddUsers.jsx ---

================================================================================


--- START OF FILE: src\components\Contact.jsx ---

import { Mail, MessageSquare, User } from "lucide-react";
import { toast } from "sonner";
import { useMutation } from "@tanstack/react-query";
import { sendContactMessage } from "../hooks/contact";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";

const Contact = () => {
    const { mutate, isPending } = useMutation({
        mutationFn: sendContactMessage,
        onSuccess: (data) => {
            toast.success(data.message || "Your message has been sent!");
        },
        onError: (err) => {
            const errorMessage =
                err.response?.data?.message ||
                "Failed to send message. Please try again.";
            toast.error(errorMessage);
        },
    });

    const validationSchema = Yup.object({
        name: Yup.string().required("Name is required!"),
        email: Yup.string().email("Invalid email!").required("Email is required!"),
        type: Yup.string().required("Please select message type!"),
        message: Yup.string().required("Message cannot be empty!"),
    });

    return (
        <div className="flex justify-center items-start sm:items-center sm:px-4 md:px-6 lg:px-8">
            <div className="bg-[#F6F9FC] shadow-sm p-4 sm:py-6 sm:px-8 w-full max-w-md sm:max-w-lg md:max-w-xl lg:max-w-4xl">
                <h2 className="text-xl sm:text-2xl lg:text-3xl p-semibold text-[#6667DD] mb-2 text-center">
                    Contact Us
                </h2>
                <p className="text-gray-600 text-center mb-6 text-sm sm:text-base p-regular">
                    Reach out for support or share your suggestions/recommendations!
                </p>

                <Formik
                    initialValues={{
                        name: "",
                        email: "",
                        type: "",
                        message: "",
                    }}
                    validationSchema={validationSchema}
                    onSubmit={(values, { resetForm }) => {
                        mutate(values, {
                            onSuccess: () => resetForm(),
                        });
                    }}
                >
                    {({ errors, touched }) => (
                        <Form className="space-y-3 sm:space-y-4">
                            {/* Name & Email Row */}
                            <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
                                <div className="flex flex-col">
                                    <div
                                        className={`flex items-center border-2 rounded-lg px-3 sm:px-4 py-2 sm:py-2.5 ${errors.name && touched.name
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                            } ${isPending
                                                ? "bg-gray-100 text-gray-500 cursor-default"
                                                : "bg-transparent"
                                            }`}
                                    >
                                        <User className="text-gray-500 mr-2" size={18} />
                                        <Field
                                            type="text"
                                            name="name"
                                            placeholder="Your Name"
                                            disabled={isPending}
                                            className="w-full outline-none bg-transparent p-regular text-sm sm:text-base"
                                        />
                                    </div>
                                    <ErrorMessage
                                        name="name"
                                        component="div"
                                        className="text-red-500 text-sm mt-1 p-regular"
                                    />
                                </div>

                                <div className="flex flex-col">
                                    <div
                                        className={`flex items-center border-2 rounded-lg px-3 sm:px-4 py-2 sm:py-2.5 ${errors.email && touched.email
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                            } ${isPending
                                                ? "bg-gray-100 text-gray-500 cursor-default"
                                                : "bg-transparent"
                                            }`}
                                    >
                                        <Mail className="text-gray-500 mr-2" size={18} />
                                        <Field
                                            type="email"
                                            name="email"
                                            placeholder="Your Email"
                                            disabled={isPending}
                                            className="w-full outline-none bg-transparent p-regular text-sm sm:text-base"
                                        />
                                    </div>
                                    <ErrorMessage
                                        name="email"
                                        component="div"
                                        className="text-red-500 text-sm mt-1 p-regular"
                                    />
                                </div>
                            </div>

                            {/* Dropdown */}
                            <div className="flex flex-col">
                                <label className="block text-gray-700 text-sm mb-1 p-regular">
                                    Type of Message
                                </label>
                                <Field
                                    as="select"
                                    name="type"
                                    disabled={isPending}
                                    className={`w-full border-2 rounded-lg px-3 sm:px-4 py-2 sm:py-2.5 outline-none cursor-pointer text-sm sm:text-base ${errors.type && touched.type
                                        ? "border-red-500"
                                        : "border-[#6667DD]"
                                        } ${isPending
                                            ? "bg-gray-100 text-gray-500 cursor-default"
                                            : "bg-transparent"
                                        }`}
                                >
                                    <option value="">Select Query</option>
                                    <option value="support">Support</option>
                                    <option value="recommendation">Recommendation</option>
                                    <option value="bug">Report a Bug</option>
                                    <option value="feature">Feature Request</option>
                                    <option value="general">General Inquiry</option>
                                </Field>
                                <ErrorMessage
                                    name="type"
                                    component="div"
                                    className="text-red-500 text-sm mt-1 p-regular"
                                />
                            </div>

                            {/* Message Box */}
                            <div className="flex flex-col">
                                <div
                                    className={`flex items-start border-2 rounded-lg px-3 sm:px-4 py-2 sm:py-2.5 ${errors.message && touched.message
                                        ? "border-red-500"
                                        : "border-[#6667DD]"
                                        } ${isPending
                                            ? "bg-gray-100 text-gray-500 cursor-default"
                                            : "bg-transparent"
                                        }`}
                                >
                                    <MessageSquare className="text-gray-500 mt-1 mr-2" size={18} />
                                    <Field
                                        as="textarea"
                                        name="message"
                                        placeholder="Your message..."
                                        rows="4"
                                        disabled={isPending}
                                        className="w-full outline-none bg-transparent resize-none p-regular text-sm sm:text-base"
                                    />
                                </div>
                                <ErrorMessage
                                    name="message"
                                    component="div"
                                    className="text-red-500 text-sm mt-1 p-regular"
                                />
                            </div>

                            {/* Submit Button */}
                            <button
                                type="submit"
                                disabled={isPending}
                                className={`w-full text-white py-3 sm:py-3.5 rounded-lg shadow-md transition-all duration-300 p-regular text-sm sm:text-base cursor-pointer ${isPending
                                    ? "bg-[#6667DD] opacity-70 hover:cursor-not-allowed"
                                    : "bg-[#6667DD] hover:bg-[#5253b8]"
                                    }`}
                            >
                                {isPending ? "Sending..." : "Send Message"}
                            </button>
                        </Form>
                    )}
                </Formik>
            </div>
        </div>
    );
};

export default Contact;


--- END OF FILE: src\components\Contact.jsx ---

================================================================================


--- START OF FILE: src\components\CurrencyExchange.jsx ---

import React, { useEffect, useState } from "react";
import { ArrowRightLeft } from "lucide-react";
import currencies from "./currencies";

const CurrencyExchange = () => {
    const [fromCurrency, setFromCurrency] = useState("USD");
    const [toCurrency, setToCurrency] = useState("PKR");
    const [amount, setAmount] = useState(1);
    const [rate, setRate] = useState(null);

    useEffect(() => {
        const fetchExchangeRate = async () => {
            try {
                const response = await fetch(
                    `${import.meta.env.VITE_CURRENCY_CONVERTER_BASE_URL}/${fromCurrency}`
                );
                const data = await response.json();
                if (data && data.rates) {
                    setRate(data.rates[toCurrency]);
                }
            } catch (error) {
                console.log("Error fetching exchange rate:", error);
            }
        };
        fetchExchangeRate();
    }, [fromCurrency, toCurrency]);

    return (
        <div className="flex justify-center">
            <div className="bg-[#F6F9FC] shadow-sm w-78 sm:w-auto sm:max-w-4xl mx-auto py-5 px-4 sm:p-8 md:p-10">
                <h2 className="text-xl sm:text-2xl md:text-3xl p-bold text-[#6667DF] text-center mb-6">
                    💱 Currency Exchange
                </h2>

                {/* Amount Input */}
                <div className="mb-6">
                    <label className="block text-gray-600 p-medium mb-2 text-sm sm:text-base">
                        Amount
                    </label>
                    <input
                        type="number"
                        value={amount}
                        min={0}
                        onChange={(e) => setAmount(e.target.value)}
                        className="w-full p-2.5 sm:p-3 md:p-3.5 rounded-xl outline-none border-2 border-[#6667DF] text-gray-700 p8regular text-sm sm:text-base"
                    />
                </div>

                {/* From & To Selectors */}
                <div className="flex flex-col sm:flex-row items-stretch justify-between gap-5 sm:gap-6 mb-6">
                    {/* From Currency */}
                    <div className="flex-1">
                        <label className="block text-gray-600 p-medium mb-2 text-sm sm:text-base">
                            From
                        </label>
                        <div className="flex items-center border-2 border-[#6667DF] rounded-xl p-2.5 sm:p-3">
                            <img
                                src={currencies.find((c) => c.code === fromCurrency)?.flag}
                                alt="flag"
                                className="w-5 h-5 sm:w-6 sm:h-6 mr-2 rounded-full object-cover"
                            />
                            <select
                                value={fromCurrency}
                                onChange={(e) => setFromCurrency(e.target.value)}
                                className="flex-1 outline-none p-regular cursor-pointer text-sm sm:text-base bg-transparent appearance-none"
                                style={{ backgroundPosition: "right 0.75rem center", backgroundRepeat: "no-repeat" }}
                            >
                                {currencies.map((c) => (
                                    <option key={c.code} value={c.code}>
                                        {c.name} ({c.code})
                                    </option>
                                ))}
                            </select>
                        </div>
                    </div>

                    {/* Arrow Icon */}
                    <div className="flex justify-center items-center transform sm:rotate-0 rotate-90">
                        <ArrowRightLeft
                            className="text-gray-600"
                            size={26}
                        />
                    </div>

                    {/* To Currency */}
                    <div className="flex-1">
                        <label className="block text-gray-600 p-medium mb-2 text-sm sm:text-base">
                            To
                        </label>
                        <div className="flex items-center border-2 border-[#6667DF] rounded-xl p-2.5 sm:p-3">
                            <img
                                src={currencies.find((c) => c.code === toCurrency)?.flag}
                                alt="flag"
                                className="w-5 h-5 sm:w-6 sm:h-6 mr-2 rounded-full object-cover"
                            />
                            <select
                                value={toCurrency}
                                onChange={(e) => setToCurrency(e.target.value)}
                                className="flex-1 outline-none p-regular cursor-pointer text-sm sm:text-base bg-transparent appearance-none"
                                style={{ backgroundPosition: "right 0.75rem center", backgroundRepeat: "no-repeat" }}
                            >
                                {currencies.map((c) => (
                                    <option key={c.code} value={c.code}>
                                        {c.name} ({c.code})
                                    </option>
                                ))}
                            </select>
                        </div>
                    </div>
                </div>

                {/* Result */}
                <div className="bg-gray-100 rounded-xl p-3 sm:p-4 text-center">
                    <p className="text-base sm:text-lg text-gray-700 p-medium leading-relaxed break-words">
                        {amount} {fromCurrency} ={" "}
                        <span className="p-bold text-[#6667DF]">
                            {rate
                                ? (amount * rate).toLocaleString(undefined, {
                                    minimumFractionDigits: 2,
                                    maximumFractionDigits: 2,
                                })
                                : "---"}
                        </span>{" "}
                        {toCurrency}
                    </p>
                </div>
            </div>
        </div>
    );
};

export default CurrencyExchange;


--- END OF FILE: src\components\CurrencyExchange.jsx ---

================================================================================


--- START OF FILE: src\components\Hero.jsx ---

import {
    Plus,
    TrendingUp,
    CreditCard,
    DollarSign,
    PieChart,
    Activity,
    TrendingUp as TrendingUpIcon,
} from 'lucide-react';
import { Link, useNavigate } from 'react-router-dom';
import { useAppContext } from '../../context/AppContext';

// Recharts
import {
    AreaChart,
    Area,
    LineChart,
    Line,
    XAxis,
    YAxis,
    Tooltip,
    ResponsiveContainer,
} from 'recharts';

// Chart.js
import { Bar, Doughnut } from 'react-chartjs-2';
import {
    Chart as ChartJS,
    CategoryScale,
    LinearScale,
    BarElement,
    ArcElement,
    Title,
    Tooltip as ChartTooltip,
    Legend,
} from 'chart.js';

// Nivo Radial Bar
import { ResponsiveRadialBar } from '@nivo/radial-bar';

ChartJS.register(CategoryScale, LinearScale, BarElement, ArcElement, Title, ChartTooltip, Legend);

// ========================= DATA =========================
const lineData = [
    { month: 'Jan', balance: 400 },
    { month: 'Feb', balance: 800 },
    { month: 'Mar', balance: 600 },
    { month: 'Apr', balance: 1000 },
    { month: 'May', balance: 1200 },
];

const incomeExpenseData = [
    { month: 'Jan', income: 1200, expense: 800 },
    { month: 'Feb', income: 1500, expense: 1000 },
    { month: 'Mar', income: 1000, expense: 700 },
    { month: 'Apr', income: 1800, expense: 1200 },
    { month: 'May', income: 2000, expense: 1500 },
];

const barData = {
    labels: ['Savings', 'Expenses', 'Investments', 'Debt'],
    datasets: [
        {
            label: 'Amount ($)',
            data: [500, 300, 200, 100],
            backgroundColor: ['#6667DD', '#FF6384', '#36A2EB', '#FFCE56'],
        },
    ],
};

const stackedBarData = {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
    datasets: [
        {
            label: 'Savings',
            data: [500, 700, 600, 800, 900],
            backgroundColor: '#6667DD',
        },
        {
            label: 'Debt',
            data: [200, 300, 250, 400, 350],
            backgroundColor: '#FF6384',
        },
    ],
};

const doughnutData = {
    labels: ['Food', 'Travel', 'Shopping', 'Bills'],
    datasets: [
        {
            data: [150, 200, 100, 50],
            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#6667DD'],
            borderWidth: 1,
        },
    ],
};

const radialData = [
    {
        id: 'Budget',
        data: [
            { x: 'Used', y: 30 },
            { x: 'Remaining', y: 30 },
            { x: 'Saved', y: 40 }
        ],
    },
];

const quickStats = [
    { icon: <DollarSign size={20} />, label: 'Income', value: '$7,000' },
    { icon: <CreditCard size={20} />, label: 'Expenses', value: '$2,300' },
    { icon: <PieChart size={20} />, label: 'Investments', value: '$1,200' },
    { icon: <Activity size={20} />, label: 'Debt', value: '$800' },
    { icon: <TrendingUpIcon size={20} />, label: 'Profit', value: '$3,000' },
];

// ========================= CHART OPTIONS =========================
const barOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        legend: {
            labels: {
                font: {
                    family: "Poppins",
                    size: 13,
                },
                color: "#333",
            },
        },
    },
    scales: {
        x: {
            ticks: {
                font: {
                    family: "Poppins",
                    size: 12,
                },
                color: "#6667DD",
            },
        },
        y: {
            ticks: {
                font: {
                    family: "Poppins",
                    size: 12,
                },
                color: "#6667DD",
            },
        },
    },
};

const doughnutOptions = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        legend: {
            position: "bottom",
            labels: {
                font: {
                    family: "Poppins",
                    size: 13,
                },
                color: "#444",
            },
        },
    },
};

const Hero = ({ role }) => {
    const navigate = useNavigate();
    const { user } = useAppContext();

    const chartHeight = 350;

    return (
        <div className="px-5 py-6 bg-[#F6F9FC] p-regular">
            {/* Header */}
            <div className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4 mb-6">
                <div>
                    <h1 className="text-[#6667DD] p-bold text-2xl sm:text-4xl tracking-tight">FinSync Dashboard</h1>
                    <p className="text-gray-600 p-regular mt-1 text-sm sm:text-base">
                        Overview of your balances, expenses, and investments
                    </p>
                </div>
                <div className="flex gap-3">
                    <Link to={"/transactions"} className="flex items-center gap-2 bg-[#6667DD] text-white px-4 py-3 rounded-full hover:bg-[#5556cc] cursor-pointer hover:scale-95 transition-all duration-300 p-regular text-sm sm:text-base">
                        <TrendingUp size={20} />
                        Create Transaction 
                    </Link>
                </div>
            </div>

            {/* Quick Stats */}
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-5 gap-4 mb-8">
                {quickStats.map((stat, index) => (
                    <div key={index} className="bg-transparent shadow-sm p-4 flex items-center gap-3">
                        <div className="p-3 bg-[#6667DD]/10 text-[#6667DD] rounded-full">{stat.icon}</div>
                        <div>
                            <p className="text-gray-500 p-regular">{stat.label}</p>
                            <p className="text-gray-800 p-semibold text-base">{stat.value}</p>
                        </div>
                    </div>
                ))}
            </div>

            {/* Charts */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {/* Balance Trend */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm text-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2 text-base">Balance Trend</h3>
                    <ResponsiveContainer width="100%" height="90%">
                        <AreaChart data={lineData}>
                            <XAxis dataKey="month" tick={{ fontFamily: "Poppins", fontSize: 12, fill: "#6667DD" }} />
                            <YAxis tick={{ fontFamily: "Poppins", fontSize: 12, fill: "#6667DD" }} />
                            <Tooltip />
                            <Area type="monotone" dataKey="balance" stroke="#6667DD" fill="#6667DD" fillOpacity={0.2} />
                        </AreaChart>
                    </ResponsiveContainer>
                </div>

                {/* Monthly Overview */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2">Monthly Overview</h3>
                    <div className="h-[90%]">
                        <Bar data={barData} options={barOptions} />
                    </div>
                </div>

                {/* Spending Categories */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2">Spending Categories</h3>
                    <div className="h-[90%]">
                        <Doughnut data={doughnutData} options={doughnutOptions} />
                    </div>
                </div>

                {/* Income vs Expenses (Line) */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm text-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2 text-base">Income vs Expenses</h3>
                    <ResponsiveContainer width="100%" height="90%">
                        <LineChart data={incomeExpenseData}>
                            <XAxis dataKey="month" tick={{ fontFamily: "Poppins", fontSize: 12, fill: "#6667DD" }} />
                            <YAxis tick={{ fontFamily: "Poppins", fontSize: 12, fill: "#6667DD" }} />
                            <Tooltip />
                            <Line type="monotone" dataKey="income" stroke="#36A2EB" />
                            <Line type="monotone" dataKey="expense" stroke="#FF6384" />
                        </LineChart>
                    </ResponsiveContainer>
                </div>

                {/* Savings vs Debt (Stacked Bar) */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2">Savings vs Debt</h3>
                    <div className="h-[90%]">
                        <Bar data={stackedBarData} options={barOptions} />
                    </div>
                </div>

                {/* Budget Utilization (Radial) */}
                <div className="bg-transparent p-4 rounded-2xl shadow-sm" style={{ height: chartHeight }}>
                    <h3 className="p-semibold text-gray-700 mb-2">Budget Utilization</h3>
                    <ResponsiveRadialBar
                        data={radialData}
                        valueFormat=">-.2f"
                        colors={['#6667DD', '#FFCE56', '#FF4069']}
                        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}
                        innerRadius={0.3}
                        padding={0.4}
                        cornerRadius={2}
                        theme={{
                            text: {
                                fontFamily: "Poppins",
                                fontSize: 12,
                                fill: "#6667DD",
                            },
                            axis: {
                                ticks: {
                                    text: {
                                        fontFamily: "Poppins",
                                        fontSize: 12,
                                        fill: "#6667DD",
                                    },
                                },
                            },
                            legends: {
                                text: {
                                    fontFamily: "Poppins",
                                    fontSize: 12,
                                    fill: "#444",
                                },
                            },
                            tooltip: {
                                container: {
                                    fontFamily: "Poppins",
                                    fontSize: 12,
                                },
                            },
                        }}
                    />
                </div>
            </div>
        </div>
    );
};

export default Hero;


--- END OF FILE: src\components\Hero.jsx ---

================================================================================


--- START OF FILE: src\components\HeroNav.jsx ---

import React from 'react';
import { BellDot, LogOut, UserRound } from 'lucide-react';
import { Link, useNavigate } from 'react-router-dom';
import { useAppContext } from '../../context/AppContext';

const HeroNav = ({ role }) => {
    const navigate = useNavigate();
    const { user, setUser } = useAppContext();

    const handleLogout = () => {
        setUser(null);
        localStorage.removeItem("user");
        navigate("/login");
    }

    return (
        <section className="w-full flex flex-col sm:flex-row items-end sm:items-center sm:justify-between px-2 sm:px-6 md:px-10 py-4 mb-2">
            <div className="flex-1 flex items-center gap-2 sm:gap-4 mb-4 sm:mb-0 bg-gray-100 px-3 sm:px-4 py-2.5 rounded-xl min-w-0 mr-0 sm:mr-4">
                <h1 className='text-gray-800 p-bold truncate'>
                    <span className='text-[#6667DD]'>Hey,</span> {user?.name || "John Doe"}
                </h1>
            </div>

            <div className="flex items-center gap-2 sm:gap-4 flex-wrap">
                <button className="bg-purple-100 p-2.5 sm:p-3 rounded-xl hover:bg-purple-200 transition duration-300 cursor-pointer flex-shrink-0">
                    <BellDot size={20} className="text-[#6667DD]" />
                </button>

                {user && (
                    <button onClick={handleLogout} className="bg-gray-100 p-2.5 sm:p-3 rounded-xl hover:bg-gray-200 transition duration-300 cursor-pointer flex-shrink-0">
                        <LogOut size={20} className="text-gray-600" />
                    </button>
                )}

                {user ? (
                    <div className="relative group flex-shrink-0">
                        <img
                            loading="lazy"
                            className="w-10 h-10 sm:w-12 sm:h-12 object-cover rounded-full border-2 border-gray-200 cursor-pointer"
                            src={user.profileImage || "https://images.unsplash.com/photo-1615109398623-88346a601842?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8bWFufGVufDB8fDB8fHww"}
                            alt={"User"}
                        />

                        <Link to={role === "admin" ? "/admin-dashboard/profile" : "/profile"}
                            className="absolute left-1/2 -translate-x-1/2 mt-0 hidden group-hover:flex
                        px-3 py-1.5 bg-white border border-gray-200 shadow-md rounded-lg
                        text-sm text-[#5556cc] p-medium whitespace-nowrap cursor-pointer z-50"
                        >
                            My Profile
                        </Link>
                    </div>
                ) : ""}

                {!user && role !== "admin" && (
                    <div
                        onClick={() => navigate("/register")}
                        className="flex items-center gap-2 bg-[#5556cc] text-white px-3 sm:px-4 py-2.5 sm:py-3 rounded-full cursor-pointer hover:bg-[#4445bb] transition duration-300 p-regular flex-shrink-0"
                    >
                        <UserRound size={16} />
                        <p>Register</p>
                    </div>
                )}
            </div>
        </section>
    );
};

export default HeroNav;


--- END OF FILE: src\components\HeroNav.jsx ---

================================================================================


--- START OF FILE: src\components\Login.jsx ---

import { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { toast } from 'sonner';
import { useAppContext } from '../../context/AppContext';
import { EyeOff, Eye } from 'lucide-react';
import { Formik, Form, Field } from 'formik';

const Login = () => {
    const { user, setUser } = useAppContext();
    const navigate = useNavigate();
    const API_URL = import.meta.env.VITE_API_URL;

    const [loading, setLoading] = useState(false);
    const [showPassword, setShowPassword] = useState(false);
    const [loggedIn, setLoggedIn] = useState(false);

    const handleSubmit = async (values) => {
        setLoading(true);
        try {
            const res = await fetch(`${API_URL}/api/login`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(values),
                credentials: "include",
            });

            const data = await res.json();

            if (!res.ok) {
                toast.error("Invalid Credentials");
            } else {
                toast.success("Login Successful");
                navigate("/");
                setUser(data.user);
                localStorage.setItem("user", JSON.stringify(data.user));
                localStorage.setItem("token", data.token);
                setLoggedIn(true);
            }
        } catch (error) {
            toast.error(error.message || "Invalid Credentials!");
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="relative flex items-center justify-center min-h-screen overflow-hidden px-4 sm:px-6 lg:px-8">
            {/* Floating Gradient Circles */}
            <div className="absolute top-10 left-10 w-16 sm:w-20 h-16 sm:h-20 rounded-full bg-gradient-to-r from-[#6667DD] to-[#FFCE56] opacity-30 animate-bounce-slow"></div>
            <div className="absolute top-1/4 right-10 sm:right-20 w-20 sm:w-28 h-20 sm:h-28 rounded-full bg-gradient-to-r from-[#FFCE56] to-[#36A2EB] opacity-25 animate-bounce-medium"></div>
            <div className="absolute bottom-32 left-1/4 sm:left-1/3 w-16 sm:w-24 h-16 sm:h-24 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#6667DD] opacity-20 animate-bounce-fast"></div>
            <div className="absolute bottom-10 right-10 sm:right-1/4 w-24 sm:w-32 h-24 sm:h-32 rounded-full bg-gradient-to-r from-[#FF6384] to-[#6667DD] opacity-15 animate-bounce-slower"></div>
            <div className="absolute top-1/3 left-16 sm:left-1/4 w-12 sm:w-16 h-12 sm:h-16 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#FFCE56] opacity-20 animate-bounce-fast"></div>
            <div className="absolute bottom-1/4 right-1/4 sm:right-1/3 w-16 sm:w-20 h-16 sm:h-20 rounded-full bg-gradient-to-r from-[#FF6384] to-[#36A2EB] opacity-15 animate-bounce-medium"></div>
            <div className="absolute top-3/4 left-10 sm:left-1/5 w-20 sm:w-24 h-20 sm:h-24 rounded-full bg-gradient-to-r from-[#6667DD] to-[#FF6384] opacity-25 animate-bounce-slower"></div>
            <div className="absolute bottom-10 left-4 sm:left-1/6 w-24 sm:w-28 h-24 sm:h-28 rounded-full bg-gradient-to-r from-[#FFCE56] to-[#36A2EB] opacity-20 animate-bounce-slow"></div>
            <div className="absolute top-1/6 right-4 sm:right-1/5 w-16 sm:w-20 h-16 sm:h-20 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#FFCE56] opacity-15 animate-bounce-medium"></div>
            <div className="absolute top-2/5 right-1/2 sm:right-3/4 w-24 sm:w-30 h-24 sm:h-30 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#FFCE56] opacity-15 animate-bounce-medium"></div>

            {/* Login Box */}
            <div className="w-full max-w-md sm:max-w-lg bg-[#F6F9FC] py-10 px-4 sm:p-8 rounded-xl shadow-md relative z-10">

                <h1 className="text-[#6667DD] text-2xl sm:text-3xl p-bold mb-6 text-center">Login into FinSync</h1>

                <Formik
                    initialValues={{ email: '', password: '' }}
                    validate={values => {
                        const errors = {};
                        if (!values.email) {
                            errors.email = "Email is required";
                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(values.email)) {
                            errors.email = "Invalid email address";
                        }
                        if (!values.password) {
                            errors.password = "Password is required";
                        }
                        return errors;
                    }}
                    onSubmit={handleSubmit}
                >
                    {({ values, handleChange, errors, touched }) => (
                        <Form className="flex flex-col gap-4">
                            <div className="flex flex-col">
                                <label className="text-gray-700 p-medium mb-1">Email</label>
                                <Field
                                    type="email"
                                    name="email"
                                    value={values.email}
                                    onChange={handleChange}
                                    placeholder="Enter your email"
                                    disabled={loading || loggedIn}
                                    className={`w-full px-3 py-2 rounded-lg outline-none p-regular text-sm sm:text-base
                                        border
                                        ${errors.email && touched.email ? 'border-red-500' : 'border-[#6667DD]'}`}
                                />
                                {errors.email && touched.email && (
                                    <div className="text-red-500 text-sm mt-1 transition-opacity duration-300 opacity-100">{errors.email}</div>
                                )}
                            </div>

                            <div className="flex flex-col relative">
                                <label className="text-gray-700 p-medium mb-1">Password</label>
                                <Field
                                    type={showPassword ? "text" : "password"}
                                    name="password"
                                    value={values.password}
                                    onChange={handleChange}
                                    placeholder="Enter your password"
                                    disabled={loading || loggedIn}
                                    className={`w-full px-3 py-2 rounded-lg outline-none p-regular text-sm sm:text-base pr-10
                                        border
                                        ${errors.password && touched.password ? 'border-red-500' : 'border-[#6667DD]'}`}
                                />
                                {errors.password && touched.password && (
                                    <div className="text-red-500 text-sm mt-1 transition-opacity duration-300 opacity-100">{errors.password}</div>
                                )}
                                <div
                                    className="absolute right-3 top-[38px] cursor-pointer text-gray-600 hover:text-[#6667DD] transition"
                                    onClick={() => setShowPassword(!showPassword)}
                                >
                                    {showPassword ? <Eye size={18} /> : <EyeOff size={18} />}
                                </div>
                            </div>

                            <button
                                type="submit"
                                disabled={loading}
                                className={`w-full bg-[#6667DD] text-white py-2.5 sm:py-3 rounded-lg transition duration-300 p-medium mt-2 text-sm sm:text-base
                                ${loading ? "opacity-70 cursor-not-allowed" : "hover:bg-[#5556cc] cursor-pointer"}`}
                            >
                                {loading ? "Logging..." : "Login"}
                            </button>
                        </Form>
                    )}
                </Formik>

                <p className="text-center text-gray-600 mt-4 p-regular text-sm sm:text-base">
                    Account not exists?{' '}
                    <Link to="/register" className="text-[#6667DD] p-medium hover:underline">
                        Register Now
                    </Link>
                </p>
            </div>

            {/* Animation Styles */}
            <style>{`
                @keyframes bounce-slow { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-20px);} }
                @keyframes bounce-medium { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-30px);} }
                @keyframes bounce-fast { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-40px);} }
                @keyframes bounce-slower { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-15px);} }

                .animate-bounce-slow { animation: bounce-slow 6s infinite ease-in-out; }
                .animate-bounce-medium { animation: bounce-medium 5s infinite ease-in-out; }
                .animate-bounce-fast { animation: bounce-fast 4s infinite ease-in-out; }
                .animate-bounce-slower { animation: bounce-slower 7s infinite ease-in-out; }
            `}</style>
        </div>
    );
};

export default Login;


--- END OF FILE: src\components\Login.jsx ---

================================================================================


--- START OF FILE: src\components\Payments.jsx ---

import { useState } from "react";
import { Dialog } from "@headlessui/react";
import { motion, AnimatePresence } from "framer-motion";
import { Plus, Trash2, X } from "lucide-react";
import PaymentsRemaining from "./PaymentsRemaining";
import { toast } from "sonner";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { fetchPaymentsDone, addPaymentDone, deletePaymentDone, deleteAllPaymentsDone } from "../hooks/payments";

const Payments = () => {
    const [isOpen, setIsOpen] = useState(false);
    const [formData, setFormData] = useState({ title: "", receiver: "", amount: "", message: "" });
    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
    const [paymentToDelete, setPaymentToDelete] = useState(null);
    const [isDeleteAllModalOpen, setIsDeleteAllModalOpen] = useState(false);

    const queryClient = useQueryClient();

    const { data: payments = [], isPending: isLoadingPayments } = useQuery({
        queryKey: ["paymentsDone"],
        queryFn: fetchPaymentsDone,
        onError: () => toast.error("Could Not Fetch Payments")
    });

    const { mutate: addPaymentMutate, isPending: isAddingPayment } = useMutation({
        mutationFn: addPaymentDone,
        onSuccess: () => {
            toast.success("Payment Added Successfully");
            queryClient.invalidateQueries({ queryKey: ["paymentsDone"] });
            setIsOpen(false);
            setFormData({ title: "", receiver: "", amount: "", message: "" });
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to add payment."),
    });

    const { mutate: deletePaymentMutate, isPending: isDeleting, variables: deletingId } = useMutation({
        mutationFn: deletePaymentDone,
        onSuccess: () => {
            toast.success("Payment deleted.");
            queryClient.invalidateQueries({ queryKey: ["paymentsDone"] });
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to delete payment."),
    });

    const { mutate: deleteAllMutate, isPending: isDeletingAll } = useMutation({
        mutationFn: deleteAllPaymentsDone,
        onSuccess: () => {
            toast.success("All payments have been cleared.");
            queryClient.invalidateQueries({ queryKey: ["paymentsDone"] });
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to delete payments."),
    });

    const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });

    const handleSubmit = async (e) => {
        e.preventDefault();
        addPaymentMutate(formData);
    };

    return (
        <div className="w-full bg-[#f6f9fc] flex flex-col">
            {/* Header */}
            {/* <div className="flex justify-between items-center mb-6">
                <h2 className="text-xl p-semibold text-[#6667DD]">Payments Done</h2>
                <button
                    onClick={() => setIsOpen(true)}
                    className="flex items-center gap-2 bg-[#6667DD] hover:bg-[#5557c4] text-white px-4 py-3 rounded-full shadow transition-all duration-300 cursor-pointer hover:scale-95 p-regular"
                >
                    <Plus size={18} /> Add Transaction
                </button>
            </div> */}

            {/* Add Payment Modal */}
            {/* <AnimatePresence>
                {isOpen && (
                    <Dialog open={isOpen} onClose={() => setIsOpen(false)} className="relative z-50">
                        <motion.div
                            className="fixed inset-0 bg-black/60 backdrop-blur-sm"
                            initial={{ opacity: 0 }}
                            animate={{ opacity: 1 }}
                            exit={{ opacity: 0 }}
                        />
                        <div className="fixed inset-0 flex items-center justify-center p-4">
                            <motion.div
                                initial={{ scale: 0.9, opacity: 0 }}
                                animate={{ scale: 1, opacity: 1 }}
                                exit={{ scale: 0.9, opacity: 0 }}
                                className="w-full max-w-lg rounded-2xl bg-[#F6F9FC] border-2 border-[#6667DD] shadow-lg p-6"
                            >
                                <Dialog.Title className="text-xl p-semibold text-[#6667DD] mb-4">
                                    Add New Payment
                                </Dialog.Title>
                                <form className="space-y-4" onSubmit={handleSubmit}>
                                    <input name="title" value={formData.title} onChange={handleChange} placeholder="Title" className="w-full px-3 py-2 border-2 rounded-lg outline-none border-[#6667DD] p-regular" required />
                                    <input name="receiver" value={formData.receiver} onChange={handleChange} placeholder="Receiver's Name" className="w-full px-3 py-2 border-2 rounded-lg outline-none border-[#6667DD] p-regular" required />
                                    <input name="amount" type="number" value={formData.amount} onChange={handleChange} placeholder="Amount" className="w-full px-3 py-2 border-2 rounded-lg outline-none border-[#6667DD] p-regular" required />
                                    <textarea name="message" value={formData.message} onChange={handleChange} placeholder="Message" rows="3" className="w-full px-3 py-2 border-2 rounded-lg outline-none border-[#6667DD] p-regular resize-none" />
                                    <div className="flex justify-end gap-3 pt-2">
                                        <button type="button" onClick={() => setIsOpen(false)} className="px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-lg text-gray-700 p-regular cursor-pointer transition-all duration-300">Cancel</button>
                                        <button
                                            type="submit"
                                            disabled={isAddingPayment}
                                            className={`px-5 py-2 rounded-lg shadow-md transition-all duration-300 p-regular cursor-pointer text-white ${isAddingPayment ? "bg-gray-400 hover:cursor-not-allowed" : "bg-[#6667DD] hover:bg-[#5253b8]"}`}
                                        >
                                            {isAddingPayment ? "Adding..." : "Add"}
                                        </button>
                                    </div>
                                </form>
                            </motion.div>
                        </div>
                    </Dialog>
                )}
            </AnimatePresence> */}

            {/* Payments Table */}
            {/* <div className="overflow-x-auto bg-transparent rounded-lg shadow p-4">
                {isLoadingPayments ? (
                    <p className="text-[#6667DD] text-center text-lg p-regular animate-pulse">Loading Payments...</p>
                ) : (
                    <>
                        <table className="min-w-full table-auto border-collapse text-left">
                            <thead>
                                <tr className="bg-[#6667DD] text-white p-regular uppercase text-sm">
                                    <th className="px-4 py-2 text-left">Title</th>
                                    <th className="px-4 py-2 text-left">Receiver</th>
                                    <th className="px-4 py-2 text-left">Amount</th>
                                    <th className="px-4 py-2 text-left">Message</th>
                                    <th className="px-4 py-2 text-left">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                {payments.length > 0 ? (
                                    payments.map((p) => {
                                        const isCurrentlyDeleting = isDeleting && deletingId === p._id;
                                        return (
                                            <tr key={p._id} className="border-b hover:bg-gray-50 transition-all duration-300 p-regular">
                                                <td className="px-4 py-2 text-left">{p.title}</td>
                                                <td className="px-4 py-2 text-left">{p.receiver}</td>
                                                <td className="px-4 py-2 text-left">{p.amount}</td>
                                                <td className="px-4 py-2 text-left">{p.message}</td>
                                                <td className="px-4 py-2 text-left">
                                                    <button
                                                        onClick={() => {
                                                            setPaymentToDelete(p._id);
                                                            setIsDeleteModalOpen(true);
                                                        }}
                                                        disabled={isCurrentlyDeleting}
                                                        className="p-2 flex items-center justify-center transition-all duration-300 cursor-pointer"
                                                    >
                                                        {isCurrentlyDeleting ? (
                                                            <div className="w-5 h-5 border-2 border-red-500 border-t-transparent rounded-full animate-spin"></div>
                                                        ) : (
                                                            <Trash2 className="w-5 h-5 text-red-500 hover:text-red-700 transition-all duration-300" />
                                                        )}
                                                    </button>
                                                </td>
                                            </tr>
                                        )
                                    })
                                ) : (
                                    <tr>
                                        <td colSpan="5" className="text-center py-4 text-gray-500 p-regular">No payments added yet.</td>
                                    </tr>
                                )}
                            </tbody>
                        </table>

                        {payments.length > 0 && (
                            <div className="flex justify-end mt-4">
                                <button
                                    onClick={() => setIsDeleteAllModalOpen(true)}
                                    disabled={isDeletingAll}
                                    className={`px-5 py-2 rounded-lg shadow-md transition-all duration-300 p-regular text-white ${isDeletingAll ? "bg-red-300 cursor-not-allowed" : "bg-red-500 hover:bg-red-600 cursor-pointer"}`}
                                >
                                    {isDeletingAll ? "Deleting..." : "Delete All"}
                                </button>
                            </div>
                        )}
                    </>
                )}
            </div> */}

            <PaymentsRemaining />

            {/* Individual Delete Modal */}
            {isDeleteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
                        <X size={20} className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition" onClick={() => setIsDeleteModalOpen(false)} />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">Do you really want to delete this payment? This action cannot be undone.</p>
                        <div className="flex justify-center gap-3">
                            <button onClick={() => setIsDeleteModalOpen(false)} className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular">Cancel</button>
                            <button onClick={() => { deletePaymentMutate(paymentToDelete); setIsDeleteModalOpen(false); }} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular">Delete</button>
                        </div>
                    </div>
                </div>
            )}

            {/* Delete All Modal */}
            {isDeleteAllModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
                        <X size={20} className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition" onClick={() => setIsDeleteAllModalOpen(false)} />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg font-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">Do you really want to delete all payments? This action cannot be undone.</p>
                        <div className="flex justify-center gap-3">
                            <button onClick={() => setIsDeleteAllModalOpen(false)} className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular">Cancel</button>
                            <button onClick={() => { deleteAllMutate(); setIsDeleteAllModalOpen(false); }} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular">Delete All</button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Payments;


--- END OF FILE: src\components\Payments.jsx ---

================================================================================


--- START OF FILE: src\components\PaymentsRemaining.jsx ---

import { useState } from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import { Calendar, Clock, Trash2, X } from "lucide-react";
import { toast } from "sonner";
import { useQuery, useQueryClient, useMutation } from "@tanstack/react-query";
import {
    fetchSchedules,
    addSchedule,
    deleteSchedule,
    deleteAllSchedules,
} from "../hooks/schedule";

const PaymentsRemaining = () => {
    const [selectedDate, setSelectedDate] = useState(null);
    const [title, setTitle] = useState("");
    const [message, setMessage] = useState("");

    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
    const [scheduleToDelete, setScheduleToDelete] = useState(null);
    const [isDeleteAllModalOpen, setIsDeleteAllModalOpen] = useState(false);

    const queryClient = useQueryClient();

    const { data: schedules = [], isPending: loadingSchedules } = useQuery({
        queryKey: ["schedules"],
        queryFn: fetchSchedules,
        onError: () => toast.error("Failed to fetch scheduled payments"),
    });

    const { mutate: addScheduleMutate, isPending: isScheduling } = useMutation({
        mutationFn: addSchedule,
        onSuccess: () => {
            toast.success("Payment Scheduled Successfully");
            queryClient.invalidateQueries({ queryKey: ["schedules"] });
            setTitle("");
            setMessage("");
            setSelectedDate(null);
        },
        onError: (err) =>
            toast.error(err.response?.data?.message || "Failed to schedule payment"),
    });

    const { mutate: deleteScheduleMutate, isPending: isDeleting, variables: deletingId } =
        useMutation({
            mutationFn: deleteSchedule,
            onSuccess: () => {
                toast.success("Schedule deleted");
                queryClient.invalidateQueries({ queryKey: ["schedules"] });
            },
            onError: (err) =>
                toast.error(err.response?.data?.message || "Failed to delete schedule"),
        });

    const { mutate: deleteAllMutate, isPending: isDeletingAll } = useMutation({
        mutationFn: deleteAllSchedules,
        onSuccess: () => {
            toast.success("All schedules deleted");
            queryClient.invalidateQueries({ queryKey: ["schedules"] });
        },
        onError: (err) =>
            toast.error(err.response?.data?.message || "Failed to delete all schedules"),
    });

    const handleSchedule = () => {
        if (!selectedDate || !title || !message)
            return toast.error("Please fill all fields");
        addScheduleMutate({ title, message, scheduledDate: selectedDate });
    };

    return (
        <div className="p-4 sm:p-6 md:p-8 bg-gradient-to-r from-[#eff7ff] to-[#F3E8FF] w-full">
            <div className="flex flex-col lg:flex-row gap-8 lg:gap-12 items-start justify-between w-full">
                {/* LEFT FORM SECTION */}
                <div className="flex-1 w-full">
                    <div className="flex items-center gap-3 mb-4">
                        <Calendar className="text-[#6667DD]" size={22} />
                        <h2 className="text-lg sm:text-xl md:text-2xl p-semibold text-[#6667DD]">
                            Schedule Payment
                        </h2>
                    </div>

                    <p className="text-gray-600 text-sm sm:text-base p-regular mb-4 leading-relaxed">
                        Choose a date to schedule your next payment.
                    </p>

                    <input
                        type="text"
                        placeholder="Title"
                        value={title}
                        onChange={(e) => setTitle(e.target.value)}
                        className="w-full mb-3 p-2 sm:p-3 border-2 border-[#6667DD] outline-none rounded-xl p-regular text-sm sm:text-base"
                    />
                    <textarea
                        placeholder="Message"
                        value={message}
                        onChange={(e) => setMessage(e.target.value)}
                        className="w-full mb-4 p-2 sm:p-3 border-2 border-[#6667DD] outline-none p-regular rounded-xl resize-none text-sm sm:text-base"
                        rows={3}
                    />

                    <button
                        onClick={handleSchedule}
                        disabled={isScheduling}
                        className={`flex items-center justify-center gap-2 py-2.5 sm:py-3 px-4 sm:px-5 rounded-full p-regular shadow-md transition-all duration-300 cursor-pointer w-full sm:w-auto text-sm sm:text-base ${isScheduling
                            ? "bg-[#9ba0e0] hover:cursor-not-allowed"
                            : "bg-[#6667DD] hover:bg-[#5253b8]"
                            } text-white`}
                    >
                        <Clock size={20} />{" "}
                        {isScheduling ? "Scheduling..." : "Schedule Payment"}
                    </button>
                </div>

                {/* RIGHT DATE PICKER SECTION */}
                <div className="flex-1 w-full max-w-md">
                    <DatePicker
                        selected={selectedDate}
                        onChange={date => setSelectedDate(date)}
                        showTimeSelect
                        timeFormat="HH:mm"
                        timeIntervals={5}
                        dateFormat="MMMM d, yyyy h:mm aa"
                        inline
                        className="rounded-2xl border border-gray-200 shadow-lg p-4 bg-white"
                    />
                </div>
            </div>

            {/* ===== SCHEDULED PAYMENTS LIST / SKELETON ===== */}
            <h1 className="text-[#6667DD] text-lg sm:text-xl md:text-2xl p-semibold mt-10">
                {loadingSchedules ? "Loading scheduled Payments..." : "All Payment Schedules"}
            </h1>

            {loadingSchedules ? (
                <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 animate-pulse">
                    {[1, 2, 3].map((i) => (
                        <div
                            key={i}
                            className="p-4 sm:p-5 bg-gray-200 rounded-xl shadow-sm h-32 flex flex-col justify-between"
                        >
                            <div className="h-6 w-3/4 bg-gray-300 rounded mb-2"></div>
                            <div className="h-4 w-1/2 bg-gray-300 rounded mb-1"></div>
                            <div className="h-3 w-1/3 bg-gray-300 rounded"></div>
                        </div>
                    ))}
                </div>
            ) : (
                <div className="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">
                    {schedules.length === 0 && (
                        <p className="text-gray-500 text-center col-span-full p-regular mt-4 text-sm sm:text-base">
                            No payments scheduled.
                        </p>
                    )}

                    {schedules.map((s) => {
                        const isCurrentlyDeleting = isDeleting && deletingId === s._id;
                        return (
                            <div
                                key={s._id}
                                className="p-4 sm:p-5 bg-[#f0f4ff] rounded-xl shadow-sm relative"
                            >
                                <h3 className="text-[#6667DD] text-base sm:text-lg p-semibold mb-2 underline break-words">
                                    {s.title}
                                </h3>
                                <p className="text-gray-700 p-medium text-sm sm:text-base mt-2">
                                    {new Date(s.scheduledDate).toLocaleString()} - {s.status.toUpperCase()}
                                </p>
                                {s.message && (
                                    <p className="text-gray-500 text-xs sm:text-sm mt-1 p-regular break-words">
                                        {s.message}
                                    </p>
                                )}

                                <button
                                    onClick={() => {
                                        setScheduleToDelete(s._id);
                                        setIsDeleteModalOpen(true);
                                    }}
                                    disabled={isCurrentlyDeleting}
                                    className={`absolute top-3 right-3 p-1.5 sm:p-2 cursor-pointer rounded-full transition-all duration-300 ${isCurrentlyDeleting ? "bg-red-300" : "hover:bg-red-200"
                                        }`}
                                >
                                    {isCurrentlyDeleting ? (
                                        <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                                    ) : (
                                        <Trash2 className="text-red-500" size={18} />
                                    )}
                                </button>
                            </div>
                        );
                    })}
                </div>
            )}

            {schedules.length > 0 && (
                <button
                    onClick={() => setIsDeleteAllModalOpen(true)}
                    disabled={isDeletingAll}
                    className={`bg-red-500 transition-all duration-300 text-white py-2 px-4 sm:px-5 rounded-lg font-medium shadow-md p-regular mt-6 sm:mt-8 cursor-pointer ${isDeletingAll ? "bg-red-300 cursor-not-allowed" : "hover:bg-red-600"
                        }`}
                >
                    {isDeletingAll ? "Deleting..." : "Delete All"}
                </button>
            )}

            {/* DELETE MODALS */}
            {isDeleteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm px-4">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative border border-gray-300">
                        <X
                            size={20}
                            className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
                            onClick={() => setIsDeleteModalOpen(false)}
                        />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">
                            Do you really want to delete this scheduled payment? This action cannot be undone.
                        </p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3">
                            <button
                                onClick={() => setIsDeleteModalOpen(false)}
                                className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular w-full sm:w-auto"
                            >
                                Cancel
                            </button>
                            <button
                                onClick={() => {
                                    deleteScheduleMutate(scheduleToDelete);
                                    setIsDeleteModalOpen(false);
                                }}
                                className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular w-full sm:w-auto"
                            >
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            )}

            {isDeleteAllModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm px-4">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative border border-gray-300">
                        <X
                            size={20}
                            className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
                            onClick={() => setIsDeleteAllModalOpen(false)}
                        />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">
                            Do you really want to delete all scheduled payments? This action cannot be undone.
                        </p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3">
                            <button
                                onClick={() => setIsDeleteAllModalOpen(false)}
                                className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular w-full sm:w-auto"
                            >
                                Cancel
                            </button>
                            <button
                                onClick={() => {
                                    deleteAllMutate();
                                    setIsDeleteAllModalOpen(false);
                                }}
                                className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular w-full sm:w-auto"
                            >
                                Delete All
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default PaymentsRemaining;


--- END OF FILE: src\components\PaymentsRemaining.jsx ---

================================================================================


--- START OF FILE: src\components\Profile.jsx ---

import React, { useState, useEffect } from "react";
import { useAppContext } from "../../context/AppContext";
import { useNavigate } from "react-router-dom";

// Global flag to remember skeleton loaded
let skeletonShown = false;

const Profile = () => {
    const { user } = useAppContext();
    const navigate = useNavigate();
    const [loading, setLoading] = useState(!skeletonShown);

    useEffect(() => {
        if (!user) {
            navigate("/login");
        } else if (!skeletonShown) {
            const timer = setTimeout(() => {
                setLoading(false);
                skeletonShown = true; // mark skeleton as shown
            }, 800); // skeleton delay
            return () => clearTimeout(timer);
        } else {
            setLoading(false); // skip skeleton if already shown
        }
    }, [user, navigate]);

    if (!user) return null;

    if (loading) {
        return (
            <div className="flex flex-col justify-center items-center px-6 py-10 sm:p-10 mt-4 sm:mt-0 shadow-sm bg-[#F6F9FC] w-full max-w-md sm:max-w-lg md:max-w-xl lg:max-w-4xl mx-auto animate-pulse">
                <div className="w-30 h-30 sm:w-40 sm:h-40 rounded-full bg-gray-300 border-2 sm:border-4 border-gray-200 shadow-md"></div>
                <div className="w-40 sm:w-60 h-6 sm:h-8 bg-gray-300 rounded mt-6"></div>
                <div className="w-32 sm:w-48 h-4 sm:h-6 bg-gray-300 rounded mt-2"></div>
                <div className="w-24 sm:w-32 h-6 bg-gray-300 rounded mt-4"></div>
            </div>
        );
    }

    return (
        <div className="flex flex-col justify-center items-center px-6 py-10 sm:p-10 mt-10 sm:mt-0 shadow-sm bg-[#F6F9FC] w-full max-w-md sm:max-w-lg md:max-w-xl lg:max-w-4xl mx-auto">
            <img
                src={user.profileImage || "https://images.unsplash.com/photo-1615109398623-88346a601842?w=500&auto=format&fit=crop&q=60"}
                alt="Profile"
                className="w-30 h-30 sm:w-40 sm:h-40 rounded-full border-2 sm:border-4 border-[#6667DD] object-cover shadow-md"
            />

            <h2 className="text-xl sm:text-3xl p-bold text-gray-800 mt-6">{user.name}</h2>

            <p className="text-base sm:text-lg text-gray-600 mt-2 p-regular">{user.email}</p>

            <span className="p-regular mt-4 px-5 py-2 rounded-full bg-[#6667DD]/10 text-[#6667DD] uppercase tracking-wide text-xs sm:text-sm">
                I'm a User
            </span>
        </div>
    );
};

export default Profile;


--- END OF FILE: src\components\Profile.jsx ---

================================================================================


--- START OF FILE: src\components\Recipients.jsx ---

import { useState, useMemo } from "react";
import { useNavigate } from "react-router-dom";
import { Share2, X, Trash2, UsersRound } from "lucide-react";
import { toast } from "sonner";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { fetchShares, createShare, deleteShare, fetchRecipients } from "../hooks/shares";

const Recipients = () => {
    const navigate = useNavigate();
    const queryClient = useQueryClient();

    // Modal & Form State
    const [isOpen, setIsOpen] = useState(false);
    const [deleteModalOpen, setDeleteModalOpen] = useState(false);
    const [selectedDeleteId, setSelectedDeleteId] = useState(null);

    const [selectedUserIds, setSelectedUserIds] = useState([]);
    const [selectedCategory, setSelectedCategory] = useState("");
    const [title, setTitle] = useState("");

    const categories = ["Personal", "Business", "Family", "Friends", "Loan", "Other"];
    const currentUser = JSON.parse(localStorage.getItem("user"));

    // Fetch shares and recipients
    const { data: sharedCards = [], isPending: isLoadingShares } = useQuery({
        queryKey: ["shares"],
        queryFn: fetchShares,
        onError: () => toast.error("Failed to fetch shares."),
    });

    const { data: potentialRecipients = [], isPending: isLoadingRecipients } = useQuery({
        queryKey: ["recipients"],
        queryFn: fetchRecipients,
        onError: () => toast.error("Failed to fetch recipients."),
    });

    // Create share
    const { mutate: createShareMutate, isPending: isSharing } = useMutation({
        mutationFn: createShare,
        onSuccess: () => {
            toast.success("Shared successfully!");
            queryClient.invalidateQueries({ queryKey: ["shares"] });
            resetAndCloseModal();
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to share."),
    });

    // Delete share
    const { mutate: deleteShareMutate, isPending: isDeleting } = useMutation({
        mutationFn: deleteShare,
        onSuccess: () => {
            toast.success("Deleted successfully!");
            queryClient.invalidateQueries({ queryKey: ["shares"] });
            setDeleteModalOpen(false);
            setSelectedDeleteId(null);
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to delete."),
    });

    const handleShare = () => {
        if (!title || !selectedCategory || selectedUserIds.length === 0) {
            return toast.error("Please fill all fields and select at least one user!");
        }
        createShareMutate({ title, category: selectedCategory, sharedWith: selectedUserIds });
    };

    const confirmDeleteShare = (shareId) => {
        setSelectedDeleteId(shareId);
        setDeleteModalOpen(true);
    };
    const handleDeleteShare = () => {
        if (!selectedDeleteId) return;
        deleteShareMutate(selectedDeleteId);
    };

    const { sharedByMe, sharedWithMe } = useMemo(() => {
        const byMe = sharedCards.filter(card => card.sharedBy._id === currentUser.id);
        const withMe = sharedCards.filter(card => card.sharedBy._id !== currentUser.id);
        return { sharedByMe: byMe, sharedWithMe: withMe };
    }, [sharedCards, currentUser.id]);

    const toggleUser = (userId) => setSelectedUserIds(prev =>
        prev.includes(userId) ? prev.filter(id => id !== userId) : [...prev, userId]
    );
    const resetAndCloseModal = () => {
        setIsOpen(false);
        setTitle("");
        setSelectedCategory("");
        setSelectedUserIds([]);
    };

    if (isLoadingShares || isLoadingRecipients) {
        return (
            <div className="w-full px-4 sm:px-6 md:px-8 py-6 bg-[#F6F9FC] space-y-6 animate-pulse">
                {/* Header Skeleton */}
                <div className="flex justify-between items-center gap-4">
                    <div className="h-6 w-48 bg-gray-300 rounded"></div>
                    <div className="h-10 w-32 bg-gray-300 rounded-full md:block hidden"></div>
                </div>

                {/* Shared By Me Title Skeleton */}
                <div className="h-5 w-32 bg-gray-300 rounded mt-4"></div>

                {/* Shared By Me Cards Skeleton */}
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-2">
                    {Array.from({ length: 2 }).map((_, idx) => (
                        <div key={idx} className="p-4 border border-gray-200 rounded-lg bg-gray-200 h-32"></div>
                    ))}
                </div>

                {/* Shared With Me Title Skeleton */}
                <div className="h-5 w-32 bg-gray-300 rounded mt-6"></div>

                {/* Shared With Me Cards Skeleton */}
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-2">
                    {Array.from({ length: 2 }).map((_, idx) => (
                        <div key={idx} className="p-4 border border-gray-200 rounded-lg bg-gray-200 h-32"></div>
                    ))}
                </div>
            </div>
        );
    }

    const CardGrid = ({ cards, showDelete }) => (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
            {cards.map((card) => (
                <div
                    key={card._id}
                    onClick={() => navigate(`/recipient/${card._id}`)}
                    className="bg-transparent p-4 rounded-lg shadow-sm border border-gray-200 cursor-pointer hover:shadow-md transition-all duration-300"
                >
                    <div className="flex justify-between items-center">
                        <h3 className="p-semibold text-[#6667DD] mb-2 text-lg break-words">{card.title}</h3>
                        {showDelete && (
                            <p
                                onClick={(e) => { e.stopPropagation(); confirmDeleteShare(card._id); }}
                                className="text-red-500 hover:text-red-700 cursor-pointer transition-all duration-300 p-1"
                            >
                                <Trash2 size={20} />
                            </p>
                        )}
                    </div>
                    <p className="p-medium text-gray-700 text-sm break-words">Category: {card.category}</p>
                    <p className="p-medium text-gray-700 text-sm mt-1 break-words">
                        Users: {card.sharedWith.map(u => u.name).join(", ")}
                    </p>
                    {!showDelete && <p className="p-medium text-gray-500 text-xs mt-1 break-words">By: {card.sharedBy.name}</p>}
                </div>
            ))}
        </div>
    );

    return (
        <div className="w-full px-4 sm:px-6 md:px-8 py-6 bg-[#F6F9FC]">
            {/* Header */}
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-3">
                <h2 className="text-2xl p-bold text-[#6667DD]">Shared Payments</h2>
                <button
                    onClick={() => setIsOpen(true)}
                    className="flex items-center gap-2 bg-[#6667DD] text-white px-5 py-3 rounded-full shadow-sm hover:bg-[#5152b8] transition-all duration-300 p-regular cursor-pointer w-full sm:w-auto justify-center"
                >
                    <Share2 size={18} /> Share With
                </button>
            </div>

            {/* Shared By Me */}
            <h3 className="text-xl p-semibold text-gray-800 mb-3">Shared By Me</h3>
            {sharedByMe.length > 0 ? <CardGrid cards={sharedByMe} showDelete={true} /> : <div className="text-center py-6 text-gray-500 p-medium">You haven't shared any payments yet.</div>}

            {/* Shared With Me */}
            <h3 className="text-xl p-semibold text-gray-800 mt-8 mb-3">Shared With Me</h3>
            {sharedWithMe.length > 0 ? <CardGrid cards={sharedWithMe} showDelete={false} /> : <div className="text-center py-6 text-gray-500 p-medium">No payments have been shared with you.</div>}

            {/* Share Modal */}
            {isOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm p-4">
                    <div className="bg-[#F6F9FC] rounded-2xl shadow-xl w-full max-w-xl px-4 py-6 relative">
                        <button
                            onClick={resetAndCloseModal}
                            className="absolute top-4 right-4 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
                        >
                            <X size={22} />
                        </button>
                        <h3 className="text-xl p-semibold text-[#6667DD] mb-4">Share Payment Details</h3>
                        <div className="flex flex-col gap-4 sm:flex-row mb-4">
                            <div className="flex-1">
                                <label className="block text-sm p-medium text-gray-700 mb-2 uppercase">Title</label>
                                <input
                                    type="text"
                                    value={title}
                                    onChange={(e) => setTitle(e.target.value)}
                                    placeholder="e.g., Monthly Rent"
                                    className="w-full rounded-lg px-3 py-2 outline-none border-2 border-[#6667DD] p-regular"
                                />
                            </div>
                            <div className="flex-1">
                                <label className="block text-sm p-medium text-gray-700 mb-2 uppercase">Category</label>
                                <select
                                    value={selectedCategory}
                                    onChange={(e) => setSelectedCategory(e.target.value)}
                                    className="w-full rounded-lg px-3 py-2 outline-none cursor-pointer p-regular border-2 border-[#6667DD]"
                                >
                                    <option value="">Select Category</option>
                                    {categories.map((cat, idx) => (<option key={idx} value={cat}>{cat}</option>))}
                                </select>
                            </div>
                        </div>

                        <label className="block text-sm uppercase p-medium text-gray-700 mb-2">Share With</label>
                        <div className="flex flex-col gap-2 max-h-48 overflow-y-auto mb-4 border-2 border-[#6667DD] rounded-lg p-3">
                            {potentialRecipients.length > 0 ? potentialRecipients.map((user) => (
                                <label key={user._id} className="flex items-center gap-2 cursor-pointer p-regular break-words">
                                    <input
                                        type="checkbox"
                                        className="w-4 h-4 accent-[#6667DD]"
                                        checked={selectedUserIds.includes(user._id)}
                                        onChange={() => toggleUser(user._id)}
                                    />
                                    {user.name} ({user.email})
                                </label>
                            )) : (<p className="text-gray-500 p-medium">No invited users to share with.</p>)}
                        </div>

                        <button
                            onClick={handleShare}
                            disabled={isSharing}
                            className={`w-full flex items-center justify-center gap-2 py-3 rounded-lg shadow-md p-medium transition-all sm:text-base text-sm duration-300 ${isSharing ? "bg-[#999] cursor-not-allowed" : "bg-[#6667DD] hover:bg-[#5152b8] cursor-pointer"} text-white`}
                        >
                            <UsersRound size={18} />
                            {isSharing ? "Sharing..." : "Share Now"}
                        </button>
                    </div>
                </div>
            )}

            {/* Delete Confirmation Modal */}
            {deleteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm p-4">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
                        <X
                            size={20}
                            className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
                            onClick={() => setDeleteModalOpen(false)}
                        />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">
                            Do you really want to delete this shared payment? This action cannot be undone.
                        </p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3">
                            <button
                                onClick={() => setDeleteModalOpen(false)}
                                className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular w-full sm:w-auto"
                            >
                                Cancel
                            </button>
                            <button
                                onClick={handleDeleteShare}
                                disabled={isDeleting}
                                className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular w-full sm:w-auto"
                            >
                                {isDeleting ? "Deleting..." : "Delete"}
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Recipients;


--- END OF FILE: src\components\Recipients.jsx ---

================================================================================


--- START OF FILE: src\components\RecipientsData.jsx ---

import { useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { ArrowLeft, Plus, Upload, X, Trash2 } from "lucide-react";
import { toast } from "sonner";
import DataTable from "react-data-table-component";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { fetchPaymentsForShare, addPaymentToShare, deletePayment } from "../hooks/paymentsShareData";

const RecipientsData = () => {
    const navigate = useNavigate();
    const { id: shareId } = useParams();
    const queryClient = useQueryClient();
    const currentUser = JSON.parse(localStorage.getItem("user"));

    const [isOpen, setIsOpen] = useState(false);
    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
    const [paymentToDelete, setPaymentToDelete] = useState(null);

    const [title, setTitle] = useState("");
    const [category, setCategory] = useState("");
    const [currency, setCurrency] = useState("USD");
    const [amount, setAmount] = useState("");
    const [status, setStatus] = useState("Request");
    const [imageFile, setImageFile] = useState(null);
    const [imagePreview, setImagePreview] = useState(null);
    const [selectedImage, setSelectedImage] = useState(null);

    const { data: payments = [], isPending: isLoadingPayments } = useQuery({
        queryKey: ["sharePayments", shareId],
        queryFn: () => fetchPaymentsForShare(shareId),
        onError: (err) => {
            toast.error(err.response?.data?.message || "Failed to load payments.");
            navigate("/recipients");
        },
    });

    const { mutate: addPaymentMutate, isPending: isAddingPayment } = useMutation({
        mutationFn: addPaymentToShare,
        onSuccess: () => {
            toast.success("Payment added successfully!");
            queryClient.invalidateQueries({ queryKey: ["sharePayments", shareId] });
            setIsOpen(false);
            setTitle(""); setCategory(""); setCurrency("USD"); setAmount(""); setStatus("Request"); setImageFile(null); setImagePreview(null);
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to add payment."),
    });

    const { mutate: deletePaymentMutate, isPending: isDeleting } = useMutation({
        mutationFn: deletePayment,
        onSuccess: () => {
            toast.success("Payment deleted!");
            queryClient.invalidateQueries({ queryKey: ["sharePayments", shareId] });
            setIsDeleteModalOpen(false);
            setPaymentToDelete(null);
        },
        onError: (err) => toast.error(err.response?.data?.message || "Failed to delete payment."),
    });

    const handleAddPayment = () => {
        if (!title || !category || !currency || !amount || !status) {
            return toast.error("Please fill all fields!");
        }
        const paymentFormData = new FormData();
        paymentFormData.append("title", title);
        paymentFormData.append("category", category);
        paymentFormData.append("currency", currency);
        paymentFormData.append("amount", amount);
        paymentFormData.append("status", status);
        if (imageFile) paymentFormData.append("image", imageFile);
        addPaymentMutate({ shareId, paymentFormData });
    };

    const columns = [
        { name: <span className="p-semibold">Title</span>, selector: row => row.title, cell: row => <span className="p-regular">{row.title}</span>, sortable: true },
        { name: <span className="p-semibold">Category</span>, selector: row => row.category, cell: row => <span className="p-regular">{row.category}</span>, sortable: true },
        { name: <span className="p-semibold">Amount</span>, selector: row => row.amount, cell: row => <span className="p-regular">{`${row.currency} ${row.amount}`}</span>, sortable: true },
        { name: <span className="p-semibold">Status</span>, cell: row => <StatusBadge status={row.status} />, sortable: true },
        { name: <span className="p-semibold">Added By</span>, selector: row => row.createdBy.name, cell: row => <span className="p-regular">{row.createdBy.name}</span>, sortable: true },
        { name: <span className="p-semibold">Image</span>, cell: row => row.image ? <img src={row.image} alt={row.title} onClick={() => setSelectedImage(row.image)} className="w-12 h-12 rounded-md object-cover cursor-pointer" /> : <span className="text-gray-400 p-regular text-sm">No Image</span> },
        {
            name: <span className="p-semibold">Actions</span>,
            cell: row => row.createdBy._id === currentUser.id && (
                <button
                    onClick={() => { setPaymentToDelete(row._id); setIsDeleteModalOpen(true); }}
                    className="p-2 rounded-full hover:bg-red-100 text-red-600 transition cursor-pointer"
                >
                    <Trash2 size={18} />
                </button>
            )
        },
    ];

    // if (isLoadingPayments) return <div className="p-6 text-center p-medium animate-pulse text-[#6667DD]">Loading Payments...</div>;

    return (
        <div className="w-full px-4 sm:px-6 lg:px-8 py-6 bg-[#F6F9FC]">
            <div className="w-full text-center mb-4 md:hidden block">
                <p className="text-sm sm:text-base text-[#6667DD] p-medium animate-bounce">
                    Zoom out to see the full table clearly! 👀
                </p>
            </div>

            {/* Header */}
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6 gap-4">
                <div className="flex items-center gap-2">
                    <button onClick={() => navigate("/recipients")} className="p-2 rounded-full bg-gray-200 hover:bg-gray-300 transition-all duration-300 cursor-pointer">
                        <ArrowLeft size={18} />
                    </button>
                    <h2 className="text-2xl p-bold text-[#6667DD]">Shared Payment Details</h2>
                </div>
                <button onClick={() => setIsOpen(true)} className="flex items-center gap-2 bg-[#6667DD] text-white px-5 py-3 rounded-full shadow-sm hover:bg-[#5152b8] transition-all duration-300 p-regular cursor-pointer">
                    <Plus size={18} /> Add Payment
                </button>
            </div>

            {/* DataTable with horizontal scroll */}
            <div className="overflow-x-auto">
                {isLoadingPayments ? (
                    <div className="space-y-2 py-2">
                        {[...Array(2)].map((_, idx) => (
                            <div key={idx} className="h-10 grid grid-cols-7 gap-4 bg-gray-200 rounded animate-pulse w-full px-4"></div>
                        ))}
                    </div>
                ) : (
                    <DataTable
                        columns={columns}
                        data={payments}
                        pagination
                        highlightOnHover
                        striped
                        customStyles={{
                            headCells: { style: { fontSize: "14px", fontWeight: "600" } },
                            cells: { style: { fontSize: "14px", fontWeight: "400" } }
                        }}
                        noDataComponent={<div className="py-6 text-gray-500 p-medium">No payments added to this share yet.</div>}
                    />
                )}
            </div>

            {/* Add Payment Modal */}
            {isOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm p-4">
                    <div className="bg-[#F6F9FC] rounded-2xl shadow-xl w-full max-w-xl sm:max-w-2xl px-4 py-6 sm:p-6 relative overflow-y-auto h-fit">
                        <button onClick={() => setIsOpen(false)} className="absolute top-4 right-4 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"><X size={22} /></button>
                        <h3 className="text-xl p-semibold text-[#6667DD] mb-4">Add New Payment</h3>

                        {/* Form Inputs responsive */}
                        <div className="flex flex-col sm:flex-row gap-4 mb-4">
                            <input type="text" value={title} onChange={(e) => setTitle(e.target.value)} placeholder="Payment Title" className="flex-1 outline-none rounded-lg px-3 py-2 p-regular border-2 border-[#6667DD]" />
                            <select value={category} onChange={(e) => setCategory(e.target.value)} className="flex-1 rounded-lg px-3 py-2 border-2 border-[#6667DD] p-regular cursor-pointer outline-none">
                                <option value="">Select Category</option>
                                <option value="Personal">Personal</option>
                                <option value="Business">Business</option>
                                <option value="Family">Family</option>
                                <option value="Friends">Friends</option>
                            </select>
                        </div>

                        <div className="flex flex-col sm:flex-row gap-4 mb-4">
                            <select value={currency} onChange={(e) => setCurrency(e.target.value)} className="flex-1 rounded-lg px-3 py-2 border-2 border-[#6667DD] cursor-pointer outline-none p-regular">
                                <option value="USD">$ USD</option>
                                <option value="PKR">₨ PKR</option>
                                <option value="EUR">€ EUR</option>
                            </select>
                            <input type="number" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder="Amount" className="flex-1 p-regular outline-none rounded-lg px-3 py-2 border-2 border-[#6667DD]" />
                        </div>

                        <div className="flex flex-col sm:flex-row gap-4 mb-4">
                            <StatusButton currentStatus={status} onSelectStatus={setStatus} statusName="Paid" />
                            <StatusButton currentStatus={status} onSelectStatus={setStatus} statusName="Request" />
                            <StatusButton currentStatus={status} onSelectStatus={setStatus} statusName="Pending" />
                        </div>

                        <label className="flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-[#6667DD] rounded-lg cursor-pointer hover:bg-gray-100 transition mb-4">
                            <Upload size={24} className="mb-2 text-gray-600" />
                            <span className="text-gray-600 p-regular">{imagePreview ? "Image Selected ✅" : "Upload Image (optional)"}</span>
                            <input type="file" accept="image/*" className="hidden" onChange={(e) => {
                                if (e.target.files && e.target.files[0]) {
                                    const file = e.target.files[0];
                                    setImageFile(file);
                                    setImagePreview(URL.createObjectURL(file));
                                }
                            }} />
                        </label>

                        <button onClick={handleAddPayment} disabled={isAddingPayment} className={`w-full py-3 rounded-lg shadow-md p-medium transition-all duration-300 ${isAddingPayment ? "bg-[#999] cursor-not-allowed" : "bg-[#6667DD] hover:bg-[#5152b8] cursor-pointer"} text-white`}>
                            {isAddingPayment ? "Adding..." : "Add Payment"}
                        </button>
                    </div>
                </div>
            )}

            {/* Image Preview Modal */}
            {selectedImage && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-xs p-4" onClick={() => setSelectedImage(null)}>
                    <img src={selectedImage} alt="Full View" className="max-w-full sm:max-w-[90%] max-h-[90%] rounded-lg shadow-lg bg-white/20" />
                </div>
            )}

            {/* Delete Modal */}
            {isDeleteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm p-4">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-4 sm:p-6 text-center relative animate-scaleUp border border-gray-300">
                        <X size={20} className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300" onClick={() => setIsDeleteModalOpen(false)} />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">Do you really want to delete this payment? This action cannot be undone.</p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3">
                            <button onClick={() => setIsDeleteModalOpen(false)} className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 cursor-pointer outline-none text-sm text-gray-700 p-regular">Cancel</button>
                            <button onClick={() => deletePaymentMutate(paymentToDelete)} disabled={isDeleting} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 cursor-pointer outline-none text-sm p-regular">
                                {isDeleting ? "Deleting..." : "Delete"}
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

// Helper components
const statusColors = { Paid: "#A0EDBC", "Request": "#F7CE7C", Pending: "#83C8F2" };
const selectedColors = { Paid: "#6fd49f", "Request": "#e6b23c", Pending: "#4ea3d9" };

const StatusBadge = ({ status }) => (
    <span className="px-3 py-1 rounded-full text-sm p-medium" style={{ backgroundColor: statusColors[status] }}>{status}</span>
);

const StatusButton = ({ currentStatus, onSelectStatus, statusName }) => {
    const isSelected = currentStatus === statusName;
    return (
        <button onClick={() => onSelectStatus(statusName)} className={`flex-1 cursor-pointer py-2 rounded-lg border-2 p-medium transition-all duration-300`} style={{ backgroundColor: isSelected ? selectedColors[statusName] : statusColors[statusName], color: isSelected ? "#fff" : "#000", borderColor: statusColors[statusName] }}>
            {statusName}
        </button>
    );
};

export default RecipientsData;


--- END OF FILE: src\components\RecipientsData.jsx ---

================================================================================


--- START OF FILE: src\components\Register.jsx ---

import { useState, useEffect } from 'react';
import { Link, useNavigate, useSearchParams } from 'react-router-dom';
import { toast } from 'sonner';
import { useAppContext } from '../../context/AppContext';
import { EyeOff, Eye } from 'lucide-react';
import { Formik, Form, Field } from 'formik';

const Register = () => {
    const { setUser } = useAppContext();
    const navigate = useNavigate();
    const [searchParams] = useSearchParams();

    const [loading, setLoading] = useState(false);
    const [showPassword, setShowPassword] = useState(false);

    const API_URL = import.meta.env.VITE_API_URL;

    const initialValues = {
        file: null,
        name: '',
        email: '',
        password: '',
        inviteToken: '',
    };

    useEffect(() => {
        const tokenFromUrl = searchParams.get('token');
        if (tokenFromUrl) {
            initialValues.inviteToken = tokenFromUrl;
        }
    }, [searchParams]);

    const handleSubmit = async (values) => {
        setLoading(true);
        try {
            const form = new FormData();
            if (values.file) form.append("file", values.file);
            form.append("name", values.name);
            form.append("email", values.email);
            form.append("password", values.password);
            if (values.inviteToken) form.append("token", values.inviteToken);

            const res = await fetch(`${API_URL}/api/register`, {
                method: "POST",
                body: form,
                credentials: 'include',
            });

            const data = await res.json();

            if (!res.ok) {
                toast.error(data.message || "Something went wrong!");
            } else {
                toast.success(data.message || "Registered successfully!");
                setUser(data.user);
                localStorage.setItem("user", JSON.stringify(data.user));
                localStorage.setItem("token", data.token);
                navigate("/");
            }
        } catch (error) {
            toast.error(error.message || "Something went wrong!");
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="relative flex items-center justify-center min-h-screen px-4 sm:px-6 md:px-10 overflow-hidden">
            {/* Floating Gradient Circles */}
            <div className="absolute top-10 left-5 sm:left-10 w-16 sm:w-20 h-16 sm:h-20 rounded-full bg-gradient-to-r from-[#6667DD] to-[#FFCE56] opacity-30 animate-bounce-slow"></div>
            <div className="absolute top-1/4 right-10 sm:right-20 w-20 sm:w-28 h-20 sm:h-28 rounded-full bg-gradient-to-r from-[#FFCE56] to-[#36A2EB] opacity-25 animate-bounce-medium"></div>
            <div className="absolute bottom-32 left-1/4 sm:left-1/3 w-16 sm:w-24 h-16 sm:h-24 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#6667DD] opacity-20 animate-bounce-fast"></div>
            <div className="absolute bottom-10 right-1/4 w-24 sm:w-32 h-24 sm:h-32 rounded-full bg-gradient-to-r from-[#FF6384] to-[#6667DD] opacity-15 animate-bounce-slower"></div>
            <div className="absolute top-1/2 left-10 sm:left-30 w-12 sm:w-16 h-12 sm:h-16 rounded-full bg-gradient-to-r from-[#36A2EB] to-[#FFCE56] opacity-20 animate-bounce-medium"></div>
            <div className="absolute bottom-0 right-1/2 sm:right-3/4 w-16 sm:w-20 h-16 sm:h-20 rounded-full bg-gradient-to-r from-[#FF6384] to-[#36A2EB] opacity-25 animate-bounce-slow"></div>

            {/* Register Box */}
            <div className="w-full max-w-md sm:max-w-xl md:max-w-4xl bg-[#F6F9FC] p-4 sm:p-8 md:p-10 my-4 sm:my-0 rounded-xl shadow-md relative z-10">
                <h1 className="text-[#6667DD] text-2xl sm:text-3xl p-bold mb-6 sm:mb-8 text-center">
                    Register into FinSync
                </h1>

                <Formik
                    initialValues={initialValues}
                    validate={values => {
                        const errors = {};
                        if (!values.name) errors.name = "Name is required";
                        if (!values.email) errors.email = "Email is required";
                        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(values.email))
                            errors.email = "Invalid email address";
                        if (!values.password) errors.password = "Password is required";
                        return errors;
                    }}
                    onSubmit={handleSubmit}
                >
                    {({ values, setFieldValue, handleChange, errors, touched }) => (
                        <Form className="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
                            <div className="flex flex-col">
                                <label className="text-gray-700 p-medium mb-1">
                                    Profile Picture <span className="text-[#6667DD]">(Optional)</span>
                                </label>
                                <input
                                    type="file"
                                    name="file"
                                    onChange={e => setFieldValue("file", e.currentTarget.files[0])}
                                    disabled={loading}
                                    className="w-full px-3 py-2 border border-[#6667DD] rounded-lg outline-none p-regular text-sm sm:text-base"
                                />
                            </div>

                            <div className="flex flex-col">
                                <label className="text-gray-700 p-medium mb-1">Name</label>
                                <Field
                                    type="text"
                                    name="name"
                                    value={values.name}
                                    onChange={handleChange}
                                    placeholder="Enter your full name"
                                    disabled={loading}
                                    className={`w-full px-3 py-2 border rounded-lg outline-none p-regular text-sm sm:text-base ${errors.name && touched.name ? 'border-red-500' : 'border-[#6667DD]'}`}
                                />
                                {errors.name && touched.name && <div className="text-red-500 text-sm mt-1 transition-opacity duration-300">{errors.name}</div>}
                            </div>

                            <div className="flex flex-col">
                                <label className="text-gray-700 p-medium mb-1">Email</label>
                                <Field
                                    type="email"
                                    name="email"
                                    value={values.email}
                                    onChange={handleChange}
                                    placeholder="Enter your email"
                                    disabled={loading}
                                    className={`w-full px-3 py-2 border rounded-lg outline-none p-regular text-sm sm:text-base ${errors.email && touched.email ? 'border-red-500' : 'border-[#6667DD]'}`}
                                />
                                {errors.email && touched.email && <div className="text-red-500 text-sm mt-1 transition-opacity duration-300">{errors.email}</div>}
                            </div>

                            <div className="flex flex-col relative">
                                <label className="text-gray-700 p-medium mb-1">Password</label>
                                <Field
                                    type={showPassword ? "text" : "password"}
                                    name="password"
                                    value={values.password}
                                    onChange={handleChange}
                                    placeholder="Enter your password"
                                    disabled={loading}
                                    className={`w-full px-3 py-2 border rounded-lg outline-none p-regular text-sm sm:text-base pr-10 ${errors.password && touched.password ? 'border-red-500' : 'border-[#6667DD]'}`}
                                />
                                {errors.password && touched.password && <div className="text-red-500 text-sm mt-1 transition-opacity duration-300">{errors.password}</div>}
                                <div
                                    className="absolute right-3 top-9.5 cursor-pointer text-gray-600 hover:text-[#6667DD] transition-all duration-300"
                                    onClick={() => setShowPassword(!showPassword)}
                                >
                                    {showPassword ? <Eye size={18} /> : <EyeOff size={18} />}
                                </div>
                            </div>

                            <div className="w-full md:col-span-2">
                                <button
                                    type="submit"
                                    disabled={loading}
                                    className={`w-full bg-[#6667DD] text-white py-2.5 sm:py-3 rounded-lg transition duration-300 mt-2 p-regular text-sm sm:text-base
                                        ${loading ? "opacity-70 cursor-not-allowed" : "hover:bg-[#5556cc] cursor-pointer"}`}
                                >
                                    {loading ? "Creating..." : "Create Account"}
                                </button>
                            </div>

                            <div className="md:col-span-2 text-center mt-3">
                                <p className="text-gray-600 p-regular text-sm sm:text-base">
                                    Already have an account?{' '}
                                    <Link to="/login" className="text-[#6667DD] p-medium hover:underline">
                                        Login Now
                                    </Link>
                                </p>
                            </div>
                        </Form>
                    )}
                </Formik>
            </div>

            {/* Animation Styles */}
            <style>{`
        @keyframes bounce-slow { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-20px);} }
        @keyframes bounce-medium { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-30px);} }
        @keyframes bounce-fast { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-40px);} }
        @keyframes bounce-slower { 0%,100%{transform:translateY(0);} 50%{transform:translateY(-15px);} }

        .animate-bounce-slow { animation: bounce-slow 6s infinite ease-in-out; }
        .animate-bounce-medium { animation: bounce-medium 5s infinite ease-in-out; }
        .animate-bounce-fast { animation: bounce-fast 4s infinite ease-in-out; }
        .animate-bounce-slower { animation: bounce-slower 7s infinite ease-in-out; }
      `}</style>
        </div>
    );
};

export default Register;


--- END OF FILE: src\components\Register.jsx ---

================================================================================


--- START OF FILE: src\components\Reminder.jsx ---

import { toast } from "sonner";
import { useMutation } from "@tanstack/react-query";
import { sendReminder } from "../hooks/reminder";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";

const Reminder = () => {
    const { mutate, isPending } = useMutation({
        mutationFn: sendReminder,
        onSuccess: (data) => {
            toast.success(data.message || "Reminder sent successfully!");
        },
        onError: (err) => {
            const errorMessage = err.response?.data?.message || "Error occurred while sending the reminder.";
            toast.error(errorMessage);
        }
    });

    const validationSchema = Yup.object({
        subject: Yup.string().required("Subject is required!"),
        email: Yup.string().email("Invalid email!").required("Email is required!"),
        amount: Yup.number().typeError("Amount must be a number").required("Amount is required!").positive("Amount must be positive!"),
        currency: Yup.string().required("Currency is required!"),
        message: Yup.string().required("Message cannot be empty!"),
    });

    return (
        <div className="bg-[#F6F9FC] p-4 sm:p-6 md:p-8 h-fit shadow-sm max-w-md sm:max-w-lg md:max-w-xl lg:max-w-4xl mx-auto">
            {/* Heading */}
            <h2 className="text-xl sm:text-2xl md:text-2xl lg:text-3xl p-semibold text-[#6667DD] mb-6 text-center">
                Send Payment Reminder
            </h2>

            <Formik initialValues={{ subject: "", email: "", amount: "", currency: "", message: "" }} validationSchema={validationSchema} onSubmit={(values, { resetForm }) => {
                mutate(values, { onSuccess: () => resetForm() });
            }}>
                {({ errors, touched, handleChange, handleBlur, values }) => (
                    <Form className="space-y-3 sm:space-y-4">
                        {/* Subject + Email */}
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                            <div className="flex flex-col">
                                <Field
                                    type="text"
                                    name="subject"
                                    placeholder="Reminder Title"
                                    disabled={isPending}
                                    className={`w-full text-sm sm:text-base p-regular px-3 sm:px-4 py-2 sm:py-3 rounded-lg border-2 outline-none transition-colors duration-200 ${isPending
                                        ? "bg-[#ECECFB] border-[#b6b6e0]"
                                        : errors.subject && touched.subject
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                        }`}
                                />
                                <ErrorMessage name="subject" component="div" className="text-red-500 text-sm mt-1 p-regular" />
                            </div>
                            <div className="flex flex-col">
                                <Field
                                    type="email"
                                    name="email"
                                    placeholder="Recipient Email"
                                    disabled={isPending}
                                    className={`w-full text-sm sm:text-base p-regular px-3 sm:px-4 py-2 sm:py-3 rounded-lg border-2 outline-none transition-colors duration-200 ${isPending
                                        ? "bg-[#ECECFB] border-[#b6b6e0]"
                                        : errors.email && touched.email
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                        }`}
                                />
                                <ErrorMessage name="email" component="div" className="text-red-500 text-sm mt-1 p-regular" />
                            </div>
                        </div>

                        {/* Amount + Currency */}
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                            <div className="flex flex-col">
                                <select
                                    name="currency"
                                    value={values.currency}
                                    onChange={handleChange}
                                    onBlur={handleBlur}
                                    disabled={isPending}
                                    className={`w-full text-sm sm:text-base px-3 sm:px-4 py-2 sm:py-3 rounded-lg border-2 outline-none transition-colors duration-200 ${isPending
                                        ? "bg-[#ECECFB] border-[#b6b6e0]"
                                        : errors.currency && touched.currency
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                        }`}
                                >
                                    <option value="">Select Currency</option>
                                    <option value="USD">USD ($)</option>
                                    <option value="EUR">EUR (€)</option>
                                    <option value="PKR">PKR (₨)</option>
                                    <option value="INR">INR (₹)</option>
                                </select>
                                <ErrorMessage
                                    name="currency"
                                    component="div"
                                    className="text-red-500 text-sm mt-1"
                                />
                            </div>
                            <div className="flex flex-col">
                                <Field
                                    type="number"
                                    name="amount"
                                    placeholder="Amount"
                                    disabled={isPending}
                                    className={`w-full text-sm sm:text-base p-regular px-3 sm:px-4 py-2 sm:py-3 rounded-lg border-2 outline-none transition-colors duration-200 ${isPending
                                        ? "bg-[#ECECFB] border-[#b6b6e0]"
                                        : errors.amount && touched.amount
                                            ? "border-red-500"
                                            : "border-[#6667DD]"
                                        }`}
                                />
                                <ErrorMessage name="amount" component="div" className="text-red-500 text-sm mt-1 p-regular" />
                            </div>
                        </div>

                        {/* Message Box */}
                        <div className="flex flex-col">
                            <Field
                                as="textarea"
                                name="message"
                                placeholder="Write a message..."
                                rows={4}
                                disabled={isPending}
                                className={`w-full text-sm sm:text-base p-regular px-3 sm:px-4 py-2 sm:py-3 rounded-lg border-2 outline-none resize-none transition-colors duration-200 ${isPending
                                    ? "bg-[#ECECFB] border-[#b6b6e0]"
                                    : errors.message && touched.message
                                        ? "border-red-500"
                                        : "border-[#6667DD]"
                                    }`}
                            />
                            <ErrorMessage name="message" component="div" className="text-red-500 text-sm mt-1 p-regular" />
                        </div>

                        {/* Submit Button */}
                        <button
                            type="submit"
                            disabled={isPending}
                            className={`w-full ${isPending ? "bg-gray-400 hover:cursor-not-allowed" : "bg-[#6667DD] hover:bg-[#5253b8]"
                                } text-white py-3 sm:py-3.5 rounded-lg shadow transition-all duration-300 cursor-pointer p-regular text-sm sm:text-base`}
                        >
                            {isPending ? "Reminding..." : "Send Reminder"}
                        </button>
                    </Form>
                )}
            </Formik>
        </div>
    );
};

export default Reminder;


--- END OF FILE: src\components\Reminder.jsx ---

================================================================================


--- START OF FILE: src\components\Sidebar.jsx ---

import React, { useState, useEffect } from "react";
import { Link, useLocation } from "react-router-dom";
import {
  LayoutDashboard,
  CreditCard,
  History,
  Layers2,
  RefreshCcw,
  UsersRound,
  PhoneForwarded,
  UserCheck2,
  Handshake,
  Menu,
  ListMinus,
  X
} from "lucide-react";

const Sidebar = () => {
  const location = useLocation();
  const [isOpen, setIsOpen] = useState(false);

  const menuItems = [
    { icon: <LayoutDashboard size={23} />, label: "Dashboard", path: `/` },
    { icon: <CreditCard size={23} />, label: "Schedules", path: `/payments` },
    { icon: <Layers2 size={23} />, label: "Transactions", path: `/transactions` },
    { icon: <Handshake size={23} />, label: "Recipients", path: `/recipients` },
    { icon: <RefreshCcw size={23} />, label: "Exchange", path: `/exchange` },
    { icon: <History size={23} />, label: "Reminder", path: `/reminder` },
    { icon: <PhoneForwarded size={22} />, label: "Contact", path: `/contact` },
    { icon: <UserCheck2 size={23} />, label: "Users", path: `/all-users` },
    { icon: <UsersRound size={23} />, label: "My Profile", path: `/profile` },
  ];

  // Disable body scroll when sidebar is open
  useEffect(() => {
    document.body.style.overflow = isOpen ? "hidden" : "";
  }, [isOpen]);

  return (
    <>
      {/* Chat-bubble Menu Icon */}
      <div className="lg:hidden fixed top-5 left-5 z-50">
        <button
          onClick={() => setIsOpen(true)}
          className="flex items-center justify-center w-12 h-10 bg-gradient-to-r from-[#6667DD] to-[black] text-white shadow-xl rounded-full hover:scale-110 transition-transform duration-300 relative cursor-pointer"
        >
          <ListMinus size={20} />
          {/* Bubble pointer effect */}
          <span className="absolute -bottom-4 -left-2 w-4 h-4 bg-gradient-to-r from-[#6667DD] to-[black] rotate-45 rounded-sm shadow-md"></span>
        </button>
      </div>

      {/* Overlay */}
      {isOpen && (
        <div
          className="fixed inset-0 bg-black/50 bg-opacity-30 backdrop-blur-sm z-40"
          onClick={() => setIsOpen(false)}
        ></div>
      )}

      {/* Sidebar */}
      <div
        className={`
          fixed top-0 left-0 h-screen bg-white shadow-lg z-50 p-4 flex flex-col gap-2
          w-[80%] max-w-xs
          overflow-y-auto
          transform transition-transform duration-300 ease-in-out
          ${isOpen ? "translate-x-0" : "-translate-x-full"}
          lg:translate-x-0 lg:static lg:w-[20%] lg:max-w-none
        `}
      >
        {/* Header with heading + close icon */}
        <div className="flex items-center justify-between mb-6 lg:mb-4">
          <h2 className="text-xl p-bold text-[#6667DD]">
            FinSync
            <span className="text-xs sm:text-sm p-medium"> - Track Finances</span>
          </h2>
          <div className="lg:hidden">
            <button
              onClick={() => setIsOpen(false)}
              className="p-2 rounded-full bg-gray-200 hover:bg-gray-300 transition-colors duration-300 cursor-pointer"
            >
              <X size={18} />
            </button>
          </div>
        </div>

        {/* Menu Items */}
        {menuItems.map((item, index) => {
          const isActive = location.pathname === item.path;
          return (
            <Link
              to={item.path}
              key={index}
              onClick={() => setIsOpen(false)}
              className={`
                flex items-center gap-3 px-4 py-3 rounded-lg cursor-pointer transition-all duration-300
                ${isActive
                  ? "bg-purple-100 text-[#6667DD] font-medium"
                  : "text-gray-600 hover:bg-purple-100 hover:text-[#6667DD]"
                }
              `}
            >
              {item.icon}
              <span className="p-medium">{item.label}</span>
            </Link>
          );
        })}
      </div>
    </>
  );
};

export default Sidebar;


--- END OF FILE: src\components\Sidebar.jsx ---

================================================================================


--- START OF FILE: src\components\Transactions.jsx ---

import { useState } from "react";
import { Plus, X, Upload, Trash2 } from "lucide-react";
import DataTable from "react-data-table-component";
import { toast } from "sonner";
import { useQuery, useQueryClient, useMutation } from "@tanstack/react-query";
import {
  fetchTransactions,
  addTransactions,
  deleteTransaction,
  deleteAllTransactions,
} from "../hooks/transactions";

const currencySymbols = { USD: "$", EUR: "€", PKR: "₨", INR: "₹" };
const categoryColors = {
  Food: "bg-red-200",
  Rent: "bg-yellow-200",
  Shopping: "bg-blue-200",
  Salary: "bg-green-200",
  Other: "bg-gray-200",
};
const categoryButtonColors = {
  Food: "bg-red-500 text-white",
  Rent: "bg-yellow-500 text-white",
  Shopping: "bg-blue-500 text-white",
  Salary: "bg-green-500 text-white",
  Other: "bg-gray-500 text-white",
};

const Transactions = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [formData, setFormData] = useState({
    title: "",
    amount: "",
    category: "",
    currency: "USD",
    type: "income",
    image: null,
  });
  const [selectedCategory, setSelectedCategory] = useState("All");
  const [selectedImage, setSelectedImage] = useState(null);

  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
  const [transactionToDelete, setTransactionToDelete] = useState(null);

  const [isDeleteAllModalOpen, setIsDeleteAllModalOpen] = useState(false);

  const queryClient = useQueryClient();

  const { data: transactions = [], isLoading: isLoadingTransactions } = useQuery({
    queryKey: ["transactions"],
    queryFn: fetchTransactions,
  });

  const { mutate: addTransactionMutate, isPending: isAdding } = useMutation({
    mutationFn: addTransactions,
    onSuccess: () => {
      toast.success("Transaction added successfully!");
      queryClient.invalidateQueries({ queryKey: ["transactions"] });
      setIsModalOpen(false);
      setFormData({
        title: "",
        amount: "",
        category: "",
        currency: "USD",
        type: "income",
        image: null,
      });
    },
    onError: (err) => toast.error(err.response?.data?.message || "Failed to add transaction"),
  });

  const { mutate: deleteTransactionMutate } = useMutation({
    mutationFn: deleteTransaction,
    onSuccess: () => {
      toast.success("Transaction deleted.");
      queryClient.invalidateQueries({ queryKey: ["transactions"] });
    },
    onError: (err) => toast.error(err.response?.data?.message || "Failed to delete transaction"),
  });

  const { mutate: deleteAllMutate } = useMutation({
    mutationFn: deleteAllTransactions,
    onSuccess: () => {
      toast.success("All transactions have been deleted.");
      queryClient.invalidateQueries({ queryKey: ["transactions"] });
    },
    onError: (err) => toast.error(err.response?.data?.message || "Failed to delete all transactions"),
  });

  const handleChange = (e) => {
    if (e.target.name === "image") setFormData({ ...formData, image: e.target.files[0] });
    else setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleAddTransaction = (e) => {
    e.preventDefault();
    if (!formData.title || !formData.amount || !formData.category) {
      return toast.error("Title, amount and category are required.");
    }
    const body = new FormData();
    Object.keys(formData).forEach((key) => {
      if (formData[key]) body.append(key, formData[key]);
    });
    addTransactionMutate(body);
  };

  const filteredTransactions =
    selectedCategory === "All"
      ? transactions
      : transactions.filter((t) => t.category === selectedCategory);

  const columns = [
    { name: "Title", selector: (row) => row.title, sortable: true, cell: (row) => <span className="p-regular text-gray-800">{row.title}</span> },
    { name: "Category", selector: (row) => row.category, sortable: true, cell: (row) => <span className={`p-regular px-2 py-1 rounded ${categoryColors[row.category] || "bg-gray-200"}`}>{row.category || "Other"}</span> },
    { name: "Type", selector: (row) => row.type, sortable: true, cell: (row) => <span className={`p-regular ${row.type === "income" ? "text-green-500" : "text-red-500"}`}>{row.type.charAt(0).toUpperCase() + row.type.slice(1)}</span> },
    { name: "Amount", selector: (row) => row.amount, sortable: true, cell: (row) => <span className="p-regular text-gray-900">{row.type === "income" ? "+" : "-"} {currencySymbols[row.currency]} {row.amount} ({row.currency})</span> },
    { name: "Image", selector: (row) => row.imageUrl, cell: (row) => row.imageUrl ? <img loading="lazy" src={row.imageUrl} alt="txn" onClick={() => setSelectedImage(row.imageUrl)} className="w-16 h-16 rounded-lg object-cover cursor-pointer" /> : <span className="p-regular text-gray-500">No Image</span> },
    {
      name: "Action", cell: (row) => {
        return (
          <button
            onClick={() => {
              setTransactionToDelete(row._id);
              setIsDeleteModalOpen(true);
            }}
            className="transition-colors duration-300"
          >
            <Trash2
              size={18}
              className="text-red-500 hover:text-red-700 cursor-pointer"
            />
          </button>
        );
      },
    },
  ];

  const customStyles = { headCells: { style: { fontSize: "14px", fontWeight: "500", fontFamily: "Poppins", color: "#5759C7", textTransform: "uppercase" } } };
  const categories = ["All", "Food", "Rent", "Shopping", "Salary", "Other"];

  return (
    <div className="bg-[#F6F9FC] p-6 relative max-w-7xl mx-auto min-h-[70vh] p-regular">
      {/* Header */}
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl p-semibold text-[#6667DD]">My Transactions</h2>
        <button onClick={() => setIsModalOpen(true)} className="flex items-center gap-2 bg-[#6667DD] hover:bg-[#5557c4] text-white px-4 py-3 rounded-full shadow transition-all duration-300 cursor-pointer hover:scale-95 p-regular">
          <Plus size={18} /> Add Transaction
        </button>
      </div>

      {/* Category Filter Buttons */}
      <div className="flex flex-wrap gap-2 mb-4">
        {categories.map((cat) => (
          <button key={cat} onClick={() => setSelectedCategory(cat)} className={`px-4 py-1 rounded-full p-regular cursor-pointer transition-all duration-300 ${selectedCategory === cat ? categoryButtonColors[cat] || "bg-[#6667DD] text-white" : "bg-gray-200 text-gray-700 hover:bg-gray-300"}`}>{cat}</button>
        ))}
      </div>

      {/* Delete All */}
      {transactions.length > 0 && (
        <div className="mb-4 text-right">
          <button
            onClick={() => setIsDeleteAllModalOpen(true)}
            className={`bg-red-500 hover:bg-red-600 cursor-pointer text-white px-4 py-1 rounded transition-all duration-300 p-regular`}
          >
            Delete All
          </button>
        </div>
      )}

      {/* Data Table */}
      {isLoadingTransactions ? (
        <p className="text-[#6667DD] text-center mt-20 text-lg p-regular animate-pulse">Loading Transactions...</p>
      ) : transactions.length > 0 ? (
        <DataTable columns={columns} data={filteredTransactions} pagination highlightOnHover striped customStyles={customStyles} />
      ) : (
        <p className="text-gray-500 text-center mt-20 text-lg p-regular">No Current Transactions</p>
      )}

      {/* Add Transaction Modal */}
      {isModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
          <div className="bg-[#F6F9FC] rounded-2xl shadow-xl w-full max-w-2xl p-6 relative animate-scaleUp border-2 border-[#6667DD]">
            <button onClick={() => setIsModalOpen(false)} className="absolute top-3 right-3 text-gray-500 hover:text-gray-800 cursor-pointer transition-all duration-300"><X size={22} /></button>
            <h2 className="text-xl p-semibold text-gray-800 mb-6">Add New Transaction</h2>
            <form onSubmit={handleAddTransaction} className="space-y-4">
              {/* Title & Category */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                <input
                  type="text"
                  name="title"
                  placeholder="Transaction Title"
                  required
                  value={formData.title}
                  onChange={handleChange}
                  className="w-full rounded-lg px-3 py-2 outline-none border-2 border-[#6667DD] p-regular"
                />
                <select
                  name="category"
                  required
                  value={formData.category}
                  onChange={handleChange}
                  className="w-full rounded-lg px-3 py-2 outline-none border-2 border-[#6667DD] p-regular cursor-pointer"
                >
                  <option value="">Select Category</option>
                  <option value="Food">Food</option>
                  <option value="Rent">Rent</option>
                  <option value="Shopping">Shopping</option>
                  <option value="Salary">Salary</option>
                  <option value="Other">Other</option>
                </select>
              </div>

              {/* Currency & Amount */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3 p-regular">
                <select
                  name="currency"
                  value={formData.currency}
                  onChange={handleChange}
                  className="w-full rounded-lg px-3 py-2 outline-none border-2 border-[#6667DD] cursor-pointer"
                >
                  <option value="USD">USD ($)</option>
                  <option value="EUR">EUR (€)</option>
                  <option value="PKR">PKR (₨)</option>
                  <option value="INR">INR (₹)</option>
                </select>
                <input
                  type="number"
                  name="amount"
                  placeholder="Amount"
                  required
                  value={formData.amount}
                  onChange={handleChange}
                  className="w-full rounded-lg px-3 py-2 outline-none border-2 border-[#6667DD]"
                />
              </div>

              {/* Type: Income or Expense */}
              <div className="flex gap-4">
                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, type: "income" })}
                  className={`flex-1 py-2 rounded-lg border-2 transition-all duration-300 cursor-pointer p-regular ${formData.type === "income" ? "bg-green-500 text-white border-green-500" : "bg-white text-gray-700 border-gray-300"
                    }`}
                >
                  Income
                </button>
                <button
                  type="button"
                  onClick={() => setFormData({ ...formData, type: "expense" })}
                  className={`flex-1 py-2 rounded-lg border-2 transition-all duration-300 cursor-pointer p-regular ${formData.type === "expense" ? "bg-red-500 text-white border-red-500" : "bg-white text-gray-700 border-gray-300"
                    }`}
                >
                  Expense
                </button>
              </div>

              {/* Image Upload */}
              <label className="flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-[#6667DD] rounded-lg cursor-pointer hover:bg-gray-100 transition">
                <Upload size={24} className="mb-2 text-gray-600" />
                <span className="text-gray-600 p-regular">{formData.image ? formData.image.name : "Upload Image (optional)"}</span>
                <input type="file" name="image" accept="image/*" className="hidden" onChange={handleChange} />
              </label>

              {/* Submit Button */}
              <button
                type="submit"
                disabled={isAdding}
                className={`w-full py-3 rounded-lg shadow transition-all duration-300 p-regular text-white ${isAdding ? "bg-gray-400 cursor-not-allowed" : "bg-[#6667DD] hover:bg-[#5253b8] cursor-pointer"
                  }`}
              >
                {isAdding ? "Adding..." : "Add Transaction"}
              </button>
            </form>

          </div>
        </div>
      )}

      {/* Delete Single Transaction Modal */}
      {isDeleteModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
          <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
            <X
              size={20}
              className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
              onClick={() => setIsDeleteModalOpen(false)}
            />
            <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
              <Trash2 size={20} className="text-red-500" />
            </div>
            <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
            <p className="text-gray-600 mb-6 p-regular text-sm">Do you really want to delete this transaction? This action cannot be undone.</p>
            <div className="flex justify-center gap-3">
              <button onClick={() => setIsDeleteModalOpen(false)} className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 outline-none cursor-pointer text-sm text-gray-700 p-regular">Cancel</button>
              <button onClick={() => { deleteTransactionMutate(transactionToDelete); setIsDeleteModalOpen(false); }} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all outline-none duration-300 cursor-pointer text-sm p-regular">Delete</button>
            </div>
          </div>
        </div>
      )}

      {/* Delete All Modal */}
      {isDeleteAllModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
          <div className="bg-white rounded-2xl shadow-xl w-full max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
            <X
              size={20}
              className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
              onClick={() => setIsDeleteAllModalOpen(false)}
            />
            <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
              <Trash2 size={20} className="text-red-500" />
            </div>
            <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
            <p className="text-gray-600 mb-6 p-regular text-sm">Do you really want to delete <strong className="text-[#6667DD]">all transactions</strong>? This action cannot be undone.</p>
            <div className="flex justify-center gap-3">
              <button onClick={() => setIsDeleteAllModalOpen(false)} className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 outline-none cursor-pointer text-sm text-gray-700 p-regular">Cancel</button>
              <button onClick={() => { deleteAllMutate(); setIsDeleteAllModalOpen(false); }} className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 outline-none cursor-pointer text-sm p-regular">Delete All</button>
            </div>
          </div>
        </div>
      )}

      {/* Image Preview Modal */}
      {selectedImage && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/70 backdrop-blur-xs" onClick={() => setSelectedImage(null)}>
          <img src={selectedImage} alt="Full View" className="max-w-[90%] max-h-[90%] rounded-lg shadow-lg bg-white/20" />
        </div>
      )}
    </div>
  );
};

export default Transactions;


--- END OF FILE: src\components\Transactions.jsx ---

================================================================================


--- START OF FILE: src\components\Users.jsx ---

import { Trash2, UserPlus2, X } from "lucide-react";
import { toast } from "sonner";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { fetchUsers, deleteUsers } from "../hooks/getUsers";
import { useState } from "react";
import AddUsers from "./AddUsers";

const Users = () => {
    const queryClient = useQueryClient();
    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);
    const [isInviteModalOpen, setIsInviteModalOpen] = useState(false);
    const [userToDelete, setUserToDelete] = useState(null);

    const { data: usersData, isLoading, isError, error } = useQuery({
        queryKey: ["users"],
        queryFn: fetchUsers,
    });

    const { mutate: deleteUserMutate, isPending: isDeletingUser } = useMutation({
        mutationFn: deleteUsers,
        onSuccess: (data) => {
            toast.success(data.message || "User Deleted Successfully");
            queryClient.invalidateQueries({ queryKey: ["users"] });
        },
        onError: (err) => {
            const errorMessage =
                err.response?.data?.message || err.message || "Failed To Delete User";
            toast.error(errorMessage);
        },
    });

    if (isLoading) {
        return (
            <div className="p-4 sm:p-6 md:p-8 w-full">
                <div className="animate-pulse space-y-6">
                    {/* Header */}
                    <div className="h-8 bg-[#6667DD]/30 rounded w-1/3 mx-auto sm:mx-0 sm:w-1/4"></div>

                    {/* Invite button */}
                    <div className="h-10 bg-[#6667DD]/30 rounded w-1/2 mx-auto sm:w-40 sm:hidden block"></div>

                    {/* User cards skeleton */}
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 mt-10">
                        {[1, 2].map((i) => (
                            <div
                                key={i}
                                className="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6 px-2 py-6 bg-[#F6F9FC] shadow rounded-lg w-full"
                            >
                                <div className="flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-5 text-center sm:text-left">
                                    <div className="w-16 h-16 rounded-full bg-gray-300"></div>
                                    <div className="space-y-2 sm:space-y-1">
                                        <div className="h-4 w-32 bg-gray-300 rounded"></div>
                                        <div className="h-3 w-48 bg-gray-300 rounded"></div>
                                        <div className="h-3 w-24 bg-gray-300 rounded"></div>
                                    </div>
                                </div>
                                <div className="h-8 w-24 bg-red-300 rounded mt-4 sm:mt-0"></div>
                            </div>
                        ))}
                    </div>

                    {/* Invited By skeleton */}
                    <div className="mt-10">
                        <div className="h-8 bg-[#6667DD]/30 rounded w-1/4 mb-4"></div>
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                            <div className="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6 px-2 py-6 bg-[#F6F9FC] shadow rounded-lg w-full">
                                <div className="flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-5 text-center sm:text-left">
                                    <div className="w-16 h-16 rounded-full bg-gray-300"></div>
                                    <div className="space-y-2 sm:space-y-1">
                                        <div className="h-4 w-32 bg-gray-300 rounded"></div>
                                        <div className="h-3 w-48 bg-gray-300 rounded"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    if (isError) {
        const errorMessage = error.response?.data?.message || error.message;
        return (
            <div className="p-6 text-center text-red-600 p-regular">
                Error: {errorMessage}
            </div>
        );
    }

    const invitedUsers = usersData?.invitedUsers || [];
    const invitedBy = usersData?.invitedBy || null;

    return (
        <div className="p-4 sm:p-6 md:p-8 relative w-full">
            {/* SECTION 1: Users You Have Invited */}
            <div>
                <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 sm:gap-6 mb-6">
                    <h2 className="text-2xl p-bold text-[#6667DD]">Invited Users</h2>
                    <button
                        onClick={() => setIsInviteModalOpen(true)}
                        className="flex items-center justify-center gap-2 p-regular bg-[#6667DD] px-4 sm:px-5 py-2.5 sm:py-3 cursor-pointer text-white hover:bg-[#4b4dc9] transition-all duration-300 rounded-full w-full sm:w-auto text-sm sm:text-base"
                    >
                        <UserPlus2 size={18} />
                        Invite Users
                    </button>
                </div>

                {invitedUsers.length > 0 ? (
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                        {invitedUsers.map((user) => (
                            <div
                                key={user._id}
                                className="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6 px-2 py-6 bg-[#F6F9FC] shadow rounded-lg w-full"
                            >
                                <div className="flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-5 text-center sm:text-left">
                                    <img
                                        src={user.profileImage || "https://images.unsplash.com/photo-1615109398623-88346a601842?ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8bWFufGVufDB8fDB8fHww&auto=format&fit=crop&q=60&w=500"}
                                        alt={user.name}
                                        className="w-16 h-16 rounded-full object-cover"
                                    />
                                    <div>
                                        <h3 className="text-lg p-semibold">{user.name}</h3>
                                        <p className="text-gray-500 p-regular break-all">{user.email}</p>
                                        <p
                                            className={`text-sm p-medium ${user.status === "accepted"
                                                ? "text-green-600"
                                                : "text-orange-500"
                                                }`}
                                        >
                                            Status: {user.status}
                                        </p>
                                    </div>
                                </div>
                                <button
                                    onClick={() => {
                                        setUserToDelete(user._id);
                                        setIsDeleteModalOpen(true);
                                    }}
                                    disabled={isDeletingUser}
                                    className={`p-medium flex items-center justify-center sm:justify-start gap-2 px-3 py-2 rounded-md transition-all duration-300 text-sm sm:text-base cursor-pointer ${isDeletingUser
                                        ? "hover:cursor-not-allowed text-gray-400"
                                        : "text-red-600 hover:text-red-700 underline"
                                        }`}
                                >
                                    {isDeletingUser ? (
                                        <>
                                            <div className="w-4 h-4 border-2 border-t-transparent rounded-full animate-spin border-red-600"></div>
                                            Deleting...
                                        </>
                                    ) : (
                                        <>
                                            <Trash2 className="w-5 h-5 text-red-600" />
                                            Delete User
                                        </>
                                    )}
                                </button>
                            </div>
                        ))}
                    </div>
                ) : (
                    <div className="p-6 text-center text-[#6667DD] p-medium">
                        You have not invited other users.
                    </div>
                )}
            </div>

            {/* SECTION 2: The User Who Invited You */}
            <div className="mt-10">
                <h2 className="text-2xl p-bold mb-4 text-[#6667DD]">Invited By</h2>
                {invitedBy ? (
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                        <div
                            key={invitedBy._id}
                            className="flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6 px-2 py-6 bg-[#F6F9FC] shadow rounded-lg w-full"
                        >
                            <div className="flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-5 text-center sm:text-left">
                                <img
                                    src={
                                        invitedBy.profileImage ||
                                        "https://images.unsplash.com/photo-1615109398623-88346a601842?w=500"
                                    }
                                    alt={invitedBy.name}
                                    className="w-16 h-16 rounded-full object-cover"
                                />
                                <div>
                                    <h3 className="text-lg p-semibold">{invitedBy.name}</h3>
                                    <p className="text-gray-500 p-regular break-all">{invitedBy.email}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                ) : (
                    <div className="p-6 text-center text-[#6667DD] p-medium">
                        You were not invited by any user.
                    </div>
                )}
            </div>

            {/* 🟢 Invite Modal */}
            {isInviteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm">
                    <div className="relative bg-gradient-to-br from-[#6667DD] via-black to-black shadow-xl w-full max-w-[90%] sm:max-w-lg md:max-w-xl rounded-2xl px-4 pt-5 pb-9 animate-scaleUp">
                        <X
                            size={22}
                            className="absolute top-3 right-4 text-gray-300 hover:text-gray-400 cursor-pointer transition-all duration-300"
                            onClick={() => setIsInviteModalOpen(false)}
                        />
                        <AddUsers />
                    </div>
                </div>
            )}

            {/* Delete Confirmation Modal */}
            {isDeleteModalOpen && (
                <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm px-4 sm:px-6">
                    <div className="bg-white rounded-2xl shadow-xl w-full max-w-[90%] sm:max-w-sm p-6 text-center relative animate-scaleUp border border-gray-300">
                        <X
                            size={20}
                            className="absolute top-3 right-3 text-gray-500 hover:text-gray-700 cursor-pointer transition-all duration-300"
                            onClick={() => setIsDeleteModalOpen(false)}
                        />
                        <div className="p-3 bg-red-200 rounded-full mx-auto w-fit mb-3">
                            <Trash2 size={20} className="text-red-500" />
                        </div>
                        <h2 className="text-lg p-semibold text-gray-800 mb-2">Are you sure?</h2>
                        <p className="text-gray-600 mb-6 p-regular text-sm">
                            Do you really want to delete this user? This action cannot be undone.
                        </p>
                        <div className="flex flex-col sm:flex-row justify-center gap-3">
                            <button
                                onClick={() => setIsDeleteModalOpen(false)}
                                className="px-4 py-2 rounded-lg border border-gray-300 hover:bg-gray-100 transition-all duration-300 text-sm text-gray-700 p-regular cursor-pointer"
                            >
                                Cancel
                            </button>
                            <button
                                onClick={() => {
                                    deleteUserMutate(userToDelete);
                                    setIsDeleteModalOpen(false);
                                }}
                                className="px-4 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white transition-all duration-300 text-sm p-regular cursor-pointer"
                            >
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Users;


--- END OF FILE: src\components\Users.jsx ---

================================================================================


--- START OF FILE: src\components\currencies.js ---

const currencies = [
    {
        "code": "AED",
        "name": "UAE Dirham",
        "country": "United Arab Emirates",
        "countryCode": "AE",
        "flag": "https://flagsapi.com/AE/flat/64.png"
    },
    {
        "code": "AFN",
        "name": "Afghan Afghani",
        "country": "Afghanistan",
        "countryCode": "AF",
        "flag": "https://flagsapi.com/AF/flat/64.png"
    },
    {
        "code": "ALL",
        "name": "Albanian Lek",
        "country": "Albania",
        "countryCode": "AL",
        "flag": "https://flagsapi.com/AL/flat/64.png"
    },
    {
        "code": "AMD",
        "name": "Armenian Dram",
        "country": "Armenia",
        "countryCode": "AM",
        "flag": "https://flagsapi.com/AM/flat/64.png"
    },
    {
        "code": "ANG",
        "name": "Netherlands Antillian Guilder",
        "country": "Netherlands Antilles",
        "countryCode": "AN",
        "flag": "https://flagsapi.com/AN/flat/64.png"
    },
    {
        "code": "AOA",
        "name": "Angolan Kwanza",
        "country": "Angola",
        "countryCode": "AO",
        "flag": "https://flagsapi.com/AO/flat/64.png"
    },
    {
        "code": "ARS",
        "name": "Argentine Peso",
        "country": "Argentina",
        "countryCode": "AR",
        "flag": "https://flagsapi.com/AR/flat/64.png"
    },
    {
        "code": "AUD",
        "name": "Australian Dollar",
        "country": "Australia",
        "countryCode": "AU",
        "flag": "https://flagsapi.com/AU/flat/64.png"
    },
    {
        "code": "AWG",
        "name": "Aruban Florin",
        "country": "Aruba",
        "countryCode": "AW",
        "flag": "https://flagsapi.com/AW/flat/64.png"
    },
    {
        "code": "AZN",
        "name": "Azerbaijani Manat",
        "country": "Azerbaijan",
        "countryCode": "AZ",
        "flag": "https://flagsapi.com/AZ/flat/64.png"
    },
    {
        "code": "BAM",
        "name": "Bosnia and Herzegovina Mark",
        "country": "Bosnia and Herzegovina",
        "countryCode": "BA",
        "flag": "https://flagsapi.com/BA/flat/64.png"
    },
    {
        "code": "BBD",
        "name": "Barbados Dollar",
        "country": "Barbados",
        "countryCode": "BB",
        "flag": "https://flagsapi.com/BB/flat/64.png"
    },
    {
        "code": "BDT",
        "name": "Bangladeshi Taka",
        "country": "Bangladesh",
        "countryCode": "BD",
        "flag": "https://flagsapi.com/BD/flat/64.png"
    },
    {
        "code": "BGN",
        "name": "Bulgarian Lev",
        "country": "Bulgaria",
        "countryCode": "BG",
        "flag": "https://flagsapi.com/BG/flat/64.png"
    },
    {
        "code": "BHD",
        "name": "Bahraini Dinar",
        "country": "Bahrain",
        "countryCode": "BH",
        "flag": "https://flagsapi.com/BH/flat/64.png"
    },
    {
        "code": "BIF",
        "name": "Burundian Franc",
        "country": "Burundi",
        "countryCode": "BI",
        "flag": "https://flagsapi.com/BI/flat/64.png"
    },
    {
        "code": "BMD",
        "name": "Bermudian Dollar",
        "country": "Bermuda",
        "countryCode": "BM",
        "flag": "https://flagsapi.com/BM/flat/64.png"
    },
    {
        "code": "BND",
        "name": "Brunei Dollar",
        "country": "Brunei Darussalam",
        "countryCode": "BN",
        "flag": "https://flagsapi.com/BN/flat/64.png"
    },
    {
        "code": "BOB",
        "name": "Bolivian Boliviano",
        "country": "Bolivia",
        "countryCode": "BO",
        "flag": "https://flagsapi.com/BO/flat/64.png"
    },
    {
        "code": "BRL",
        "name": "Brazilian Real",
        "country": "Brazil",
        "countryCode": "BR",
        "flag": "https://flagsapi.com/BR/flat/64.png"
    },
    {
        "code": "BSD",
        "name": "Bahamian Dollar",
        "country": "Bahamas",
        "countryCode": "BS",
        "flag": "https://flagsapi.com/BS/flat/64.png"
    },
    {
        "code": "BTN",
        "name": "Bhutanese Ngultrum",
        "country": "Bhutan",
        "countryCode": "BT",
        "flag": "https://flagsapi.com/BT/flat/64.png"
    },
    {
        "code": "BWP",
        "name": "Botswana Pula",
        "country": "Botswana",
        "countryCode": "BW",
        "flag": "https://flagsapi.com/BW/flat/64.png"
    },
    {
        "code": "BYN",
        "name": "Belarusian Ruble",
        "country": "Belarus",
        "countryCode": "BY",
        "flag": "https://flagsapi.com/BY/flat/64.png"
    },
    {
        "code": "BZD",
        "name": "Belize Dollar",
        "country": "Belize",
        "countryCode": "BZ",
        "flag": "https://flagsapi.com/BZ/flat/64.png"
    },
    {
        "code": "CAD",
        "name": "Canadian Dollar",
        "country": "Canada",
        "countryCode": "CA",
        "flag": "https://flagsapi.com/CA/flat/64.png"
    },
    {
        "code": "CDF",
        "name": "Congolese Franc",
        "country": "Democratic Republic of the Congo",
        "countryCode": "CD",
        "flag": "https://flagsapi.com/CD/flat/64.png"
    },
    {
        "code": "CHF",
        "name": "Swiss Franc",
        "country": "Switzerland",
        "countryCode": "CH",
        "flag": "https://flagsapi.com/CH/flat/64.png"
    },
    {
        "code": "CLP",
        "name": "Chilean Peso",
        "country": "Chile",
        "countryCode": "CL",
        "flag": "https://flagsapi.com/CL/flat/64.png"
    },
    {
        "code": "CNY",
        "name": "Chinese Renminbi",
        "country": "China",
        "countryCode": "CN",
        "flag": "https://flagsapi.com/CN/flat/64.png"
    },
    {
        "code": "COP",
        "name": "Colombian Peso",
        "country": "Colombia",
        "countryCode": "CO",
        "flag": "https://flagsapi.com/CO/flat/64.png"
    },
    {
        "code": "CRC",
        "name": "Costa Rican Colon",
        "country": "Costa Rica",
        "countryCode": "CR",
        "flag": "https://flagsapi.com/CR/flat/64.png"
    },
    {
        "code": "CUP",
        "name": "Cuban Peso",
        "country": "Cuba",
        "countryCode": "CU",
        "flag": "https://flagsapi.com/CU/flat/64.png"
    },
    {
        "code": "CVE",
        "name": "Cape Verdean Escudo",
        "country": "Cape Verde",
        "countryCode": "CV",
        "flag": "https://flagsapi.com/CV/flat/64.png"
    },
    {
        "code": "CZK",
        "name": "Czech Koruna",
        "country": "Czech Republic",
        "countryCode": "CZ",
        "flag": "https://flagsapi.com/CZ/flat/64.png"
    },
    {
        "code": "DJF",
        "name": "Djiboutian Franc",
        "country": "Djibouti",
        "countryCode": "DJ",
        "flag": "https://flagsapi.com/DJ/flat/64.png"
    },
    {
        "code": "DKK",
        "name": "Danish Krone",
        "country": "Denmark",
        "countryCode": "DK",
        "flag": "https://flagsapi.com/DK/flat/64.png"
    },
    {
        "code": "DOP",
        "name": "Dominican Peso",
        "country": "Dominican Republic",
        "countryCode": "DO",
        "flag": "https://flagsapi.com/DO/flat/64.png"
    },
    {
        "code": "DZD",
        "name": "Algerian Dinar",
        "country": "Algeria",
        "countryCode": "DZ",
        "flag": "https://flagsapi.com/DZ/flat/64.png"
    },
    {
        "code": "EGP",
        "name": "Egyptian Pound",
        "country": "Egypt",
        "countryCode": "EG",
        "flag": "https://flagsapi.com/EG/flat/64.png"
    },
    {
        "code": "ERN",
        "name": "Eritrean Nakfa",
        "country": "Eritrea",
        "countryCode": "ER",
        "flag": "https://flagsapi.com/ER/flat/64.png"
    },
    {
        "code": "ETB",
        "name": "Ethiopian Birr",
        "country": "Ethiopia",
        "countryCode": "ET",
        "flag": "https://flagsapi.com/ET/flat/64.png"
    },
    {
        "code": "EUR",
        "name": "Euro",
        "country": "European Union",
        "countryCode": "eu",
        "flag": "https://flagsapi.com/EU/flat/64.png"
    },
    {
        "code": "FJD",
        "name": "Fiji Dollar",
        "country": "Fiji",
        "countryCode": "FJ",
        "flag": "https://flagsapi.com/FJ/flat/64.png"
    },
    {
        "code": "FKP",
        "name": "Falkland Islands Pound",
        "country": "Falkland Islands",
        "countryCode": "FK",
        "flag": "https://flagsapi.com/FK/flat/64.png"
    },
    {
        "code": "FOK",
        "name": "Faroese Króna",
        "country": "Faroe Islands",
        "countryCode": "FO",
        "flag": "https://flagsapi.com/FO/flat/64.png"
    },
    {
        "code": "GBP",
        "name": "Pound Sterling",
        "country": "United Kingdom",
        "countryCode": "GB",
        "flag": "https://flagsapi.com/GB/flat/64.png"
    },
    {
        "code": "GEL",
        "name": "Georgian Lari",
        "country": "Georgia",
        "countryCode": "GE",
        "flag": "https://flagsapi.com/GE/flat/64.png"
    },
    {
        "code": "GGP",
        "name": "Guernsey Pound",
        "country": "Guernsey",
        "countryCode": "GG",
        "flag": "https://flagsapi.com/GG/flat/64.png"
    },
    {
        "code": "GHS",
        "name": "Ghanaian Cedi",
        "country": "Ghana",
        "countryCode": "GH",
        "flag": "https://flagsapi.com/GH/flat/64.png"
    },
    {
        "code": "GIP",
        "name": "Gibraltar Pound",
        "country": "Gibraltar",
        "countryCode": "GI",
        "flag": "https://flagsapi.com/GI/flat/64.png"
    },
    {
        "code": "GMD",
        "name": "Gambian Dalasi",
        "country": "The Gambia",
        "countryCode": "GM",
        "flag": "https://flagsapi.com/GM/flat/64.png"
    },
    {
        "code": "GNF",
        "name": "Guinean Franc",
        "country": "Guinea",
        "countryCode": "GN",
        "flag": "https://flagsapi.com/GN/flat/64.png"
    },
    {
        "code": "GTQ",
        "name": "Guatemalan Quetzal",
        "country": "Guatemala",
        "countryCode": "GT",
        "flag": "https://flagsapi.com/GT/flat/64.png"
    },
    {
        "code": "GYD",
        "name": "Guyanese Dollar",
        "country": "Guyana",
        "countryCode": "GY",
        "flag": "https://flagsapi.com/GY/flat/64.png"
    },
    {
        "code": "HKD",
        "name": "Hong Kong Dollar",
        "country": "Hong Kong",
        "countryCode": "HK",
        "flag": "https://flagsapi.com/HK/flat/64.png"
    },
    {
        "code": "HNL",
        "name": "Honduran Lempira",
        "country": "Honduras",
        "countryCode": "HN",
        "flag": "https://flagsapi.com/HN/flat/64.png"
    },
    {
        "code": "HRK",
        "name": "Croatian Kuna",
        "country": "Croatia",
        "countryCode": "HR",
        "flag": "https://flagsapi.com/HR/flat/64.png"
    },
    {
        "code": "HTG",
        "name": "Haitian Gourde",
        "country": "Haiti",
        "countryCode": "HT",
        "flag": "https://flagsapi.com/HT/flat/64.png"
    },
    {
        "code": "HUF",
        "name": "Hungarian Forint",
        "country": "Hungary",
        "countryCode": "HU",
        "flag": "https://flagsapi.com/HU/flat/64.png"
    },
    {
        "code": "IDR",
        "name": "Indonesian Rupiah",
        "country": "Indonesia",
        "countryCode": "ID",
        "flag": "https://flagsapi.com/ID/flat/64.png"
    },
    {
        "code": "ILS",
        "name": "Israeli New Shekel",
        "country": "Israel",
        "countryCode": "IL",
        "flag": "https://flagsapi.com/IL/flat/64.png"
    },
    {
        "code": "IMP",
        "name": "Manx Pound",
        "country": "Isle of Man",
        "countryCode": "IM",
        "flag": "https://flagsapi.com/IM/flat/64.png"
    },
    {
        "code": "INR",
        "name": "Indian Rupee",
        "country": "India",
        "countryCode": "IN",
        "flag": "https://flagsapi.com/IN/flat/64.png"
    },
    {
        "code": "IQD",
        "name": "Iraqi Dinar",
        "country": "Iraq",
        "countryCode": "IQ",
        "flag": "https://flagsapi.com/IQ/flat/64.png"
    },
    {
        "code": "IRR",
        "name": "Iranian Rial",
        "country": "Iran",
        "countryCode": "IR",
        "flag": "https://flagsapi.com/IR/flat/64.png"
    },
    {
        "code": "ISK",
        "name": "Icelandic Króna",
        "country": "Iceland",
        "countryCode": "IS",
        "flag": "https://flagsapi.com/IS/flat/64.png"
    },
    {
        "code": "JEP",
        "name": "Jersey Pound",
        "country": "Jersey",
        "countryCode": "JE",
        "flag": "https://flagsapi.com/JE/flat/64.png"
    },
    {
        "code": "JMD",
        "name": "Jamaican Dollar",
        "country": "Jamaica",
        "countryCode": "JM",
        "flag": "https://flagsapi.com/JM/flat/64.png"
    },
    {
        "code": "JOD",
        "name": "Jordanian Dinar",
        "country": "Jordan",
        "countryCode": "JO",
        "flag": "https://flagsapi.com/JO/flat/64.png"
    },
    {
        "code": "JPY",
        "name": "Japanese Yen",
        "country": "Japan",
        "countryCode": "JP",
        "flag": "https://flagsapi.com/JP/flat/64.png"
    },
    {
        "code": "KES",
        "name": "Kenyan Shilling",
        "country": "Kenya",
        "countryCode": "KE",
        "flag": "https://flagsapi.com/KE/flat/64.png"
    },
    {
        "code": "KGS",
        "name": "Kyrgyzstani Som",
        "country": "Kyrgyzstan",
        "countryCode": "KG",
        "flag": "https://flagsapi.com/KG/flat/64.png"
    },
    {
        "code": "KHR",
        "name": "Cambodian Riel",
        "country": "Cambodia",
        "countryCode": "KH",
        "flag": "https://flagsapi.com/KH/flat/64.png"
    },
    {
        "code": "KID",
        "name": "Kiribati Dollar",
        "country": "Kiribati",
        "countryCode": "KI",
        "flag": "https://flagsapi.com/KI/flat/64.png"
    },
    {
        "code": "KMF",
        "name": "Comorian Franc",
        "country": "Comoros",
        "countryCode": "KM",
        "flag": "https://flagsapi.com/KM/flat/64.png"
    },
    {
        "code": "KRW",
        "name": "South Korean Won",
        "country": "South Korea",
        "countryCode": "KR",
        "flag": "https://flagsapi.com/KR/flat/64.png"
    },
    {
        "code": "KWD",
        "name": "Kuwaiti Dinar",
        "country": "Kuwait",
        "countryCode": "KW",
        "flag": "https://flagsapi.com/KW/flat/64.png"
    },
    {
        "code": "KYD",
        "name": "Cayman Islands Dollar",
        "country": "Cayman Islands",
        "countryCode": "KY",
        "flag": "https://flagsapi.com/KY/flat/64.png"
    },
    {
        "code": "KZT",
        "name": "Kazakhstani Tenge",
        "country": "Kazakhstan",
        "countryCode": "KZ",
        "flag": "https://flagsapi.com/KZ/flat/64.png"
    },
    {
        "code": "LAK",
        "name": "Lao Kip",
        "country": "Laos",
        "countryCode": "LA",
        "flag": "https://flagsapi.com/LA/flat/64.png"
    },
    {
        "code": "LBP",
        "name": "Lebanese Pound",
        "country": "Lebanon",
        "countryCode": "LB",
        "flag": "https://flagsapi.com/LB/flat/64.png"
    },
    {
        "code": "LKR",
        "name": "Sri Lanka Rupee",
        "country": "Sri Lanka",
        "countryCode": "LK",
        "flag": "https://flagsapi.com/LK/flat/64.png"
    },
    {
        "code": "LRD",
        "name": "Liberian Dollar",
        "country": "Liberia",
        "countryCode": "LR",
        "flag": "https://flagsapi.com/LR/flat/64.png"
    },
    {
        "code": "LSL",
        "name": "Lesotho Loti",
        "country": "Lesotho",
        "countryCode": "LS",
        "flag": "https://flagsapi.com/LS/flat/64.png"
    },
    {
        "code": "LYD",
        "name": "Libyan Dinar",
        "country": "Libya",
        "countryCode": "LY",
        "flag": "https://flagsapi.com/LY/flat/64.png"
    },
    {
        "code": "MAD",
        "name": "Moroccan Dirham",
        "country": "Morocco",
        "countryCode": "MA",
        "flag": "https://flagsapi.com/MA/flat/64.png"
    },
    {
        "code": "MDL",
        "name": "Moldovan Leu",
        "country": "Moldova",
        "countryCode": "MD",
        "flag": "https://flagsapi.com/MD/flat/64.png"
    },
    {
        "code": "MGA",
        "name": "Malagasy Ariary",
        "country": "Madagascar",
        "countryCode": "MG",
        "flag": "https://flagsapi.com/MG/flat/64.png"
    },
    {
        "code": "MKD",
        "name": "Macedonian Denar",
        "country": "North Macedonia",
        "countryCode": "MK",
        "flag": "https://flagsapi.com/MK/flat/64.png"
    },
    {
        "code": "MMK",
        "name": "Burmese Kyat",
        "country": "Myanmar",
        "countryCode": "MM",
        "flag": "https://flagsapi.com/MM/flat/64.png"
    },
    {
        "code": "MNT",
        "name": "Mongolian Tögrög",
        "country": "Mongolia",
        "countryCode": "MN",
        "flag": "https://flagsapi.com/MN/flat/64.png"
    },
    {
        "code": "MOP",
        "name": "Macanese Pataca",
        "country": "Macau",
        "countryCode": "MO",
        "flag": "https://flagsapi.com/MO/flat/64.png"
    },
    {
        "code": "MRU",
        "name": "Mauritanian Ouguiya",
        "country": "Mauritania",
        "countryCode": "MR",
        "flag": "https://flagsapi.com/MR/flat/64.png"
    },
    {
        "code": "MUR",
        "name": "Mauritian Rupee",
        "country": "Mauritius",
        "countryCode": "MU",
        "flag": "https://flagsapi.com/MU/flat/64.png"
    },
    {
        "code": "MVR",
        "name": "Maldivian Rufiyaa",
        "country": "Maldives",
        "countryCode": "MV",
        "flag": "https://flagsapi.com/MV/flat/64.png"
    },
    {
        "code": "MWK",
        "name": "Malawian Kwacha",
        "country": "Malawi",
        "countryCode": "MW",
        "flag": "https://flagsapi.com/MW/flat/64.png"
    },
    {
        "code": "MXN",
        "name": "Mexican Peso",
        "country": "Mexico",
        "countryCode": "MX",
        "flag": "https://flagsapi.com/MX/flat/64.png"
    },
    {
        "code": "MYR",
        "name": "Malaysian Ringgit",
        "country": "Malaysia",
        "countryCode": "MY",
        "flag": "https://flagsapi.com/MY/flat/64.png"
    },
    {
        "code": "MZN",
        "name": "Mozambican Metical",
        "country": "Mozambique",
        "countryCode": "MZ",
        "flag": "https://flagsapi.com/MZ/flat/64.png"
    },
    {
        "code": "NAD",
        "name": "Namibian Dollar",
        "country": "Namibia",
        "countryCode": "NA",
        "flag": "https://flagsapi.com/NA/flat/64.png"
    },
    {
        "code": "NGN",
        "name": "Nigerian Naira",
        "country": "Nigeria",
        "countryCode": "NG",
        "flag": "https://flagsapi.com/NG/flat/64.png"
    },
    {
        "code": "NIO",
        "name": "Nicaraguan Córdoba",
        "country": "Nicaragua",
        "countryCode": "NI",
        "flag": "https://flagsapi.com/NI/flat/64.png"
    },
    {
        "code": "NOK",
        "name": "Norwegian Krone",
        "country": "Norway",
        "countryCode": "NO",
        "flag": "https://flagsapi.com/NO/flat/64.png"
    },
    {
        "code": "NPR",
        "name": "Nepalese Rupee",
        "country": "Nepal",
        "countryCode": "NP",
        "flag": "https://flagsapi.com/NP/flat/64.png"
    },
    {
        "code": "NZD",
        "name": "New Zealand Dollar",
        "country": "New Zealand",
        "countryCode": "NZ",
        "flag": "https://flagsapi.com/NZ/flat/64.png"
    },
    {
        "code": "OMR",
        "name": "Omani Rial",
        "country": "Oman",
        "countryCode": "OM",
        "flag": "https://flagsapi.com/OM/flat/64.png"
    },
    {
        "code": "PAB",
        "name": "Panamanian Balboa",
        "country": "Panama",
        "countryCode": "PA",
        "flag": "https://flagsapi.com/PA/flat/64.png"
    },
    {
        "code": "PEN",
        "name": "Peruvian Sol",
        "country": "Peru",
        "countryCode": "PE",
        "flag": "https://flagsapi.com/PE/flat/64.png"
    },
    {
        "code": "PGK",
        "name": "Papua New Guinean Kina",
        "country": "Papua New Guinea",
        "countryCode": "PG",
        "flag": "https://flagsapi.com/PG/flat/64.png"
    },
    {
        "code": "PHP",
        "name": "Philippine Peso",
        "country": "Philippines",
        "countryCode": "PH",
        "flag": "https://flagsapi.com/PH/flat/64.png"
    },
    {
        "code": "PKR",
        "name": "Pakistani Rupee",
        "country": "Pakistan",
        "countryCode": "PK",
        "flag": "https://flagsapi.com/PK/flat/64.png"
    },
    {
        "code": "PLN",
        "name": "Polish Złoty",
        "country": "Poland",
        "countryCode": "PL",
        "flag": "https://flagsapi.com/PL/flat/64.png"
    },
    {
        "code": "PYG",
        "name": "Paraguayan Guaraní",
        "country": "Paraguay",
        "countryCode": "PY",
        "flag": "https://flagsapi.com/PY/flat/64.png"
    },
    {
        "code": "QAR",
        "name": "Qatari Riyal",
        "country": "Qatar",
        "countryCode": "QA",
        "flag": "https://flagsapi.com/QA/flat/64.png"
    },
    {
        "code": "RON",
        "name": "Romanian Leu",
        "country": "Romania",
        "countryCode": "RO",
        "flag": "https://flagsapi.com/RO/flat/64.png"
    },
    {
        "code": "RSD",
        "name": "Serbian Dinar",
        "country": "Serbia",
        "countryCode": "RS",
        "flag": "https://flagsapi.com/RS/flat/64.png"
    },
    {
        "code": "RUB",
        "name": "Russian Ruble",
        "country": "Russia",
        "countryCode": "RU",
        "flag": "https://flagsapi.com/RU/flat/64.png"
    },
    {
        "code": "RWF",
        "name": "Rwandan Franc",
        "country": "Rwanda",
        "countryCode": "RW",
        "flag": "https://flagsapi.com/RW/flat/64.png"
    },
    {
        "code": "SAR",
        "name": "Saudi Riyal",
        "country": "Saudi Arabia",
        "countryCode": "SA",
        "flag": "https://flagsapi.com/SA/flat/64.png"
    },
    {
        "code": "SBD",
        "name": "Solomon Islands Dollar",
        "country": "Solomon Islands",
        "countryCode": "SB",
        "flag": "https://flagsapi.com/SB/flat/64.png"
    },
    {
        "code": "SCR",
        "name": "Seychellois Rupee",
        "country": "Seychelles",
        "countryCode": "SC",
        "flag": "https://flagsapi.com/SC/flat/64.png"
    },
    {
        "code": "SDG",
        "name": "Sudanese Pound",
        "country": "Sudan",
        "countryCode": "SD",
        "flag": "https://flagsapi.com/SD/flat/64.png"
    },
    {
        "code": "SEK",
        "name": "Swedish Krona",
        "country": "Sweden",
        "countryCode": "SE",
        "flag": "https://flagsapi.com/SE/flat/64.png"
    },
    {
        "code": "SGD",
        "name": "Singapore Dollar",
        "country": "Singapore",
        "countryCode": "SG",
        "flag": "https://flagsapi.com/SG/flat/64.png"
    },
    {
        "code": "SHP",
        "name": "Saint Helena Pound",
        "country": "Saint Helena",
        "countryCode": "SH",
        "flag": "https://flagsapi.com/SH/flat/64.png"
    },
    {
        "code": "SLL",
        "name": "Sierra Leonean Leone",
        "country": "Sierra Leone",
        "countryCode": "SL",
        "flag": "https://flagsapi.com/SL/flat/64.png"
    },
    {
        "code": "SOS",
        "name": "Somali Shilling",
        "country": "Somalia",
        "countryCode": "SO",
        "flag": "https://flagsapi.com/SO/flat/64.png"
    },
    {
        "code": "SRD",
        "name": "Surinamese Dollar",
        "country": "Suriname",
        "countryCode": "SR",
        "flag": "https://flagsapi.com/SR/flat/64.png"
    },
    {
        "code": "SSP",
        "name": "South Sudanese Pound",
        "country": "South Sudan",
        "countryCode": "SS",
        "flag": "https://flagsapi.com/SS/flat/64.png"
    },
    {
        "code": "STN",
        "name": "Sao Tome and Principe Dobra",
        "country": "Sao Tome and Principe",
        "countryCode": "ST",
        "flag": "https://flagsapi.com/ST/flat/64.png"
    },
    {
        "code": "SYP",
        "name": "Syrian Pound",
        "country": "Syria",
        "countryCode": "SY",
        "flag": "https://flagsapi.com/SY/flat/64.png"
    },
    {
        "code": "SZL",
        "name": "Eswatini Lilangeni",
        "country": "Eswatini",
        "countryCode": "SZ",
        "flag": "https://flagsapi.com/SZ/flat/64.png"
    },
    {
        "code": "THB",
        "name": "Thai Baht",
        "country": "Thailand",
        "countryCode": "TH",
        "flag": "https://flagsapi.com/TH/flat/64.png"
    },
    {
        "code": "TJS",
        "name": "Tajikistani Somoni",
        "country": "Tajikistan",
        "countryCode": "TJ",
        "flag": "https://flagsapi.com/TJ/flat/64.png"
    },
    {
        "code": "TMT",
        "name": "Turkmenistan Manat",
        "country": "Turkmenistan",
        "countryCode": "TM",
        "flag": "https://flagsapi.com/TM/flat/64.png"
    },
    {
        "code": "TND",
        "name": "Tunisian Dinar",
        "country": "Tunisia",
        "countryCode": "TN",
        "flag": "https://flagsapi.com/TN/flat/64.png"
    },
    {
        "code": "TOP",
        "name": "Tongan Paʻanga",
        "country": "Tonga",
        "countryCode": "TO",
        "flag": "https://flagsapi.com/TO/flat/64.png"
    },
    {
        "code": "TRY",
        "name": "Turkish Lira",
        "country": "Turkey",
        "countryCode": "TR",
        "flag": "https://flagsapi.com/TR/flat/64.png"
    },
    {
        "code": "TTD",
        "name": "Trinidad and Tobago Dollar",
        "country": "Trinidad and Tobago",
        "countryCode": "TT",
        "flag": "https://flagsapi.com/TT/flat/64.png"
    },
    {
        "code": "TVD",
        "name": "Tuvaluan Dollar",
        "country": "Tuvalu",
        "countryCode": "TV",
        "flag": "https://flagsapi.com/TV/flat/64.png"
    },
    {
        "code": "TWD",
        "name": "New Taiwan Dollar",
        "country": "Taiwan",
        "countryCode": "TW",
        "flag": "https://flagsapi.com/TW/flat/64.png"
    },
    {
        "code": "TZS",
        "name": "Tanzanian Shilling",
        "country": "Tanzania",
        "countryCode": "TZ",
        "flag": "https://flagsapi.com/TZ/flat/64.png"
    },
    {
        "code": "UAH",
        "name": "Ukrainian Hryvnia",
        "country": "Ukraine",
        "countryCode": "UA",
        "flag": "https://flagsapi.com/UA/flat/64.png"
    },
    {
        "code": "UGX",
        "name": "Ugandan Shilling",
        "country": "Uganda",
        "countryCode": "UG",
        "flag": "https://flagsapi.com/UG/flat/64.png"
    },
    {
        "code": "USD",
        "name": "United States Dollar",
        "country": "United States",
        "countryCode": "US",
        "flag": "https://flagsapi.com/US/flat/64.png"
    },
    {
        "code": "UYU",
        "name": "Uruguayan Peso",
        "country": "Uruguay",
        "countryCode": "UY",
        "flag": "https://flagsapi.com/UY/flat/64.png"
    },
    {
        "code": "UZS",
        "name": "Uzbekistani So'm",
        "country": "Uzbekistan",
        "countryCode": "UZ",
        "flag": "https://flagsapi.com/UZ/flat/64.png"
    },
    {
        "code": "VES",
        "name": "Venezuelan Bolíconst Soberano",
        "country": "Venezuela",
        "countryCode": "VE",
        "flag": "https://flagsapi.com/VE/flat/64.png"
    },
    {
        "code": "VND",
        "name": "Vietnamese Đồng",
        "country": "Vietnam",
        "countryCode": "VN",
        "flag": "https://flagsapi.com/VN/flat/64.png"
    },
    {
        "code": "VUV",
        "name": "Vanuatu Vatu",
        "country": "Vanuatu",
        "countryCode": "VU",
        "flag": "https://flagsapi.com/VU/flat/64.png"
    },
    {
        "code": "WST",
        "name": "Samoan Tālā",
        "country": "Samoa",
        "countryCode": "WS",
        "flag": "https://flagsapi.com/WS/flat/64.png"
    },
    {
        "code": "XOF",
        "name": "West African CFA franc",
        "country": "CFA",
        "countryCode": "CF",
        "flag": "https://flagsapi.com/CF/flat/64.png"
    },
    {
        "code": "YER",
        "name": "Yemeni Rial",
        "country": "Yemen",
        "countryCode": "YE",
        "flag": "https://flagsapi.com/YE/flat/64.png"
    },
    {
        "code": "ZAR",
        "name": "South African Rand",
        "country": "South Africa",
        "countryCode": "ZA",
        "flag": "https://flagsapi.com/ZA/flat/64.png"
    },
    {
        "code": "ZMW",
        "name": "Zambian Kwacha",
        "country": "Zambia",
        "countryCode": "ZM",
        "flag": "https://flagsapi.com/ZM/flat/64.png"
    },
    {
        "code": "ZWL",
        "name": "Zimbabwean Dollar",
        "country": "Zimbabwe",
        "countryCode": "ZW",
        "flag": "https://flagsapi.com/ZW/flat/64.png"
    }
]

export default currencies;

--- END OF FILE: src\components\currencies.js ---

================================================================================

    └── hooks/
            ├── contact.js
            ├── getUsers.js
            ├── invite.js
            ├── payments.js
            ├── paymentsShareData.js
            ├── reminder.js
            ├── schedule.js
            ├── shares.js
            ├── transactions.js

--- START OF FILE: src\hooks\contact.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL

export const sendContactMessage = async (formData) => {
    const response = await axios.post(`${API_URL}/api/contact`, formData)
    return response.data;
}

--- END OF FILE: src\hooks\contact.js ---

================================================================================


--- START OF FILE: src\hooks\getUsers.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

// Function to get the auth token
const getAuthHeaders = () => {
    const token = localStorage.getItem("token");
    if (!token) return {};
    return {
        Authorization: `Bearer ${token}`,
    };
};

// Fucntion for fetching users
export const fetchUsers = async () => {
    const res = await axios.get(`${API_URL}/api/users`, {
        headers: getAuthHeaders(),
    });
    return res.data.users;
}

// Function to delete a user
export const deleteUsers = async (userId) => {
    const res = await axios.delete(`${API_URL}/api/delete-user/${userId}`, {
        headers: getAuthHeaders(),
    });
    return res.data;
}

--- END OF FILE: src\hooks\getUsers.js ---

================================================================================


--- START OF FILE: src\hooks\invite.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

export const sendInvite = async (data) => {
    const token = localStorage.getItem("token");
    const response = await axios.post(`${API_URL}/api/invite`, data, {
        headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
        },
    });
    return response.data;
}

--- END OF FILE: src\hooks\invite.js ---

================================================================================


--- START OF FILE: src\hooks\payments.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

const getApiClient = () => {
    const token = localStorage.getItem("token");
    const apiClient = axios.create({
        baseURL: API_URL,
        headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
        },
    });
    return apiClient;
};

// 1. READ: Fetch all completed payments
export const fetchPaymentsDone = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.get("/api/payments-done");
    return Array.isArray(data.payments) ? data.payments : [];
};

// 2. CREATE: Add a new payment
export const addPaymentDone = async (newPaymentData) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.post("/api/payments-done", newPaymentData);
    return data;
};

// 3. DELETE: Delete a single payment by ID
export const deletePaymentDone = async (paymentId) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete(`/api/payments-done/${paymentId}`);
    return data;
};

// 4. DELETE ALL: Delete all completed payments
export const deleteAllPaymentsDone = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete("/api/payments-done");
    return data;
};

--- END OF FILE: src\hooks\payments.js ---

================================================================================


--- START OF FILE: src\hooks\paymentsShareData.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

// Helper to create an authenticated axios instance
const getApiClient = () => {
    const token = localStorage.getItem("token");
    return axios.create({
        baseURL: API_URL,
        headers: {
            Authorization: `Bearer ${token}`,
        },
    });
};

// 1. READ: Fetch all payments for a specific share
export const fetchPaymentsForShare = async (shareId) => {
    if (!shareId) return []; // Don't fetch if there's no ID
    const apiClient = getApiClient();
    const { data } = await apiClient.get(`/api/shares/${shareId}/payments`);
    return data.payments || [];
};

// 2. CREATE: Add a new payment to a specific share (handles FormData)
export const addPaymentToShare = async ({ shareId, paymentFormData }) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.post(`/api/shares/${shareId}/payments`, paymentFormData, {
        headers: {
            // No need to set Content-Type for FormData, axios handles it
        },
    });
    return data;
};

// 3. DELETE: Delete a single payment by its own ID
export const deletePayment = async (paymentId) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete(`/api/payments/${paymentId}`);
    return data;
};

--- END OF FILE: src\hooks\paymentsShareData.js ---

================================================================================


--- START OF FILE: src\hooks\reminder.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

export const sendReminder = async (reminderData) => {
    const response = await axios.post(`${API_URL}/api/send-reminder`, reminderData, {
        headers: { "Content-Type": "application/json" },
    });
    return response.data;
}

--- END OF FILE: src\hooks\reminder.js ---

================================================================================


--- START OF FILE: src\hooks\schedule.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

const getApiClient = () => {
    const token = localStorage.getItem("token");
    return axios.create({
        baseURL: API_URL,
        headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
        },
    });
};

// 1. READ: Fetch all payment schedules
export const fetchSchedules = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.get("/api/schedules");
    return Array.isArray(data.schedules) ? data.schedules : [];
};

// 2. CREATE: Add a new payment schedule
export const addSchedule = async (scheduleData) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.post("/api/schedule-payment", scheduleData);
    return data;
};

// 3. DELETE: Delete a single schedule by ID
export const deleteSchedule = async (scheduleId) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete(`/api/schedule/${scheduleId}`);
    return data;
};

// 4. DELETE ALL: Delete all payment schedules
export const deleteAllSchedules = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete("/api/schedules");
    return data;
};

--- END OF FILE: src\hooks\schedule.js ---

================================================================================


--- START OF FILE: src\hooks\shares.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

const getApiClient = () => {
    const token = localStorage.getItem("token");
    return axios.create({
        baseURL: API_URL,
        headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
        },
    });
};

export const fetchShares = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.get("/api/shares");
    return data.shares || [];
};

export const fetchRecipients = async () => {
    const apiClient = getApiClient();
    const { data } = await apiClient.get("/api/shares/recipients");
    return data.recipients || [];
};

export const createShare = async (shareData) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.post("/api/shares", shareData);
    return data;
};

export const deleteShare = async (shareId) => {
    const apiClient = getApiClient();
    const { data } = await apiClient.delete(`/api/shares/${shareId}`);
    return data;
};

--- END OF FILE: src\hooks\shares.js ---

================================================================================


--- START OF FILE: src\hooks\transactions.js ---

import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

const getAuthHeaders = () => {
    const token = localStorage.getItem("token");
    return { Authorization: `Bearer ${token}` };
}

export const fetchTransactions = async () => {
    const { data } = await axios.get(`${API_URL}/api/transactions`, {
        headers: getAuthHeaders(),
    });
    return data;
}

export const addTransactions = async (formData) => {
    const { data } = await axios.post(`${API_URL}/api/transactions`, formData, {
        headers: {
            ...getAuthHeaders(),
            "Content-Type": "multipart/form-data",
        },
    });
    return data;
}

export const deleteTransaction = async (transactionId) => {
    const { data } = await axios.delete(`${API_URL}/api/transactions/${transactionId}`, {
        headers: getAuthHeaders(),
    });
    return data;
};

export const deleteAllTransactions = async () => {
    const { data } = await axios.delete(`${API_URL}/api/transactions`, {
        headers: getAuthHeaders(),
    });
    return data;
};

--- END OF FILE: src\hooks\transactions.js ---

================================================================================

    └── screens/
            ├── AdminDashboard.jsx
            ├── UserDashboard.jsx

--- START OF FILE: src\screens\AdminDashboard.jsx ---

import Sidebar from "../components/Sidebar";
import HeroNav from "../components/HeroNav";
import { Outlet } from "react-router-dom";

const AdminDashboard = () => {
    return (
        <div className="flex h-screen">
            <Sidebar role="admin" />
            <div className="flex-1 flex flex-col">
                <HeroNav role="admin" />
                <div className="p-4 flex-1 overflow-y-auto">
                    <Outlet />
                </div>
            </div>
        </div>
    );
};

export default AdminDashboard;


--- END OF FILE: src\screens\AdminDashboard.jsx ---

================================================================================


--- START OF FILE: src\screens\UserDashboard.jsx ---

import Sidebar from "../components/Sidebar";
import HeroNav from "../components/HeroNav";
import { Outlet } from "react-router-dom";

const UserDashboard = () => {
  return (
    <div className="flex h-screen">
      <Sidebar role="user" />
      <div className="flex-1 flex flex-col">
        <HeroNav role="user" />
        <div className="px-4 sm:p-4 flex-1 overflow-y-auto">
          <Outlet />
        </div>
      </div>
    </div>
  );
};

export default UserDashboard;


--- END OF FILE: src\screens\UserDashboard.jsx ---

================================================================================

